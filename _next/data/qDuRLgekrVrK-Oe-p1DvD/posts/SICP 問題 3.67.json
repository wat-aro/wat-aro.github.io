{"pageProps":{"title":"SICP 問題 3.67","published":"2015/12/15","tags":["scheme","SICP"],"content":"<p>二通りやってみました．</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synComment\">;; interleave</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>pairs s t<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>cons-stream\n</span><span class=\"code-line\">   <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>stream-car t<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">   <span class=\"synSpecial\">(</span>interleave\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>interleave <span class=\"synSpecial\">(</span>stream-map <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)</span> x<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">                            <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">                <span class=\"synSpecial\">(</span>stream-map <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> x <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">                            <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>pairs <span class=\"synSpecial\">(</span>stream-cdr s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">)))))</span>\n</span></code></pre>\n<pre class=\"code\" data-lang=\"\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">gosh> (stream-head (pairs integers integers) 20)\n</span><span class=\"code-line\">(1 1)\n</span><span class=\"code-line\">(1 2)\n</span><span class=\"code-line\">(2 2)\n</span><span class=\"code-line\">(2 1)\n</span><span class=\"code-line\">(2 3)\n</span><span class=\"code-line\">(1 3)\n</span><span class=\"code-line\">(3 3)\n</span><span class=\"code-line\">(3 1)\n</span><span class=\"code-line\">(3 2)\n</span><span class=\"code-line\">(1 4)\n</span><span class=\"code-line\">(3 4)\n</span><span class=\"code-line\">(4 1)\n</span><span class=\"code-line\">(2 4)\n</span><span class=\"code-line\">(1 5)\n</span><span class=\"code-line\">(4 4)\n</span><span class=\"code-line\">(5 1)\n</span><span class=\"code-line\">(4 2)\n</span><span class=\"code-line\">(1 6)\n</span><span class=\"code-line\">(4 3)\n</span><span class=\"code-line\">(6 1)\n</span><span class=\"code-line\">done</span></code></pre>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synComment\">;; 三つのストリームを混ぜるinterleave</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>interleave3 s1 s2 s3<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>stream-null? s1<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span>interleave s2 s3<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span>cons-stream <span class=\"synSpecial\">(</span>stream-car s1<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                   <span class=\"synSpecial\">(</span>interleave3 s2 s3 <span class=\"synSpecial\">(</span>stream-cdr s1<span class=\"synSpecial\">)))))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">;; interleave3を使う</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>pairs s t<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>cons-stream\n</span><span class=\"code-line\">   <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>stream-car t<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">   <span class=\"synSpecial\">(</span>interleave3\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>stream-map <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)</span> x<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">                <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>stream-map <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> x <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">                <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>pairs <span class=\"synSpecial\">(</span>stream-cdr s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">)))))</span>\n</span></code></pre>\n<pre class=\"code\" data-lang=\"\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">gosh> (stream-head (pairs integers integers) 20)\n</span><span class=\"code-line\">(1 1)\n</span><span class=\"code-line\">(1 2)\n</span><span class=\"code-line\">(2 1)\n</span><span class=\"code-line\">(2 2)\n</span><span class=\"code-line\">(1 3)\n</span><span class=\"code-line\">(3 1)\n</span><span class=\"code-line\">(2 3)\n</span><span class=\"code-line\">(1 4)\n</span><span class=\"code-line\">(4 1)\n</span><span class=\"code-line\">(3 2)\n</span><span class=\"code-line\">(1 5)\n</span><span class=\"code-line\">(5 1)\n</span><span class=\"code-line\">(3 3)\n</span><span class=\"code-line\">(1 6)\n</span><span class=\"code-line\">(6 1)\n</span><span class=\"code-line\">(2 4)\n</span><span class=\"code-line\">(1 7)\n</span><span class=\"code-line\">(7 1)\n</span><span class=\"code-line\">(4 2)\n</span><span class=\"code-line\">(1 8)\n</span><span class=\"code-line\">done</span></code></pre>","slug":"SICP 問題 3.67","rawContent":"\n<p>二通りやってみました．</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; interleave</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>pairs s t<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>cons-stream\n   <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>stream-car t<span class=\"synSpecial\">))</span>\n   <span class=\"synSpecial\">(</span>interleave\n    <span class=\"synSpecial\">(</span>interleave <span class=\"synSpecial\">(</span>stream-map <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)</span> x<span class=\"synSpecial\">))</span>\n                            <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">))</span>\n                <span class=\"synSpecial\">(</span>stream-map <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> x <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)))</span>\n                            <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">)))</span>\n    <span class=\"synSpecial\">(</span>pairs <span class=\"synSpecial\">(</span>stream-cdr s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">)))))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (stream-head (pairs integers integers) 20)\n(1 1)\n(1 2)\n(2 2)\n(2 1)\n(2 3)\n(1 3)\n(3 3)\n(3 1)\n(3 2)\n(1 4)\n(3 4)\n(4 1)\n(2 4)\n(1 5)\n(4 4)\n(5 1)\n(4 2)\n(1 6)\n(4 3)\n(6 1)\ndone</pre>\n\n\n\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; 三つのストリームを混ぜるinterleave</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>interleave3 s1 s2 s3<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>stream-null? s1<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span>interleave s2 s3<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span>cons-stream <span class=\"synSpecial\">(</span>stream-car s1<span class=\"synSpecial\">)</span>\n                   <span class=\"synSpecial\">(</span>interleave3 s2 s3 <span class=\"synSpecial\">(</span>stream-cdr s1<span class=\"synSpecial\">)))))</span>\n\n<span class=\"synComment\">;; interleave3を使う</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>pairs s t<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>cons-stream\n   <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>stream-car t<span class=\"synSpecial\">))</span>\n   <span class=\"synSpecial\">(</span>interleave3\n    <span class=\"synSpecial\">(</span>stream-map <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)</span> x<span class=\"synSpecial\">))</span>\n                <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">))</span>\n    <span class=\"synSpecial\">(</span>stream-map <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> x <span class=\"synSpecial\">(</span>stream-car s<span class=\"synSpecial\">)))</span>\n                <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">))</span>\n    <span class=\"synSpecial\">(</span>pairs <span class=\"synSpecial\">(</span>stream-cdr s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>stream-cdr t<span class=\"synSpecial\">)))))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (stream-head (pairs integers integers) 20)\n(1 1)\n(1 2)\n(2 1)\n(2 2)\n(1 3)\n(3 1)\n(2 3)\n(1 4)\n(4 1)\n(3 2)\n(1 5)\n(5 1)\n(3 3)\n(1 6)\n(6 1)\n(2 4)\n(1 7)\n(7 1)\n(4 2)\n(1 8)\ndone</pre>\n\n\n"},"__N_SSG":true}