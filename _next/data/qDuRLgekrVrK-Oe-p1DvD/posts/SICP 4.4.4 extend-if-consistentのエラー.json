{"pageProps":{"title":"SICP 4.4.4 extend-if-consistentのエラー","published":"2016/01/19","tags":["scheme","SICP","gauche"],"content":"<p>4.4.4の論理型プログラミングの実装を評価すると以下のエラーが出ます．</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">gosh> <span class=\"synConstant\">***</span> ERROR: Compile Error: cannot <span class=\"synIdentifier\">find</span> <span class=\"synConstant\">\"var\"</span> in <span class=\"synSpecial\">(</span><span class=\"synConstant\">\"/usr/local/Cellar/gauche/0.9.4/share/gauche-0.9/site/lib\"</span> <span class=\"synConstant\">\"/usr/local/Cellar/gauche/0.9.4/share/gauche-0.9/0.9.4/lib\"</span> <span class=\"synConstant\">\"/usr/local/Cellar/gauche/0.9.4/share/gauche/site/lib\"</span> <span class=\"synConstant\">\"/usr/local/Cellar/gauche/0.9.4/share/gauche/0.9/lib\"</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\"><span class=\"synConstant\">\"(standard input)\"</span>:1:<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>extend-if-consistent var da ...\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">Stack Trace:\n</span><span class=\"code-line\">_______________________________________\n</span><span class=\"code-line\">  <span class=\"synConstant\">0</span>  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">eval</span> expr env<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">        At line <span class=\"synConstant\">179</span> of <span class=\"synConstant\">\"/usr/local/Cellar/gauche/0.9.4/share/gauche-0.9/0.9.4/lib/gauche/interactive.scm\"</span>\n</span></code></pre>\n<p>これがextend-if-consistentのコードです．</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>extend-if-consistent var dat frame<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>binding <span class=\"synSpecial\">(</span>binding-in-frame var frame<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> binding\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span>pattern-match <span class=\"synSpecial\">(</span>binding-value binding<span class=\"synSpecial\">)</span> dat frame<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span>extend var dat frame<span class=\"synSpecial\">))))</span>\n</span></code></pre>\n<p>何も問題ないように思えます．\ndefineなのになぜvarを探しているのかわかりません．<br>\n散々迷って，このコードのvarを１つずつ変更していったところ，<br>\n最後の行のextendの次のvarを探しているようでした．<br>\nelse節なのになぜこんなところが評価されているんだと思いながらも，<br>\nこの評価機のextendの定義を先に評価したところ，extend-if-consistentの評価も通りました．<br>\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Gauche\">Gauche</a>のextendを調べてみると以下で見つかりました．</p>\n<p><a href=\"http://practical-scheme.net/gauche/man/gauche-refj_34.html\">Gauche ユーザリファレンス: 4.13 モジュール</a></p>\n<p>モジュールの継承で使われるので優先的に評価されているのでしょう．<br>\nなのでこの部分は本文中のextendの定義を先に評価してから書くようにします．</p>","slug":"SICP 4.4.4 extend-if-consistentのエラー","rawContent":"\n<p>4.4.4の論理型プログラミングの実装を評価すると以下のエラーが出ます．</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink>gosh&gt; <span class=\"synConstant\">***</span> ERROR: Compile Error: cannot <span class=\"synIdentifier\">find</span> <span class=\"synConstant\">&quot;var&quot;</span> in <span class=\"synSpecial\">(</span><span class=\"synConstant\">&quot;/usr/local/Cellar/gauche/0.9.4/share/gauche-0.9/site/lib&quot;</span> <span class=\"synConstant\">&quot;/usr/local/Cellar/gauche/0.9.4/share/gauche-0.9/0.9.4/lib&quot;</span> <span class=\"synConstant\">&quot;/usr/local/Cellar/gauche/0.9.4/share/gauche/site/lib&quot;</span> <span class=\"synConstant\">&quot;/usr/local/Cellar/gauche/0.9.4/share/gauche/0.9/lib&quot;</span><span class=\"synSpecial\">)</span>\n<span class=\"synConstant\">&quot;(standard input)&quot;</span>:1:<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>extend-if-consistent var da ...\n\nStack Trace:\n_______________________________________\n  <span class=\"synConstant\">0</span>  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">eval</span> expr env<span class=\"synSpecial\">)</span>\n        At line <span class=\"synConstant\">179</span> of <span class=\"synConstant\">&quot;/usr/local/Cellar/gauche/0.9.4/share/gauche-0.9/0.9.4/lib/gauche/interactive.scm&quot;</span>\n</pre>\n\n\n<p>これがextend-if-consistentのコードです．</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>extend-if-consistent var dat frame<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>binding <span class=\"synSpecial\">(</span>binding-in-frame var frame<span class=\"synSpecial\">)))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> binding\n        <span class=\"synSpecial\">(</span>pattern-match <span class=\"synSpecial\">(</span>binding-value binding<span class=\"synSpecial\">)</span> dat frame<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">(</span>extend var dat frame<span class=\"synSpecial\">))))</span>\n</pre>\n\n\n<p>何も問題ないように思えます．\ndefineなのになぜvarを探しているのかわかりません．<br/>\n散々迷って，このコードのvarを１つずつ変更していったところ，<br/>\n最後の行のextendの次のvarを探しているようでした．<br/>\nelse節なのになぜこんなところが評価されているんだと思いながらも，<br/>\nこの評価機のextendの定義を先に評価したところ，extend-if-consistentの評価も通りました．<br/>\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Gauche\">Gauche</a>のextendを調べてみると以下で見つかりました．</p>\n\n<p><a href=\"http://practical-scheme.net/gauche/man/gauche-refj_34.html\">Gauche &#x30E6;&#x30FC;&#x30B6;&#x30EA;&#x30D5;&#x30A1;&#x30EC;&#x30F3;&#x30B9;: 4.13 &#x30E2;&#x30B8;&#x30E5;&#x30FC;&#x30EB;</a></p>\n\n<p>モジュールの継承で使われるので優先的に評価されているのでしょう．<br/>\nなのでこの部分は本文中のextendの定義を先に評価してから書くようにします．</p>\n\n"},"__N_SSG":true}