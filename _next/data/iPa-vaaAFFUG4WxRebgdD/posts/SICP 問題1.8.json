{"pageProps":{"post":{"data":{"title":"SICP 問題1.8","published":"2015/10/03","tags":["scheme","SICP"]},"content":"\n<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%CB%A5%E5%A1%BC%A5%C8%A5%F3%CB%A1\">ニュートン法</a>で立方根を求める　<br/>\n　</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>cube-root-iter guess x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>good-enough? guess x<span class=\"synSpecial\">)</span>\n      guess\n      <span class=\"synSpecial\">(</span>cube-root-iter <span class=\"synSpecial\">(</span>cube-improve guess x<span class=\"synSpecial\">)</span>\n                 x<span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>cube-improve guess x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> x\n           <span class=\"synSpecial\">(</span>square guess<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synConstant\">2</span> guess<span class=\"synSpecial\">))</span>\n     <span class=\"synConstant\">3</span><span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>good-enough? guess x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&lt;</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">abs</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synConstant\">1.0</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> guess <span class=\"synSpecial\">(</span>cube-improve guess x<span class=\"synSpecial\">))))</span> <span class=\"synConstant\">0.001</span><span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>cube-root x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>cube-root-iter <span class=\"synConstant\">1.0</span> x<span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題1.8"},"content":"<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%CB%A5%E5%A1%BC%A5%C8%A5%F3%CB%A1\">ニュートン法</a>で立方根を求める　<br>\n　</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>cube-root-iter guess x<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>good-enough? guess x<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      guess\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span>cube-root-iter <span class=\"synSpecial\">(</span>cube-improve guess x<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                 x<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>cube-improve guess x<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> x\n</span><span class=\"code-line\">           <span class=\"synSpecial\">(</span>square guess<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synConstant\">2</span> guess<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">     <span class=\"synConstant\">3</span><span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>good-enough? guess x<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&#x3C;</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">abs</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synConstant\">1.0</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> guess <span class=\"synSpecial\">(</span>cube-improve guess x<span class=\"synSpecial\">))))</span> <span class=\"synConstant\">0.001</span><span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>cube-root x<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>cube-root-iter <span class=\"synConstant\">1.0</span> x<span class=\"synSpecial\">))</span>\n</span></code></pre>"},"__N_SSG":true}