{"pageProps":{"post":{"data":{"title":"SICP 問題 5.10","published":"2016/01/27","tags":["scheme","SICP"]},"content":"\n<p>新しく構文を追加する．<br/>\n簡単にincrementとdecrementで．</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-execution-procedure inst labels machine\n                                  pc flag stack ops<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>assign<span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>make-assign inst machine labels ops pc<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>test<span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>make-test inst machine labels ops flag pc<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>branch<span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>make-branch inst machine labels flag pc<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>goto<span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>make-goto inst machine labels pc<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>save<span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>make-save inst machine stack pc<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>restore<span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>make-restore inst machine stack pc<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>perform<span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>make-perform inst machine labels ops pc<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>increment<span class=\"synSpecial\">)</span>    <span class=\"synComment\">;increment</span>\n         <span class=\"synSpecial\">(</span>make-increment inst machine pc<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>decrement<span class=\"synSpecial\">)</span>    <span class=\"synComment\">;decrement</span>\n         <span class=\"synSpecial\">(</span>make-decrement inst machine pc<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">&quot;Unknown instruction type -- ASSEMBLE&quot;</span> inst<span class=\"synSpecial\">))))</span>\n\n<span class=\"synComment\">;;; 選択子</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>increment-reg-name name<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> name<span class=\"synSpecial\">))</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>decrement-reg-name name<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> name<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-increment inst machine pc<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>target <span class=\"synSpecial\">(</span>get-register machine <span class=\"synSpecial\">(</span>increment-reg-name inst<span class=\"synSpecial\">))))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">()</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>value <span class=\"synSpecial\">(</span>get-contents target<span class=\"synSpecial\">)))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">number?</span> value<span class=\"synSpecial\">)</span>\n               <span class=\"synSpecial\">(</span>set-contents! target <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> value <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n               <span class=\"synSpecial\">(</span>advance-pc pc<span class=\"synSpecial\">))</span>\n              <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">&quot;INCREMENT require number, but&quot;</span> value<span class=\"synSpecial\">))))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-decrement inst machine pc<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>target <span class=\"synSpecial\">(</span>get-register machine <span class=\"synSpecial\">(</span>decrement-reg-name inst<span class=\"synSpecial\">))))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">()</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>value <span class=\"synSpecial\">(</span>get-contents target<span class=\"synSpecial\">)))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">number?</span> value<span class=\"synSpecial\">)</span>\n               <span class=\"synSpecial\">(</span>set-contents! target <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> value <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n               <span class=\"synSpecial\">(</span>advance-pc pc<span class=\"synSpecial\">))</span>\n              <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">&quot;DECREMENT require number, but&quot;</span> value<span class=\"synSpecial\">))))))</span>\n</pre>\n\n\n<p>test</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> add-two\n  <span class=\"synSpecial\">(</span>make-machine\n   <span class=\"synSpecial\">'(</span>a<span class=\"synSpecial\">)</span>\n   <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">)</span>\n   <span class=\"synSpecial\">'(</span>controller\n     main\n     <span class=\"synSpecial\">(</span>increment a<span class=\"synSpecial\">)</span>\n     <span class=\"synSpecial\">(</span>increment a<span class=\"synSpecial\">)</span>\n     <span class=\"synSpecial\">(</span>increment a<span class=\"synSpecial\">)</span>\n     <span class=\"synSpecial\">(</span>decrement a<span class=\"synSpecial\">)</span>\n     done<span class=\"synSpecial\">)))</span>\n\ngosh&gt; <span class=\"synSpecial\">(</span>set-register-contents! add-two <span class=\"synSpecial\">'</span>a <span class=\"synConstant\">200</span><span class=\"synSpecial\">)</span>\ndone\ngosh&gt; <span class=\"synSpecial\">(</span>start add-two<span class=\"synSpecial\">)</span>\ndone\ngosh&gt; <span class=\"synSpecial\">(</span>get-register-contents add-two <span class=\"synSpecial\">'</span>a<span class=\"synSpecial\">)</span>\n<span class=\"synConstant\">202</span>\n</pre>\n\n\n","slug":"SICP 問題 5.10"},"content":"<p>新しく構文を追加する．<br>\n簡単にincrementとdecrementで．</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-execution-procedure inst labels machine\n</span><span class=\"code-line\">                                  pc flag stack ops<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>assign<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>make-assign inst machine labels ops pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>test<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>make-test inst machine labels ops flag pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>branch<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>make-branch inst machine labels flag pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>goto<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>make-goto inst machine labels pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>save<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>make-save inst machine stack pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>restore<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>make-restore inst machine stack pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>perform<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>make-perform inst machine labels ops pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>increment<span class=\"synSpecial\">)</span>    <span class=\"synComment\">;increment</span>\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>make-increment inst machine pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> inst<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>decrement<span class=\"synSpecial\">)</span>    <span class=\"synComment\">;decrement</span>\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>make-decrement inst machine pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">\"Unknown instruction type -- ASSEMBLE\"</span> inst<span class=\"synSpecial\">))))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">;;; 選択子</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>increment-reg-name name<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> name<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>decrement-reg-name name<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> name<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-increment inst machine pc<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>target <span class=\"synSpecial\">(</span>get-register machine <span class=\"synSpecial\">(</span>increment-reg-name inst<span class=\"synSpecial\">))))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">()</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>value <span class=\"synSpecial\">(</span>get-contents target<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">number?</span> value<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">               <span class=\"synSpecial\">(</span>set-contents! target <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> value <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">               <span class=\"synSpecial\">(</span>advance-pc pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">              <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">\"INCREMENT require number, but\"</span> value<span class=\"synSpecial\">))))))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-decrement inst machine pc<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>target <span class=\"synSpecial\">(</span>get-register machine <span class=\"synSpecial\">(</span>decrement-reg-name inst<span class=\"synSpecial\">))))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">()</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>value <span class=\"synSpecial\">(</span>get-contents target<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">number?</span> value<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">               <span class=\"synSpecial\">(</span>set-contents! target <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> value <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">               <span class=\"synSpecial\">(</span>advance-pc pc<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">              <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">\"DECREMENT require number, but\"</span> value<span class=\"synSpecial\">))))))</span>\n</span></code></pre>\n<p>test</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> add-two\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>make-machine\n</span><span class=\"code-line\">   <span class=\"synSpecial\">'(</span>a<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">   <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">   <span class=\"synSpecial\">'(</span>controller\n</span><span class=\"code-line\">     main\n</span><span class=\"code-line\">     <span class=\"synSpecial\">(</span>increment a<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">     <span class=\"synSpecial\">(</span>increment a<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">     <span class=\"synSpecial\">(</span>increment a<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">     <span class=\"synSpecial\">(</span>decrement a<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">     done<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">gosh> <span class=\"synSpecial\">(</span>set-register-contents! add-two <span class=\"synSpecial\">'</span>a <span class=\"synConstant\">200</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">done\n</span><span class=\"code-line\">gosh> <span class=\"synSpecial\">(</span>start add-two<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">done\n</span><span class=\"code-line\">gosh> <span class=\"synSpecial\">(</span>get-register-contents add-two <span class=\"synSpecial\">'</span>a<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\"><span class=\"synConstant\">202</span>\n</span></code></pre>"},"__N_SSG":true}