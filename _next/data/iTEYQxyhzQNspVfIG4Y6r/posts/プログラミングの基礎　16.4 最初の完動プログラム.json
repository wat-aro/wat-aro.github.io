{"pageProps":{"post":{"title":"プログラミングの基礎　16.4 最初の完動プログラム","published":"2016/02/16","tags":["OCaml","プログラミングの基礎"],"content":"\n<p>プログラミングの基礎で作ったメトロネットワーク最短路問題の解答．<br/>\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C0%A5%A4%A5%AF%A5%B9%A5%C8%A5%E9\">ダイクストラ</a>法を使い求める．<br/>\nここまでのメトロネットワーク最短路問題に関係する問題の解答すべてここに書いてある．</p>\n\n<pre class=\"code lang-ocaml\" data-lang=\"ocaml\" data-unlink><span class=\"synComment\">(* サポートページからダウンロードしたglobal_ekimei_listとglobal_ekikan_list *)</span>\n<span class=\"synPreProc\">#use</span> <span class=\"synConstant\">&quot;metro.ml&quot;</span>\n\n<span class=\"synComment\">(* 目的：ekimei_t型のデータを受け取り，「路線名，駅名（かな）」を返す *)</span>\n<span class=\"synComment\">(* hyoji : ekimei_t -&gt; string *)</span>\n<span class=\"synStatement\">let</span> hyoji ekimei <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> ekimei <span class=\"synStatement\">with</span>\n    <span class=\"synStatement\">{</span>kanji <span class=\"synStatement\">=</span> kanji<span class=\"synStatement\">;</span>\n     kana <span class=\"synStatement\">=</span> kana<span class=\"synStatement\">;</span>\n     romaji <span class=\"synStatement\">=</span> romaji<span class=\"synStatement\">;</span>\n     shozoku <span class=\"synStatement\">=</span> shozoku<span class=\"synStatement\">;}</span>\n    <span class=\"synStatement\">-&gt;</span> shozoku <span class=\"synStatement\">^</span> <span class=\"synConstant\">&quot;，&quot;</span> <span class=\"synStatement\">^</span> kanji <span class=\"synStatement\">^</span> <span class=\"synConstant\">&quot;（&quot;</span> <span class=\"synStatement\">^</span> kana <span class=\"synStatement\">^</span> <span class=\"synConstant\">&quot;）&quot;</span><span class=\"synStatement\">;;</span>\n\n\n\n<span class=\"synComment\">(* hyoji test *)</span>\nprint_string <span class=\"synConstant\">&quot;hyouji test&quot;</span>\n<span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> hyoji <span class=\"synStatement\">{</span>kanji <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;茗荷谷&quot;</span><span class=\"synStatement\">;</span> kana <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;みょうがだに&quot;</span><span class=\"synStatement\">;</span>\n                   romaji <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;myogadani&quot;</span><span class=\"synStatement\">;</span> shozoku <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;丸ノ内線&quot;</span><span class=\"synStatement\">}</span>\n  <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;丸ノ内線，茗荷谷（みょうがだに）&quot;</span>\n\n\n<span class=\"synComment\">(* 目的：ローマ字の駅名（文字列）と駅名リスト(ekimei_t list 型)を受け取り</span>\n<span class=\"synComment\">   園駅の漢字表記を返す *)</span>\n<span class=\"synComment\">(* romaji_to_kanji -&gt; string -&gt; ekimei_t list -&gt; string *)</span>\n<span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> romaji_to_kanji name lst <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> lst <span class=\"synStatement\">with</span>\n    <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-&gt;</span> <span class=\"synConstant\">&quot;&quot;</span>\n  <span class=\"synStatement\">|</span> <span class=\"synStatement\">{</span>kanji <span class=\"synStatement\">=</span> kanji<span class=\"synStatement\">;</span> kana <span class=\"synStatement\">=</span> kana<span class=\"synStatement\">;</span> romaji <span class=\"synStatement\">=</span> romaji<span class=\"synStatement\">;</span> shozoku <span class=\"synStatement\">=</span> shozoku<span class=\"synStatement\">}</span> <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-&gt;</span>\n     <span class=\"synStatement\">if</span> name <span class=\"synStatement\">=</span> romaji\n     <span class=\"synStatement\">then</span> kanji\n     <span class=\"synStatement\">else</span> romaji_to_kanji name rest\n\n<span class=\"synComment\">(* romaji_to_kanji test *)</span>\n<span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">&quot;&quot;</span> <span class=\"synConstant\">[]</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;&quot;</span>\n<span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">&quot;&quot;</span> global_ekimei_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;&quot;</span>\n<span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">&quot;myogadani&quot;</span> <span class=\"synConstant\">[]</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;&quot;</span>\n<span class=\"synStatement\">let</span> test4 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">&quot;myogadani&quot;</span> global_ekimei_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;茗荷谷&quot;</span>\n<span class=\"synStatement\">let</span> test5 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">&quot;aoyamaicchome&quot;</span> global_ekimei_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;青山一丁目&quot;</span>\n<span class=\"synStatement\">let</span> test6 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">&quot;heiwadai&quot;</span> global_ekimei_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;平和台&quot;</span>\n\n\n<span class=\"synComment\">(* 目的：漢字の駅名を２つと駅間リストを受け取ったら，駅間リストの中からその２駅間の距離を返す *)</span>\n<span class=\"synComment\">(* get_ekikan_kyori : string -&gt; string -&gt; ekikan_t list -&gt; float *)</span>\n<span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> get_ekikan_kyori eki1 eki2 lst <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> lst <span class=\"synStatement\">with</span>\n    <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-&gt;</span> infinity\n  <span class=\"synStatement\">|</span> <span class=\"synStatement\">{</span>kiten <span class=\"synStatement\">=</span> kiten<span class=\"synStatement\">;</span> shuten <span class=\"synStatement\">=</span> shuten<span class=\"synStatement\">;</span> keiyu <span class=\"synStatement\">=</span> keiyu<span class=\"synStatement\">;</span> kyori <span class=\"synStatement\">=</span> kyori<span class=\"synStatement\">;</span> jikan <span class=\"synStatement\">=</span> jikan<span class=\"synStatement\">}</span> <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-&gt;</span>\n     <span class=\"synStatement\">if</span> eki1 <span class=\"synStatement\">=</span> kiten <span class=\"synStatement\">&amp;&amp;</span> eki2 <span class=\"synStatement\">=</span> shuten\n     <span class=\"synStatement\">then</span> kyori\n     <span class=\"synStatement\">else</span> <span class=\"synStatement\">if</span> eki2 <span class=\"synStatement\">=</span> kiten <span class=\"synStatement\">&amp;&amp;</span> eki1 <span class=\"synStatement\">=</span> shuten\n     <span class=\"synStatement\">then</span> kyori\n     <span class=\"synStatement\">else</span> get_ekikan_kyori eki1 eki2 rest\n\n\n\n<span class=\"synComment\">(* get_ekikan_kyori test *)</span>\n<span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">&quot;錦糸町&quot;</span> <span class=\"synConstant\">&quot;住吉&quot;</span> <span class=\"synConstant\">[]</span> <span class=\"synStatement\">=</span> infinity\n<span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">&quot;錦糸町&quot;</span> <span class=\"synConstant\">&quot;&quot;</span> global_ekikan_list <span class=\"synStatement\">=</span> infinity\n<span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">&quot;&quot;</span> <span class=\"synConstant\">&quot;錦糸町&quot;</span> global_ekikan_list <span class=\"synStatement\">=</span> infinity\n<span class=\"synStatement\">let</span> test4 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">&quot;横浜駅&quot;</span> <span class=\"synConstant\">&quot;錦糸町&quot;</span> global_ekikan_list <span class=\"synStatement\">=</span> infinity\n<span class=\"synStatement\">let</span> test5 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">&quot;大手町&quot;</span> <span class=\"synConstant\">&quot;三越前&quot;</span> global_ekikan_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.7</span>\n<span class=\"synStatement\">let</span> test6 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">&quot;三越前&quot;</span> <span class=\"synConstant\">&quot;大手町&quot;</span> global_ekikan_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.7</span>\n<span class=\"synStatement\">let</span> test7 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">&quot;霞ヶ関&quot;</span> <span class=\"synConstant\">&quot;日比谷&quot;</span> global_ekikan_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.2</span>\n\n\n<span class=\"synComment\">(* 目的：ローマ字の駅名を２つ受け取り，その間の距離を調べ，つながっている場合は</span>\n<span class=\"synComment\">   「A駅からB駅までのはｘｋｍです」と返し，繋がっていない場合は</span>\n<span class=\"synComment\">   「A駅からB駅はつながっていません」と返す*)</span>\n<span class=\"synStatement\">let</span> kyori_wo_hyoji r1 r2 <span class=\"synStatement\">=</span>\n  <span class=\"synStatement\">let</span> k1 <span class=\"synStatement\">=</span> romaji_to_kanji r1 global_ekimei_list <span class=\"synStatement\">in</span>\n  <span class=\"synStatement\">let</span> k2 <span class=\"synStatement\">=</span> romaji_to_kanji r2 global_ekimei_list <span class=\"synStatement\">in</span>\n  <span class=\"synStatement\">let</span> not_exist <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;という駅は存在しません&quot;</span> <span class=\"synStatement\">in</span>\n  <span class=\"synStatement\">if</span> k1 <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;&quot;</span>\n  <span class=\"synStatement\">then</span> r1 <span class=\"synStatement\">^</span> not_exist\n  <span class=\"synStatement\">else</span> <span class=\"synStatement\">if</span> k2 <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;&quot;</span>\n  <span class=\"synStatement\">then</span> r2 <span class=\"synStatement\">^</span> not_exist\n  <span class=\"synStatement\">else</span> <span class=\"synStatement\">let</span> kyori <span class=\"synStatement\">=</span> get_ekikan_kyori k1 k2 global_ekikan_list <span class=\"synStatement\">in</span>\n       <span class=\"synStatement\">if</span> kyori <span class=\"synStatement\">=</span> infinity\n       <span class=\"synStatement\">then</span> k1 <span class=\"synStatement\">^</span> <span class=\"synConstant\">&quot;駅と&quot;</span> <span class=\"synStatement\">^</span> k2 <span class=\"synStatement\">^</span> <span class=\"synConstant\">&quot;駅はつながっていません&quot;</span>\n       <span class=\"synStatement\">else</span> k1 <span class=\"synStatement\">^</span> <span class=\"synConstant\">&quot;駅から&quot;</span> <span class=\"synStatement\">^</span> k2 <span class=\"synStatement\">^</span> <span class=\"synConstant\">&quot;駅までは&quot;</span> <span class=\"synStatement\">^</span> string_of_float kyori <span class=\"synStatement\">^</span> <span class=\"synConstant\">&quot;kmです&quot;</span>\n\n<span class=\"synComment\">(* kyori_wo_hyoji test *)</span>\n<span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">&quot;otemachi&quot;</span> <span class=\"synConstant\">&quot;hibiya&quot;</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;大手町駅と日比谷駅はつながっていません&quot;</span>\n<span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">&quot;&quot;</span> <span class=\"synConstant\">&quot;kinsityo&quot;</span>  <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;という駅は存在しません&quot;</span>\n<span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">&quot;yokohama&quot;</span> <span class=\"synConstant\">&quot;kinsityo&quot;</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;yokohamaという駅は存在しません&quot;</span>\n<span class=\"synStatement\">let</span> test4 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">&quot;otemachi&quot;</span> <span class=\"synConstant\">&quot;mitsukoshimae&quot;</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;大手町駅から三越前駅までは0.7kmです&quot;</span>\n<span class=\"synStatement\">let</span> test5 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">&quot;mitsukoshimae&quot;</span> <span class=\"synConstant\">&quot;otemachi&quot;</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;三越前駅から大手町駅までは0.7kmです&quot;</span>\n<span class=\"synStatement\">let</span> test6 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">&quot;kasumigaseki&quot;</span> <span class=\"synConstant\">&quot;hibiya&quot;</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;霞ヶ関駅から日比谷駅までは1.2kmです&quot;</span>\n\n<span class=\"synStatement\">type</span> eki_t <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>\n  namae : <span class=\"synType\">string</span><span class=\"synStatement\">;</span>               <span class=\"synComment\">(* 駅名（漢字の文字列） *)</span>\n  saitan_kyori : <span class=\"synType\">float</span><span class=\"synStatement\">;</span>         <span class=\"synComment\">(* 最短距離（実数） *)</span>\n  temae_list : <span class=\"synType\">string</span> <span class=\"synType\">list</span><span class=\"synStatement\">;</span>     <span class=\"synComment\">(* 駅名（漢字の文字列）のリスト *)</span>\n<span class=\"synStatement\">}</span>\n\n<span class=\"synComment\">(* 目的：string型の駅名(漢字)とekimei_t list型を受け取り，</span>\n<span class=\"synComment\">   ekimei_t listをeki_t listに変え，その際駅名と一致する駅についてはshokikaする *)</span>\n<span class=\"synComment\">(* make_initial_eki_list : string -&gt; ekimei_t list -&gt; eki_t list *)</span>\n<span class=\"synStatement\">let</span> make_initial_eki_list name lst <span class=\"synStatement\">=</span>\n  <span class=\"synPreProc\">List</span>.map <span class=\"synStatement\">(fun</span> eki <span class=\"synStatement\">-&gt;</span> <span class=\"synStatement\">match</span> eki <span class=\"synStatement\">with</span>\n    <span class=\"synStatement\">{</span>kanji <span class=\"synStatement\">=</span> k<span class=\"synStatement\">;</span> kana <span class=\"synStatement\">=</span> a<span class=\"synStatement\">;</span> romaji <span class=\"synStatement\">=</span> r<span class=\"synStatement\">;</span> shozoku <span class=\"synStatement\">=</span> s<span class=\"synStatement\">}</span>\n    <span class=\"synStatement\">-&gt;</span> <span class=\"synStatement\">if</span> k <span class=\"synStatement\">=</span> name\n      <span class=\"synStatement\">then</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> k<span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>k<span class=\"synStatement\">]}</span>\n      <span class=\"synStatement\">else</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> k<span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">})</span>\n    lst<span class=\"synStatement\">;;</span>\n\n<span class=\"synComment\">(* make_initial_eki_list test *)</span>\n<span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> make_initial_eki_list <span class=\"synConstant\">&quot;代々木上原&quot;</span> <span class=\"synStatement\">[{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;代々木上原&quot;</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;よよぎうえはら&quot;</span><span class=\"synStatement\">;</span>\n                                                 romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;yoyogiuehara&quot;</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;千代田線&quot;</span><span class=\"synStatement\">}]</span>\n  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;代々木上原&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;代々木上原&quot;</span><span class=\"synStatement\">]}];;</span>\n<span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> make_initial_eki_list <span class=\"synConstant\">&quot;明治神宮前&quot;</span> <span class=\"synStatement\">[{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;代々木公園&quot;</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;よよぎこうえん&quot;</span><span class=\"synStatement\">;</span>\n                                                romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;yoyogikouen&quot;</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;千代田線&quot;</span><span class=\"synStatement\">};</span>\n                                               <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;明治神宮前&quot;</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;めいじじんぐうまえ&quot;</span><span class=\"synStatement\">;</span>\n                                                romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;meijijinguumae&quot;</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;千代田線&quot;</span><span class=\"synStatement\">}]</span>\n  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;代々木公園&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};</span>\n     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;明治神宮前&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;明治神宮前&quot;</span><span class=\"synStatement\">]}];;</span>\n<span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> make_initial_eki_list <span class=\"synConstant\">&quot;赤坂&quot;</span> <span class=\"synStatement\">[{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;表参道&quot;</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;おもてさんどう&quot;</span><span class=\"synStatement\">;</span>\n                                           romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;omotesandou&quot;</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;千代田線&quot;</span><span class=\"synStatement\">};</span>\n                                          <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;乃木坂&quot;</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;のぎざか&quot;</span><span class=\"synStatement\">;</span>\n                                           romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;nogizaka&quot;</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;千代田線&quot;</span><span class=\"synStatement\">};</span>\n                                          <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;赤坂&quot;</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;あかさか&quot;</span><span class=\"synStatement\">;</span>\n                                           romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;akasaka&quot;</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;千代田線&quot;</span><span class=\"synStatement\">}]</span>\n  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;表参道&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};</span>\n     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;乃木坂&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};</span>\n     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;赤坂&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;赤坂&quot;</span><span class=\"synStatement\">]}];;</span>\n\n\n\n\n\n<span class=\"synComment\">(* 目的：ekimei_t型のレコードとekimei_t型のリストを受け取ったら，平仮名の昇順となる位置に</span>\n<span class=\"synComment\">   ekimei_t型のレコードを挿入する．同じ駅がリストにあれば挿入しない．</span>\n<span class=\"synComment\">   seiretsuのための補助関数*)</span>\n<span class=\"synComment\">(* ekimei_isnert : -&gt; ekimei_t -&gt; ekimei_t list -&gt; ekimei_t list *)</span>\n<span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> ekimei_insert eki lst <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> lst <span class=\"synStatement\">with</span>\n    <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-&gt;</span> <span class=\"synStatement\">[</span>eki<span class=\"synStatement\">]</span>\n  <span class=\"synStatement\">|</span> <span class=\"synStatement\">({</span>kanji <span class=\"synStatement\">=</span> kanji<span class=\"synStatement\">;</span> kana <span class=\"synStatement\">=</span> kana<span class=\"synStatement\">;</span> romaji <span class=\"synStatement\">=</span> romaji<span class=\"synStatement\">;</span> shozoku <span class=\"synStatement\">=</span> shozoku<span class=\"synStatement\">;}</span> <span class=\"synStatement\">as</span> first<span class=\"synStatement\">)</span> <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-&gt;</span>\n     <span class=\"synStatement\">if</span> kana <span class=\"synStatement\">=</span> eki.kana\n     <span class=\"synStatement\">then</span> lst                   <span class=\"synComment\">(* リストにあったほうが残る *)</span>\n     <span class=\"synStatement\">else</span> <span class=\"synStatement\">if</span> eki.kana <span class=\"synStatement\">&lt;</span> kana    <span class=\"synComment\">(* 駅のkana &lt; first のkana *)</span>\n     <span class=\"synStatement\">then</span> eki <span class=\"synStatement\">::</span> lst\n     <span class=\"synStatement\">else</span> first <span class=\"synStatement\">::</span> ekimei_insert eki rest\n\n<span class=\"synComment\">(* test data *)</span>\n<span class=\"synStatement\">let</span> yoyogiuehara_tiyodasen <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;代々木上原&quot;</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;よよぎうえはら&quot;</span><span class=\"synStatement\">;</span>\n                              romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;yoyogiuehara&quot;</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;千代田線&quot;</span><span class=\"synStatement\">}</span>\n<span class=\"synStatement\">let</span> otemachi_tiyodasen <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;おおてまち&quot;</span><span class=\"synStatement\">;</span>\n                         romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;otemachi&quot;</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;千代田線&quot;</span><span class=\"synStatement\">}</span>\n<span class=\"synStatement\">let</span> otemachi_hanzoumonsen <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;おおてまち&quot;</span><span class=\"synStatement\">;</span>\n                             romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;otemachi&quot;</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">&quot;半蔵門線&quot;</span><span class=\"synStatement\">}</span>\n\n\n<span class=\"synComment\">(* test *)</span>\n<span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> ekimei_insert otemachi_tiyodasen <span class=\"synConstant\">[]</span> <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">]</span>\n<span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> ekimei_insert otemachi_tiyodasen <span class=\"synStatement\">[</span>otemachi_hanzoumonsen<span class=\"synStatement\">]</span> <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_hanzoumonsen<span class=\"synStatement\">]</span>\n<span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> ekimei_insert otemachi_tiyodasen <span class=\"synStatement\">[</span>yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n    <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">;</span> yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n<span class=\"synStatement\">let</span> test4 <span class=\"synStatement\">=</span> ekimei_insert yoyogiuehara_tiyodasen <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">]</span>\n    <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">;</span> yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n\n\n<span class=\"synComment\">(* 目的：ekimei_t型のリストを受け取ったら，それを平仮名の順に整列し，</span>\n<span class=\"synComment\">   さらに駅の重複を取り除いたekimei_t型のリストを返す *)</span>\n<span class=\"synComment\">(* seiretsu : ekimei_t -&gt; ekimei_t *)</span>\n<span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> seiretsu lst <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> lst <span class=\"synStatement\">with</span>\n    <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-&gt;</span> <span class=\"synConstant\">[]</span>\n  <span class=\"synStatement\">|</span> first <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-&gt;</span> ekimei_insert first <span class=\"synStatement\">(</span>seiretsu rest<span class=\"synStatement\">)</span>\n\n\n\n\n<span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> seiretsu <span class=\"synConstant\">[]</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span>\n<span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n<span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> seiretsu <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">;</span> otemachi_hanzoumonsen<span class=\"synStatement\">]</span>\n  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_hanzoumonsen<span class=\"synStatement\">]</span>\n<span class=\"synStatement\">let</span> test4 <span class=\"synStatement\">=</span> seiretsu <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">;</span> otemachi_hanzoumonsen<span class=\"synStatement\">;</span> yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_hanzoumonsen<span class=\"synStatement\">;</span> yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n\n\n\n\n<span class=\"synStatement\">let</span> otemachi <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">]}</span>\n<span class=\"synStatement\">let</span> mitsukoshimae <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n<span class=\"synStatement\">let</span> shibuya <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;渋谷&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n<span class=\"synStatement\">let</span> aoyamaichome <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;青山一丁目&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n\n\n\n<span class=\"synComment\">(* 目的：直前に確定した駅 p (eki_t型)と味覚手の役のリスト v (eki_t list型)を受け取り</span>\n<span class=\"synComment\">   必要な更新処理を行った後の未確定の駅のリストを返す*)</span>\n<span class=\"synComment\">(* koushin -&gt; eki_t -&gt; eki_t list -&gt; ekikan_t list -&gt; eki_t list *)</span>\n<span class=\"synStatement\">let</span> koushin p v ekikan <span class=\"synStatement\">=</span>\n  <span class=\"synPreProc\">List</span>.map\n    <span class=\"synStatement\">(fun</span> q <span class=\"synStatement\">-&gt;</span>\n      <span class=\"synStatement\">let</span> kyori <span class=\"synStatement\">=</span> get_ekikan_kyori p.namae q.namae ekikan <span class=\"synStatement\">in</span>\n      <span class=\"synStatement\">if</span> kyori <span class=\"synStatement\">=</span> infinity\n      <span class=\"synStatement\">then</span> q\n      <span class=\"synStatement\">else</span> <span class=\"synStatement\">let</span> p_keiyu_q_kyori <span class=\"synStatement\">=</span> p.saitan_kyori +. kyori <span class=\"synStatement\">in</span>\n           <span class=\"synStatement\">if</span>  p_keiyu_q_kyori  <span class=\"synStatement\">&lt;</span> q.saitan_kyori\n           <span class=\"synStatement\">then</span> <span class=\"synStatement\">{</span> namae <span class=\"synStatement\">=</span> q.namae<span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> p_keiyu_q_kyori<span class=\"synStatement\">;</span>\n                  temae_list <span class=\"synStatement\">=(</span>q.namae<span class=\"synStatement\">)</span> <span class=\"synStatement\">::</span> p.temae_list<span class=\"synStatement\">}</span>\n           <span class=\"synStatement\">else</span> q<span class=\"synStatement\">)</span>\n    v<span class=\"synStatement\">;;</span>\n\n\n<span class=\"synComment\">(* test data *)</span>\n<span class=\"synStatement\">let</span> otemachi <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">]}</span>\n<span class=\"synStatement\">let</span> mitsukoshimae <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n<span class=\"synStatement\">let</span> shibuya <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;渋谷&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n<span class=\"synStatement\">let</span> aoyamaichome <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;青山一丁目&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n<span class=\"synStatement\">let</span> nagatacho <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;永田町&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n<span class=\"synStatement\">let</span> shinochanomizu <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;新御茶ノ水&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n\n<span class=\"synComment\">(* koushin test *)</span>\n<span class=\"synStatement\">let</span> koushin_test1 <span class=\"synStatement\">=</span> koushin otemachi\n  <span class=\"synStatement\">[</span>mitsukoshimae<span class=\"synStatement\">;</span> shibuya<span class=\"synStatement\">;</span> shinochanomizu<span class=\"synStatement\">;</span> aoyamaichome<span class=\"synStatement\">]</span> global_ekikan_list\n  <span class=\"synStatement\">=[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.7</span><span class=\"synStatement\">;</span>\n     temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">]};</span>\n    <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;渋谷&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};</span>\n    <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;新御茶ノ水&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.3</span><span class=\"synStatement\">;</span>\n     temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;新御茶ノ水&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">]};</span>\n    <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;青山一丁目&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}];;</span>\n\n\n\n<span class=\"synComment\">(* 目的：eki_t list型のリストを受け取り，「最短距離最小の駅」と</span>\n<span class=\"synComment\">   「最短距離最小の駅以外からなるリスト」の組を返す *)</span>\n<span class=\"synComment\">(* saitan_wo_bunri : eki_t list -&gt; eki_t * eki_t list *)</span>\n<span class=\"synStatement\">let</span> saitan_wo_bunri eki_list <span class=\"synStatement\">=</span>\n  <span class=\"synPreProc\">List</span>.fold_right\n    <span class=\"synStatement\">(fun</span> first rest_saitan <span class=\"synStatement\">-&gt;</span>\n      <span class=\"synStatement\">let</span> <span class=\"synStatement\">(</span>minimum, lst<span class=\"synStatement\">)</span> <span class=\"synStatement\">=</span> rest_saitan <span class=\"synStatement\">in</span>\n      <span class=\"synStatement\">if</span> minimum.namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;&quot;</span>\n      <span class=\"synStatement\">then</span> <span class=\"synStatement\">(</span>first, lst<span class=\"synStatement\">)</span>\n      <span class=\"synStatement\">else</span> <span class=\"synStatement\">if</span> first.saitan_kyori <span class=\"synStatement\">&lt;=</span> minimum.saitan_kyori\n      <span class=\"synStatement\">then</span> <span class=\"synStatement\">(</span>first, minimum <span class=\"synStatement\">::</span> lst<span class=\"synStatement\">)</span>\n      <span class=\"synStatement\">else</span> <span class=\"synStatement\">(</span>minimum, first <span class=\"synStatement\">::</span> lst<span class=\"synStatement\">))</span>\n    eki_list\n    <span class=\"synStatement\">({</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>, <span class=\"synConstant\">[]</span><span class=\"synStatement\">)</span>\n\n\n<span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> saitan_wo_bunri <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.7</span><span class=\"synStatement\">;</span>\n                              temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">]};</span>\n                             <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;渋谷&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.3</span><span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;渋谷&quot;</span><span class=\"synStatement\">]};</span>\n                             <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;新御茶ノ水&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.3</span><span class=\"synStatement\">;</span>\n                              temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;新御茶ノ水&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">]};</span>\n                             <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;青山一丁目&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span>\n                              temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}]</span>\n  <span class=\"synStatement\">=({</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;渋谷&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.3</span><span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;渋谷&quot;</span><span class=\"synStatement\">]}</span>,\n    <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.7</span><span class=\"synStatement\">;</span>\n     temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">]};</span>\n     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;新御茶ノ水&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.3</span><span class=\"synStatement\">;</span>\n      temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;新御茶ノ水&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">]};</span>\n     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;青山一丁目&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}]);;</span>\n\n\n<span class=\"synComment\">(* 目的：eki_t list型の未確定の駅のリストとekikan_t list型の駅間のリストを受け取り</span>\n<span class=\"synComment\">   ダイクストラのアルゴリズムにしたがって各駅について</span>\n<span class=\"synComment\">   最短距離と最短経路が正しく入ったリストを返す *)</span>\n<span class=\"synComment\">(* dijkstra_main : eki_t list -&gt; ekikan_t list -&gt; eki_t list *)</span>\n<span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> dijkstra_main  eki_list ekikan <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> eki_list <span class=\"synStatement\">with</span>\n    <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-&gt;</span> <span class=\"synConstant\">[]</span>\n  <span class=\"synStatement\">|</span> first <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-&gt;</span> <span class=\"synStatement\">match</span> <span class=\"synStatement\">(</span>saitan_wo_bunri eki_list<span class=\"synStatement\">)</span> <span class=\"synStatement\">with</span>\n    <span class=\"synStatement\">(</span>saitan1, <span class=\"synConstant\">[]</span><span class=\"synStatement\">)</span> <span class=\"synStatement\">-&gt;</span> <span class=\"synStatement\">[</span>saitan1<span class=\"synStatement\">]</span>\n    <span class=\"synStatement\">|</span> <span class=\"synStatement\">(</span>saitan2, rest<span class=\"synStatement\">)</span> <span class=\"synStatement\">-&gt;</span> saitan2 <span class=\"synStatement\">::</span> <span class=\"synStatement\">(</span>dijkstra_main <span class=\"synStatement\">(</span>koushin saitan2 rest ekikan<span class=\"synStatement\">)</span> ekikan<span class=\"synStatement\">)</span> <span class=\"synStatement\">;;</span>\n\n\n\n<span class=\"synComment\">(* test_data *)</span>\n<span class=\"synStatement\">let</span> otemachi <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.7</span><span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;神保町&quot;</span><span class=\"synStatement\">]};;</span>\n<span class=\"synStatement\">let</span> mitsukoshimae <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};;</span>\n<span class=\"synStatement\">let</span> suitenguumae <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;水天宮前&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};;</span>\n<span class=\"synStatement\">let</span> kiyosumishirakawa <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;清澄白河&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};;</span>\n<span class=\"synStatement\">let</span> sumiyoshi <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;住吉&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};;</span>\n\n<span class=\"synStatement\">let</span> dijkstra_test1 <span class=\"synStatement\">=</span> dijkstra_main <span class=\"synStatement\">[</span>otemachi<span class=\"synStatement\">;</span> mitsukoshimae<span class=\"synStatement\">;</span> suitenguumae<span class=\"synStatement\">;</span>\n                                    kiyosumishirakawa<span class=\"synStatement\">;</span> sumiyoshi<span class=\"synStatement\">]</span>\n  global_ekikan_list\n  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;大手町&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.7</span><span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;神保町&quot;</span><span class=\"synStatement\">]};</span>\n     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">2.4</span><span class=\"synStatement\">;</span>\n      temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;神保町&quot;</span><span class=\"synStatement\">]};</span>\n     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;水天宮前&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">3.7</span><span class=\"synStatement\">;</span>\n      temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;水天宮前&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;神保町&quot;</span><span class=\"synStatement\">]};</span>\n     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;清澄白河&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">5.4</span><span class=\"synStatement\">;</span>\n      temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;清澄白河&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;水天宮前&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;神保町&quot;</span><span class=\"synStatement\">]};</span>\n     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;住吉&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">7.30000000000000071</span><span class=\"synStatement\">;</span>\n      temae_list <span class=\"synStatement\">=</span>\n         <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;住吉&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;清澄白河&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;水天宮前&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;三越前&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;神保町&quot;</span><span class=\"synStatement\">]}];;</span>\n\n<span class=\"synComment\">(* 目的：始点の駅名（ローマ字の文字列）と終点の駅名（ローマ字の文字列）を受け取り</span>\n<span class=\"synComment\">   seiretsuを使ってglobal_ekimei_list の重複を取り除き，</span>\n<span class=\"synComment\">   romaji_to_kanji を使って始点と終点の漢字表記を求め</span>\n<span class=\"synComment\">   make_initial_eki_listを使って駅のリストを作り，</span>\n<span class=\"synComment\">   dijkstra_mainを使って各駅までの最短路を確定し，</span>\n<span class=\"synComment\">   その中空終点の駅のレコード(eki_t型)を返す*)</span>\n<span class=\"synComment\">(* dijkstra : string -&gt; string -&gt; eki_t *)</span>\n<span class=\"synStatement\">let</span> dijkstra siten shuten <span class=\"synStatement\">=</span>\n  <span class=\"synStatement\">let</span> sorted_ekimei_list <span class=\"synStatement\">=</span> seiretsu global_ekimei_list <span class=\"synStatement\">in</span>\n  <span class=\"synStatement\">let</span> siten_kanji <span class=\"synStatement\">=</span> romaji_to_kanji siten sorted_ekimei_list <span class=\"synStatement\">in</span>\n  <span class=\"synStatement\">let</span> shuten_kanji <span class=\"synStatement\">=</span> romaji_to_kanji shuten sorted_ekimei_list <span class=\"synStatement\">in</span>\n  <span class=\"synStatement\">let</span> initialized_list <span class=\"synStatement\">=</span> make_initial_eki_list siten_kanji sorted_ekimei_list <span class=\"synStatement\">in</span>\n  <span class=\"synStatement\">let</span> saitan_list <span class=\"synStatement\">=</span> dijkstra_main initialized_list global_ekikan_list <span class=\"synStatement\">in</span>\n  <span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> serch item lst <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> lst <span class=\"synStatement\">with</span>\n      <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-&gt;</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n    <span class=\"synStatement\">|</span> first <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-&gt;</span>\n       <span class=\"synStatement\">if</span> first.namae <span class=\"synStatement\">=</span> item\n       <span class=\"synStatement\">then</span> first\n       <span class=\"synStatement\">else</span> serch item rest\n  <span class=\"synStatement\">in</span> serch shuten_kanji saitan_list<span class=\"synStatement\">;;</span>\n\n<span class=\"synComment\">(* test *)</span>\n<span class=\"synComment\">(* サポートページからのコピペ *)</span>\n<span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> dijkstra <span class=\"synConstant\">&quot;shibuya&quot;</span> <span class=\"synConstant\">&quot;gokokuji&quot;</span> <span class=\"synStatement\">=</span>\n  <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;護国寺&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">9.8</span><span class=\"synStatement\">;</span>\n   temae_list <span class=\"synStatement\">=</span>\n     <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;護国寺&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;江戸川橋&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;飯田橋&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;市ヶ谷&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;麹町&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;永田町&quot;</span><span class=\"synStatement\">;</span>\n      <span class=\"synConstant\">&quot;青山一丁目&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;表参道&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;渋谷&quot;</span><span class=\"synStatement\">]}</span>\n<span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> dijkstra <span class=\"synConstant\">&quot;myogadani&quot;</span> <span class=\"synConstant\">&quot;meguro&quot;</span> <span class=\"synStatement\">=</span>\n  <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">&quot;目黒&quot;</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">12.7000000000000028</span><span class=\"synStatement\">;</span>\n   temae_list <span class=\"synStatement\">=</span>\n     <span class=\"synStatement\">[</span><span class=\"synConstant\">&quot;目黒&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;白金台&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;白金高輪&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;麻布十番&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;六本木一丁目&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;溜池山王&quot;</span><span class=\"synStatement\">;</span>\n      <span class=\"synConstant\">&quot;永田町&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;麹町&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;市ヶ谷&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;飯田橋&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;後楽園&quot;</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">&quot;茗荷谷&quot;</span><span class=\"synStatement\">]}</span>\n</pre>\n\n\n","slug":"プログラミングの基礎　16.4 最初の完動プログラム"},"content":"<p>プログラミングの基礎で作ったメトロネットワーク最短路問題の解答．<br>\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C0%A5%A4%A5%AF%A5%B9%A5%C8%A5%E9\">ダイクストラ</a>法を使い求める．<br>\nここまでのメトロネットワーク最短路問題に関係する問題の解答すべてここに書いてある．</p>\n<pre class=\"code lang-ocaml\" data-lang=\"ocaml\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synComment\">(* サポートページからダウンロードしたglobal_ekimei_listとglobal_ekikan_list *)</span>\n</span><span class=\"code-line\"><span class=\"synPreProc\">#use</span> <span class=\"synConstant\">\"metro.ml\"</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：ekimei_t型のデータを受け取り，「路線名，駅名（かな）」を返す *)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* hyoji : ekimei_t -> string *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> hyoji ekimei <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> ekimei <span class=\"synStatement\">with</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">{</span>kanji <span class=\"synStatement\">=</span> kanji<span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">     kana <span class=\"synStatement\">=</span> kana<span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">     romaji <span class=\"synStatement\">=</span> romaji<span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">     shozoku <span class=\"synStatement\">=</span> shozoku<span class=\"synStatement\">;}</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">-></span> shozoku <span class=\"synStatement\">^</span> <span class=\"synConstant\">\"，\"</span> <span class=\"synStatement\">^</span> kanji <span class=\"synStatement\">^</span> <span class=\"synConstant\">\"（\"</span> <span class=\"synStatement\">^</span> kana <span class=\"synStatement\">^</span> <span class=\"synConstant\">\"）\"</span><span class=\"synStatement\">;;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* hyoji test *)</span>\n</span><span class=\"code-line\">print_string <span class=\"synConstant\">\"hyouji test\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> hyoji <span class=\"synStatement\">{</span>kanji <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"茗荷谷\"</span><span class=\"synStatement\">;</span> kana <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"みょうがだに\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                   romaji <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"myogadani\"</span><span class=\"synStatement\">;</span> shozoku <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"丸ノ内線\"</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"丸ノ内線，茗荷谷（みょうがだに）\"</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：ローマ字の駅名（文字列）と駅名リスト(ekimei_t list 型)を受け取り</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   園駅の漢字表記を返す *)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* romaji_to_kanji -> string -> ekimei_t list -> string *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> romaji_to_kanji name lst <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> lst <span class=\"synStatement\">with</span>\n</span><span class=\"code-line\">    <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-></span> <span class=\"synConstant\">\"\"</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">|</span> <span class=\"synStatement\">{</span>kanji <span class=\"synStatement\">=</span> kanji<span class=\"synStatement\">;</span> kana <span class=\"synStatement\">=</span> kana<span class=\"synStatement\">;</span> romaji <span class=\"synStatement\">=</span> romaji<span class=\"synStatement\">;</span> shozoku <span class=\"synStatement\">=</span> shozoku<span class=\"synStatement\">}</span> <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-></span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">if</span> name <span class=\"synStatement\">=</span> romaji\n</span><span class=\"code-line\">     <span class=\"synStatement\">then</span> kanji\n</span><span class=\"code-line\">     <span class=\"synStatement\">else</span> romaji_to_kanji name rest\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* romaji_to_kanji test *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">\"\"</span> <span class=\"synConstant\">[]</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">\"\"</span> global_ekimei_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">\"myogadani\"</span> <span class=\"synConstant\">[]</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test4 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">\"myogadani\"</span> global_ekimei_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"茗荷谷\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test5 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">\"aoyamaicchome\"</span> global_ekimei_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"青山一丁目\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test6 <span class=\"synStatement\">=</span> romaji_to_kanji <span class=\"synConstant\">\"heiwadai\"</span> global_ekimei_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"平和台\"</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：漢字の駅名を２つと駅間リストを受け取ったら，駅間リストの中からその２駅間の距離を返す *)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* get_ekikan_kyori : string -> string -> ekikan_t list -> float *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> get_ekikan_kyori eki1 eki2 lst <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> lst <span class=\"synStatement\">with</span>\n</span><span class=\"code-line\">    <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-></span> infinity\n</span><span class=\"code-line\">  <span class=\"synStatement\">|</span> <span class=\"synStatement\">{</span>kiten <span class=\"synStatement\">=</span> kiten<span class=\"synStatement\">;</span> shuten <span class=\"synStatement\">=</span> shuten<span class=\"synStatement\">;</span> keiyu <span class=\"synStatement\">=</span> keiyu<span class=\"synStatement\">;</span> kyori <span class=\"synStatement\">=</span> kyori<span class=\"synStatement\">;</span> jikan <span class=\"synStatement\">=</span> jikan<span class=\"synStatement\">}</span> <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-></span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">if</span> eki1 <span class=\"synStatement\">=</span> kiten <span class=\"synStatement\">&#x26;&#x26;</span> eki2 <span class=\"synStatement\">=</span> shuten\n</span><span class=\"code-line\">     <span class=\"synStatement\">then</span> kyori\n</span><span class=\"code-line\">     <span class=\"synStatement\">else</span> <span class=\"synStatement\">if</span> eki2 <span class=\"synStatement\">=</span> kiten <span class=\"synStatement\">&#x26;&#x26;</span> eki1 <span class=\"synStatement\">=</span> shuten\n</span><span class=\"code-line\">     <span class=\"synStatement\">then</span> kyori\n</span><span class=\"code-line\">     <span class=\"synStatement\">else</span> get_ekikan_kyori eki1 eki2 rest\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* get_ekikan_kyori test *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">\"錦糸町\"</span> <span class=\"synConstant\">\"住吉\"</span> <span class=\"synConstant\">[]</span> <span class=\"synStatement\">=</span> infinity\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">\"錦糸町\"</span> <span class=\"synConstant\">\"\"</span> global_ekikan_list <span class=\"synStatement\">=</span> infinity\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">\"\"</span> <span class=\"synConstant\">\"錦糸町\"</span> global_ekikan_list <span class=\"synStatement\">=</span> infinity\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test4 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">\"横浜駅\"</span> <span class=\"synConstant\">\"錦糸町\"</span> global_ekikan_list <span class=\"synStatement\">=</span> infinity\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test5 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">\"大手町\"</span> <span class=\"synConstant\">\"三越前\"</span> global_ekikan_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.7</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test6 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">\"三越前\"</span> <span class=\"synConstant\">\"大手町\"</span> global_ekikan_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.7</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test7 <span class=\"synStatement\">=</span> get_ekikan_kyori <span class=\"synConstant\">\"霞ヶ関\"</span> <span class=\"synConstant\">\"日比谷\"</span> global_ekikan_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.2</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：ローマ字の駅名を２つ受け取り，その間の距離を調べ，つながっている場合は</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   「A駅からB駅までのはｘｋｍです」と返し，繋がっていない場合は</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   「A駅からB駅はつながっていません」と返す*)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> kyori_wo_hyoji r1 r2 <span class=\"synStatement\">=</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">let</span> k1 <span class=\"synStatement\">=</span> romaji_to_kanji r1 global_ekimei_list <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">let</span> k2 <span class=\"synStatement\">=</span> romaji_to_kanji r2 global_ekimei_list <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">let</span> not_exist <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"という駅は存在しません\"</span> <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">if</span> k1 <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"\"</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">then</span> r1 <span class=\"synStatement\">^</span> not_exist\n</span><span class=\"code-line\">  <span class=\"synStatement\">else</span> <span class=\"synStatement\">if</span> k2 <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"\"</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">then</span> r2 <span class=\"synStatement\">^</span> not_exist\n</span><span class=\"code-line\">  <span class=\"synStatement\">else</span> <span class=\"synStatement\">let</span> kyori <span class=\"synStatement\">=</span> get_ekikan_kyori k1 k2 global_ekikan_list <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">       <span class=\"synStatement\">if</span> kyori <span class=\"synStatement\">=</span> infinity\n</span><span class=\"code-line\">       <span class=\"synStatement\">then</span> k1 <span class=\"synStatement\">^</span> <span class=\"synConstant\">\"駅と\"</span> <span class=\"synStatement\">^</span> k2 <span class=\"synStatement\">^</span> <span class=\"synConstant\">\"駅はつながっていません\"</span>\n</span><span class=\"code-line\">       <span class=\"synStatement\">else</span> k1 <span class=\"synStatement\">^</span> <span class=\"synConstant\">\"駅から\"</span> <span class=\"synStatement\">^</span> k2 <span class=\"synStatement\">^</span> <span class=\"synConstant\">\"駅までは\"</span> <span class=\"synStatement\">^</span> string_of_float kyori <span class=\"synStatement\">^</span> <span class=\"synConstant\">\"kmです\"</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* kyori_wo_hyoji test *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">\"otemachi\"</span> <span class=\"synConstant\">\"hibiya\"</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"大手町駅と日比谷駅はつながっていません\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">\"\"</span> <span class=\"synConstant\">\"kinsityo\"</span>  <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"という駅は存在しません\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">\"yokohama\"</span> <span class=\"synConstant\">\"kinsityo\"</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"yokohamaという駅は存在しません\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test4 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">\"otemachi\"</span> <span class=\"synConstant\">\"mitsukoshimae\"</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"大手町駅から三越前駅までは0.7kmです\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test5 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">\"mitsukoshimae\"</span> <span class=\"synConstant\">\"otemachi\"</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"三越前駅から大手町駅までは0.7kmです\"</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test6 <span class=\"synStatement\">=</span> kyori_wo_hyoji <span class=\"synConstant\">\"kasumigaseki\"</span> <span class=\"synConstant\">\"hibiya\"</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"霞ヶ関駅から日比谷駅までは1.2kmです\"</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synStatement\">type</span> eki_t <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>\n</span><span class=\"code-line\">  namae : <span class=\"synType\">string</span><span class=\"synStatement\">;</span>               <span class=\"synComment\">(* 駅名（漢字の文字列） *)</span>\n</span><span class=\"code-line\">  saitan_kyori : <span class=\"synType\">float</span><span class=\"synStatement\">;</span>         <span class=\"synComment\">(* 最短距離（実数） *)</span>\n</span><span class=\"code-line\">  temae_list : <span class=\"synType\">string</span> <span class=\"synType\">list</span><span class=\"synStatement\">;</span>     <span class=\"synComment\">(* 駅名（漢字の文字列）のリスト *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：string型の駅名(漢字)とekimei_t list型を受け取り，</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   ekimei_t listをeki_t listに変え，その際駅名と一致する駅についてはshokikaする *)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* make_initial_eki_list : string -> ekimei_t list -> eki_t list *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> make_initial_eki_list name lst <span class=\"synStatement\">=</span>\n</span><span class=\"code-line\">  <span class=\"synPreProc\">List</span>.map <span class=\"synStatement\">(fun</span> eki <span class=\"synStatement\">-></span> <span class=\"synStatement\">match</span> eki <span class=\"synStatement\">with</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">{</span>kanji <span class=\"synStatement\">=</span> k<span class=\"synStatement\">;</span> kana <span class=\"synStatement\">=</span> a<span class=\"synStatement\">;</span> romaji <span class=\"synStatement\">=</span> r<span class=\"synStatement\">;</span> shozoku <span class=\"synStatement\">=</span> s<span class=\"synStatement\">}</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">-></span> <span class=\"synStatement\">if</span> k <span class=\"synStatement\">=</span> name\n</span><span class=\"code-line\">      <span class=\"synStatement\">then</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> k<span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>k<span class=\"synStatement\">]}</span>\n</span><span class=\"code-line\">      <span class=\"synStatement\">else</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> k<span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">})</span>\n</span><span class=\"code-line\">    lst<span class=\"synStatement\">;;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* make_initial_eki_list test *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> make_initial_eki_list <span class=\"synConstant\">\"代々木上原\"</span> <span class=\"synStatement\">[{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"代々木上原\"</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">\"よよぎうえはら\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                                                 romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"yoyogiuehara\"</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">\"千代田線\"</span><span class=\"synStatement\">}]</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"代々木上原\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"代々木上原\"</span><span class=\"synStatement\">]}];;</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> make_initial_eki_list <span class=\"synConstant\">\"明治神宮前\"</span> <span class=\"synStatement\">[{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"代々木公園\"</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">\"よよぎこうえん\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                                                romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"yoyogikouen\"</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">\"千代田線\"</span><span class=\"synStatement\">};</span>\n</span><span class=\"code-line\">                                               <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"明治神宮前\"</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">\"めいじじんぐうまえ\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                                                romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"meijijinguumae\"</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">\"千代田線\"</span><span class=\"synStatement\">}]</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"代々木公園\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"明治神宮前\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"明治神宮前\"</span><span class=\"synStatement\">]}];;</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> make_initial_eki_list <span class=\"synConstant\">\"赤坂\"</span> <span class=\"synStatement\">[{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"表参道\"</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">\"おもてさんどう\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                                           romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"omotesandou\"</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">\"千代田線\"</span><span class=\"synStatement\">};</span>\n</span><span class=\"code-line\">                                          <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"乃木坂\"</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">\"のぎざか\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                                           romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"nogizaka\"</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">\"千代田線\"</span><span class=\"synStatement\">};</span>\n</span><span class=\"code-line\">                                          <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"赤坂\"</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">\"あかさか\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                                           romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"akasaka\"</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">\"千代田線\"</span><span class=\"synStatement\">}]</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"表参道\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"乃木坂\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"赤坂\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"赤坂\"</span><span class=\"synStatement\">]}];;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：ekimei_t型のレコードとekimei_t型のリストを受け取ったら，平仮名の昇順となる位置に</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   ekimei_t型のレコードを挿入する．同じ駅がリストにあれば挿入しない．</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   seiretsuのための補助関数*)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* ekimei_isnert : -> ekimei_t -> ekimei_t list -> ekimei_t list *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> ekimei_insert eki lst <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> lst <span class=\"synStatement\">with</span>\n</span><span class=\"code-line\">    <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-></span> <span class=\"synStatement\">[</span>eki<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">|</span> <span class=\"synStatement\">({</span>kanji <span class=\"synStatement\">=</span> kanji<span class=\"synStatement\">;</span> kana <span class=\"synStatement\">=</span> kana<span class=\"synStatement\">;</span> romaji <span class=\"synStatement\">=</span> romaji<span class=\"synStatement\">;</span> shozoku <span class=\"synStatement\">=</span> shozoku<span class=\"synStatement\">;}</span> <span class=\"synStatement\">as</span> first<span class=\"synStatement\">)</span> <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-></span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">if</span> kana <span class=\"synStatement\">=</span> eki.kana\n</span><span class=\"code-line\">     <span class=\"synStatement\">then</span> lst                   <span class=\"synComment\">(* リストにあったほうが残る *)</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">else</span> <span class=\"synStatement\">if</span> eki.kana <span class=\"synStatement\">&#x3C;</span> kana    <span class=\"synComment\">(* 駅のkana &#x3C; first のkana *)</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">then</span> eki <span class=\"synStatement\">::</span> lst\n</span><span class=\"code-line\">     <span class=\"synStatement\">else</span> first <span class=\"synStatement\">::</span> ekimei_insert eki rest\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* test data *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> yoyogiuehara_tiyodasen <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"代々木上原\"</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">\"よよぎうえはら\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                              romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"yoyogiuehara\"</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">\"千代田線\"</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> otemachi_tiyodasen <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">\"おおてまち\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                         romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"otemachi\"</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">\"千代田線\"</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> otemachi_hanzoumonsen <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>kanji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">;</span> kana<span class=\"synStatement\">=</span><span class=\"synConstant\">\"おおてまち\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                             romaji<span class=\"synStatement\">=</span><span class=\"synConstant\">\"otemachi\"</span><span class=\"synStatement\">;</span> shozoku<span class=\"synStatement\">=</span><span class=\"synConstant\">\"半蔵門線\"</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* test *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> ekimei_insert otemachi_tiyodasen <span class=\"synConstant\">[]</span> <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> ekimei_insert otemachi_tiyodasen <span class=\"synStatement\">[</span>otemachi_hanzoumonsen<span class=\"synStatement\">]</span> <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_hanzoumonsen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> ekimei_insert otemachi_tiyodasen <span class=\"synStatement\">[</span>yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">;</span> yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test4 <span class=\"synStatement\">=</span> ekimei_insert yoyogiuehara_tiyodasen <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">;</span> yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：ekimei_t型のリストを受け取ったら，それを平仮名の順に整列し，</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   さらに駅の重複を取り除いたekimei_t型のリストを返す *)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* seiretsu : ekimei_t -> ekimei_t *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> seiretsu lst <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> lst <span class=\"synStatement\">with</span>\n</span><span class=\"code-line\">    <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-></span> <span class=\"synConstant\">[]</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">|</span> first <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-></span> ekimei_insert first <span class=\"synStatement\">(</span>seiretsu rest<span class=\"synStatement\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> seiretsu <span class=\"synConstant\">[]</span> <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test3 <span class=\"synStatement\">=</span> seiretsu <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">;</span> otemachi_hanzoumonsen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_hanzoumonsen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test4 <span class=\"synStatement\">=</span> seiretsu <span class=\"synStatement\">[</span>otemachi_tiyodasen<span class=\"synStatement\">;</span> otemachi_hanzoumonsen<span class=\"synStatement\">;</span> yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span>otemachi_hanzoumonsen<span class=\"synStatement\">;</span> yoyogiuehara_tiyodasen<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> otemachi <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">]}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> mitsukoshimae <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> shibuya <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"渋谷\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> aoyamaichome <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"青山一丁目\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：直前に確定した駅 p (eki_t型)と味覚手の役のリスト v (eki_t list型)を受け取り</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   必要な更新処理を行った後の未確定の駅のリストを返す*)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* koushin -> eki_t -> eki_t list -> ekikan_t list -> eki_t list *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> koushin p v ekikan <span class=\"synStatement\">=</span>\n</span><span class=\"code-line\">  <span class=\"synPreProc\">List</span>.map\n</span><span class=\"code-line\">    <span class=\"synStatement\">(fun</span> q <span class=\"synStatement\">-></span>\n</span><span class=\"code-line\">      <span class=\"synStatement\">let</span> kyori <span class=\"synStatement\">=</span> get_ekikan_kyori p.namae q.namae ekikan <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">      <span class=\"synStatement\">if</span> kyori <span class=\"synStatement\">=</span> infinity\n</span><span class=\"code-line\">      <span class=\"synStatement\">then</span> q\n</span><span class=\"code-line\">      <span class=\"synStatement\">else</span> <span class=\"synStatement\">let</span> p_keiyu_q_kyori <span class=\"synStatement\">=</span> p.saitan_kyori +. kyori <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">           <span class=\"synStatement\">if</span>  p_keiyu_q_kyori  <span class=\"synStatement\">&#x3C;</span> q.saitan_kyori\n</span><span class=\"code-line\">           <span class=\"synStatement\">then</span> <span class=\"synStatement\">{</span> namae <span class=\"synStatement\">=</span> q.namae<span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> p_keiyu_q_kyori<span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                  temae_list <span class=\"synStatement\">=(</span>q.namae<span class=\"synStatement\">)</span> <span class=\"synStatement\">::</span> p.temae_list<span class=\"synStatement\">}</span>\n</span><span class=\"code-line\">           <span class=\"synStatement\">else</span> q<span class=\"synStatement\">)</span>\n</span><span class=\"code-line\">    v<span class=\"synStatement\">;;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* test data *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> otemachi <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0</span>.<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">]}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> mitsukoshimae <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> shibuya <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"渋谷\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> aoyamaichome <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"青山一丁目\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> nagatacho <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"永田町\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> shinochanomizu <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"新御茶ノ水\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* koushin test *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> koushin_test1 <span class=\"synStatement\">=</span> koushin otemachi\n</span><span class=\"code-line\">  <span class=\"synStatement\">[</span>mitsukoshimae<span class=\"synStatement\">;</span> shibuya<span class=\"synStatement\">;</span> shinochanomizu<span class=\"synStatement\">;</span> aoyamaichome<span class=\"synStatement\">]</span> global_ekikan_list\n</span><span class=\"code-line\">  <span class=\"synStatement\">=[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.7</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">     temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"渋谷\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"新御茶ノ水\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.3</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">     temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"新御茶ノ水\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"青山一丁目\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}];;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：eki_t list型のリストを受け取り，「最短距離最小の駅」と</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   「最短距離最小の駅以外からなるリスト」の組を返す *)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* saitan_wo_bunri : eki_t list -> eki_t * eki_t list *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> saitan_wo_bunri eki_list <span class=\"synStatement\">=</span>\n</span><span class=\"code-line\">  <span class=\"synPreProc\">List</span>.fold_right\n</span><span class=\"code-line\">    <span class=\"synStatement\">(fun</span> first rest_saitan <span class=\"synStatement\">-></span>\n</span><span class=\"code-line\">      <span class=\"synStatement\">let</span> <span class=\"synStatement\">(</span>minimum, lst<span class=\"synStatement\">)</span> <span class=\"synStatement\">=</span> rest_saitan <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">      <span class=\"synStatement\">if</span> minimum.namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"\"</span>\n</span><span class=\"code-line\">      <span class=\"synStatement\">then</span> <span class=\"synStatement\">(</span>first, lst<span class=\"synStatement\">)</span>\n</span><span class=\"code-line\">      <span class=\"synStatement\">else</span> <span class=\"synStatement\">if</span> first.saitan_kyori <span class=\"synStatement\">&#x3C;=</span> minimum.saitan_kyori\n</span><span class=\"code-line\">      <span class=\"synStatement\">then</span> <span class=\"synStatement\">(</span>first, minimum <span class=\"synStatement\">::</span> lst<span class=\"synStatement\">)</span>\n</span><span class=\"code-line\">      <span class=\"synStatement\">else</span> <span class=\"synStatement\">(</span>minimum, first <span class=\"synStatement\">::</span> lst<span class=\"synStatement\">))</span>\n</span><span class=\"code-line\">    eki_list\n</span><span class=\"code-line\">    <span class=\"synStatement\">({</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>, <span class=\"synConstant\">[]</span><span class=\"synStatement\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> saitan_wo_bunri <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.7</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                              temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">                             <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"渋谷\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.3</span><span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"渋谷\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">                             <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"新御茶ノ水\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.3</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                              temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"新御茶ノ水\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">                             <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"青山一丁目\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                              temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}]</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">=({</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"渋谷\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.3</span><span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"渋谷\"</span><span class=\"synStatement\">]}</span>,\n</span><span class=\"code-line\">    <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">0.7</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">     temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"新御茶ノ水\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.3</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">      temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"新御茶ノ水\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"青山一丁目\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}]);;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：eki_t list型の未確定の駅のリストとekikan_t list型の駅間のリストを受け取り</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   ダイクストラのアルゴリズムにしたがって各駅について</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   最短距離と最短経路が正しく入ったリストを返す *)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* dijkstra_main : eki_t list -> ekikan_t list -> eki_t list *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> dijkstra_main  eki_list ekikan <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> eki_list <span class=\"synStatement\">with</span>\n</span><span class=\"code-line\">    <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-></span> <span class=\"synConstant\">[]</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">|</span> first <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-></span> <span class=\"synStatement\">match</span> <span class=\"synStatement\">(</span>saitan_wo_bunri eki_list<span class=\"synStatement\">)</span> <span class=\"synStatement\">with</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">(</span>saitan1, <span class=\"synConstant\">[]</span><span class=\"synStatement\">)</span> <span class=\"synStatement\">-></span> <span class=\"synStatement\">[</span>saitan1<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">|</span> <span class=\"synStatement\">(</span>saitan2, rest<span class=\"synStatement\">)</span> <span class=\"synStatement\">-></span> saitan2 <span class=\"synStatement\">::</span> <span class=\"synStatement\">(</span>dijkstra_main <span class=\"synStatement\">(</span>koushin saitan2 rest ekikan<span class=\"synStatement\">)</span> ekikan<span class=\"synStatement\">)</span> <span class=\"synStatement\">;;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* test_data *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> otemachi <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.7</span><span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"神保町\"</span><span class=\"synStatement\">]};;</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> mitsukoshimae <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};;</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> suitenguumae <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"水天宮前\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};;</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> kiyosumishirakawa <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"清澄白河\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};;</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> sumiyoshi <span class=\"synStatement\">=</span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"住吉\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">};;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> dijkstra_test1 <span class=\"synStatement\">=</span> dijkstra_main <span class=\"synStatement\">[</span>otemachi<span class=\"synStatement\">;</span> mitsukoshimae<span class=\"synStatement\">;</span> suitenguumae<span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">                                    kiyosumishirakawa<span class=\"synStatement\">;</span> sumiyoshi<span class=\"synStatement\">]</span>\n</span><span class=\"code-line\">  global_ekikan_list\n</span><span class=\"code-line\">  <span class=\"synStatement\">=</span> <span class=\"synStatement\">[{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"大手町\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">1.7</span><span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"神保町\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">2.4</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">      temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"神保町\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"水天宮前\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">3.7</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">      temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"水天宮前\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"神保町\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"清澄白河\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">5.4</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">      temae_list <span class=\"synStatement\">=</span> <span class=\"synStatement\">[</span><span class=\"synConstant\">\"清澄白河\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"水天宮前\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"神保町\"</span><span class=\"synStatement\">]};</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"住吉\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">7.30000000000000071</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">      temae_list <span class=\"synStatement\">=</span>\n</span><span class=\"code-line\">         <span class=\"synStatement\">[</span><span class=\"synConstant\">\"住吉\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"清澄白河\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"水天宮前\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"三越前\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"神保町\"</span><span class=\"synStatement\">]}];;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* 目的：始点の駅名（ローマ字の文字列）と終点の駅名（ローマ字の文字列）を受け取り</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   seiretsuを使ってglobal_ekimei_list の重複を取り除き，</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   romaji_to_kanji を使って始点と終点の漢字表記を求め</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   make_initial_eki_listを使って駅のリストを作り，</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   dijkstra_mainを使って各駅までの最短路を確定し，</span>\n</span><span class=\"code-line\"><span class=\"synComment\">   その中空終点の駅のレコード(eki_t型)を返す*)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* dijkstra : string -> string -> eki_t *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> dijkstra siten shuten <span class=\"synStatement\">=</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">let</span> sorted_ekimei_list <span class=\"synStatement\">=</span> seiretsu global_ekimei_list <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">let</span> siten_kanji <span class=\"synStatement\">=</span> romaji_to_kanji siten sorted_ekimei_list <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">let</span> shuten_kanji <span class=\"synStatement\">=</span> romaji_to_kanji shuten sorted_ekimei_list <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">let</span> initialized_list <span class=\"synStatement\">=</span> make_initial_eki_list siten_kanji sorted_ekimei_list <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">let</span> saitan_list <span class=\"synStatement\">=</span> dijkstra_main initialized_list global_ekikan_list <span class=\"synStatement\">in</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">let</span> <span class=\"synStatement\">rec</span> serch item lst <span class=\"synStatement\">=</span> <span class=\"synStatement\">match</span> lst <span class=\"synStatement\">with</span>\n</span><span class=\"code-line\">      <span class=\"synConstant\">[]</span> <span class=\"synStatement\">-></span> <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> infinity<span class=\"synStatement\">;</span> temae_list <span class=\"synStatement\">=</span> <span class=\"synConstant\">[]</span><span class=\"synStatement\">}</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">|</span> first <span class=\"synStatement\">::</span> rest <span class=\"synStatement\">-></span>\n</span><span class=\"code-line\">       <span class=\"synStatement\">if</span> first.namae <span class=\"synStatement\">=</span> item\n</span><span class=\"code-line\">       <span class=\"synStatement\">then</span> first\n</span><span class=\"code-line\">       <span class=\"synStatement\">else</span> serch item rest\n</span><span class=\"code-line\">  <span class=\"synStatement\">in</span> serch shuten_kanji saitan_list<span class=\"synStatement\">;;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">(* test *)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">(* サポートページからのコピペ *)</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test1 <span class=\"synStatement\">=</span> dijkstra <span class=\"synConstant\">\"shibuya\"</span> <span class=\"synConstant\">\"gokokuji\"</span> <span class=\"synStatement\">=</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"護国寺\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">9.8</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">   temae_list <span class=\"synStatement\">=</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">[</span><span class=\"synConstant\">\"護国寺\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"江戸川橋\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"飯田橋\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"市ヶ谷\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"麹町\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"永田町\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">      <span class=\"synConstant\">\"青山一丁目\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"表参道\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"渋谷\"</span><span class=\"synStatement\">]}</span>\n</span><span class=\"code-line\"><span class=\"synStatement\">let</span> test2 <span class=\"synStatement\">=</span> dijkstra <span class=\"synConstant\">\"myogadani\"</span> <span class=\"synConstant\">\"meguro\"</span> <span class=\"synStatement\">=</span>\n</span><span class=\"code-line\">  <span class=\"synStatement\">{</span>namae <span class=\"synStatement\">=</span> <span class=\"synConstant\">\"目黒\"</span><span class=\"synStatement\">;</span> saitan_kyori <span class=\"synStatement\">=</span> <span class=\"synConstant\">12.7000000000000028</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">   temae_list <span class=\"synStatement\">=</span>\n</span><span class=\"code-line\">     <span class=\"synStatement\">[</span><span class=\"synConstant\">\"目黒\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"白金台\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"白金高輪\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"麻布十番\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"六本木一丁目\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"溜池山王\"</span><span class=\"synStatement\">;</span>\n</span><span class=\"code-line\">      <span class=\"synConstant\">\"永田町\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"麹町\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"市ヶ谷\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"飯田橋\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"後楽園\"</span><span class=\"synStatement\">;</span> <span class=\"synConstant\">\"茗荷谷\"</span><span class=\"synStatement\">]}</span>\n</span></code></pre>"},"__N_SSG":true}