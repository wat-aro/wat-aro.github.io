{"pageProps":{"post":{"title":"SICP 問題1.22","published":"2015/10/07","tags":["scheme","SICP"],"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>timed-prime-test n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">newline</span><span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>start-prime-test n <span class=\"synSpecial\">(</span>runtime<span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>start-prime-test n start-time<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>prime? n<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span>report-prime <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synSpecial\">(</span>runtime<span class=\"synSpecial\">)</span> start-time<span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>report-prime elapsed-time<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> <span class=\"synConstant\">&quot; *** &quot;</span><span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> elapsed-time<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>runtime<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>use srfi-11<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>let-values <span class=\"synSpecial\">(((</span>a b<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>sys-gettimeofday<span class=\"synSpecial\">)))</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> a <span class=\"synConstant\">1000000</span><span class=\"synSpecial\">)</span> b<span class=\"synSpecial\">)))</span>\n</pre>\n\n\n<p>以上を使って指定範囲の連続する奇数について<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%C1%C7%BF%F4\">素数</a>性を調べる手続き手続きを書く．<br/>\n　</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>search-for-primes start end<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter start end<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">&gt;</span> start end<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">newline</span><span class=\"synSpecial\">))</span>\n          <span class=\"synSpecial\">((</span>prime? start<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span>timed-prime-test start<span class=\"synSpecial\">)</span>\n                               <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">2</span> start<span class=\"synSpecial\">)</span> end<span class=\"synSpecial\">)))</span>\n          <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">2</span> start<span class=\"synSpecial\">)</span> end<span class=\"synSpecial\">))))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">odd?</span> start<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span>iter start end<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">1</span> start<span class=\"synSpecial\">)</span> end<span class=\"synSpecial\">)))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (search-for-primes 1000 1100)\n\n1009 *** 6\n1013 *** 6\n1019 *** 5\n1021 *** 5\n1031 *** 6\n1033 *** 6\n1039 *** 6\n1049 *** 6\n1051 *** 5\n1061 *** 6\n1063 *** 6\n1069 *** 5\n1087 *** 6\n1091 *** 6\n1093 *** 6\n1097 *** 6\n#&lt;undef&gt;\ngosh&gt; (search-for-primes 10000 10100)\n\n10007 *** 28\n10009 *** 17\n10037 *** 17\n10039 *** 17\n10061 *** 17\n10067 *** 17\n10069 *** 17\n10079 *** 18\n10091 *** 17\n10093 *** 17\n10099 *** 18\n#&lt;undef&gt;\ngosh&gt; (search-for-primes 100000 100100)\n\n100003 *** 85\n100019 *** 55\n100043 *** 55\n100049 *** 55\n100057 *** 54\n100069 *** 54\n#&lt;undef&gt;\ngosh&gt; (search-for-primes 1000000 1000100)\n\n1000003 *** 195\n1000033 *** 172\n1000037 *** 172\n1000039 *** 172\n1000081 *** 176\n1000099 *** 176\n#&lt;undef&gt;</pre>\n\n\n<p>nが100倍になると処理時間は概ね10倍となっているので予想通りと言える．</p>\n\n","slug":"SICP 問題1.22"},"content":"<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>timed-prime-test n<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">newline</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> n<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>start-prime-test n <span class=\"synSpecial\">(</span>runtime<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>start-prime-test n start-time<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>prime? n<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span>report-prime <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synSpecial\">(</span>runtime<span class=\"synSpecial\">)</span> start-time<span class=\"synSpecial\">))))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>report-prime elapsed-time<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> <span class=\"synConstant\">\" *** \"</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> elapsed-time<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>runtime<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>use srfi-11<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>let-values <span class=\"synSpecial\">(((</span>a b<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>sys-gettimeofday<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> a <span class=\"synConstant\">1000000</span><span class=\"synSpecial\">)</span> b<span class=\"synSpecial\">)))</span>\n</span></code></pre>\n<p>以上を使って指定範囲の連続する奇数について<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%C1%C7%BF%F4\">素数</a>性を調べる手続き手続きを書く．<br>\n　</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>search-for-primes start end<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter start end<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">></span> start end<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">newline</span><span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">          <span class=\"synSpecial\">((</span>prime? start<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span>timed-prime-test start<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                               <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">2</span> start<span class=\"synSpecial\">)</span> end<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">          <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">2</span> start<span class=\"synSpecial\">)</span> end<span class=\"synSpecial\">))))</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">odd?</span> start<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span>iter start end<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">1</span> start<span class=\"synSpecial\">)</span> end<span class=\"synSpecial\">)))</span>\n</span></code></pre>\n<pre class=\"code\" data-lang=\"\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">gosh> (search-for-primes 1000 1100)\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">1009 *** 6\n</span><span class=\"code-line\">1013 *** 6\n</span><span class=\"code-line\">1019 *** 5\n</span><span class=\"code-line\">1021 *** 5\n</span><span class=\"code-line\">1031 *** 6\n</span><span class=\"code-line\">1033 *** 6\n</span><span class=\"code-line\">1039 *** 6\n</span><span class=\"code-line\">1049 *** 6\n</span><span class=\"code-line\">1051 *** 5\n</span><span class=\"code-line\">1061 *** 6\n</span><span class=\"code-line\">1063 *** 6\n</span><span class=\"code-line\">1069 *** 5\n</span><span class=\"code-line\">1087 *** 6\n</span><span class=\"code-line\">1091 *** 6\n</span><span class=\"code-line\">1093 *** 6\n</span><span class=\"code-line\">1097 *** 6\n</span><span class=\"code-line\">#&#x3C;undef>\n</span><span class=\"code-line\">gosh> (search-for-primes 10000 10100)\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">10007 *** 28\n</span><span class=\"code-line\">10009 *** 17\n</span><span class=\"code-line\">10037 *** 17\n</span><span class=\"code-line\">10039 *** 17\n</span><span class=\"code-line\">10061 *** 17\n</span><span class=\"code-line\">10067 *** 17\n</span><span class=\"code-line\">10069 *** 17\n</span><span class=\"code-line\">10079 *** 18\n</span><span class=\"code-line\">10091 *** 17\n</span><span class=\"code-line\">10093 *** 17\n</span><span class=\"code-line\">10099 *** 18\n</span><span class=\"code-line\">#&#x3C;undef>\n</span><span class=\"code-line\">gosh> (search-for-primes 100000 100100)\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">100003 *** 85\n</span><span class=\"code-line\">100019 *** 55\n</span><span class=\"code-line\">100043 *** 55\n</span><span class=\"code-line\">100049 *** 55\n</span><span class=\"code-line\">100057 *** 54\n</span><span class=\"code-line\">100069 *** 54\n</span><span class=\"code-line\">#&#x3C;undef>\n</span><span class=\"code-line\">gosh> (search-for-primes 1000000 1000100)\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">1000003 *** 195\n</span><span class=\"code-line\">1000033 *** 172\n</span><span class=\"code-line\">1000037 *** 172\n</span><span class=\"code-line\">1000039 *** 172\n</span><span class=\"code-line\">1000081 *** 176\n</span><span class=\"code-line\">1000099 *** 176\n</span><span class=\"code-line\">#&#x3C;undef></span></code></pre>\n<p>nが100倍になると処理時間は概ね10倍となっているので予想通りと言える．</p>"},"__N_SSG":true}