{"pageProps":{"post":{"title":"http-conduit で取得したデータを日本語表示する","published":"2018/02/27","tags":["Haskell"],"content":"\n<p>簡単な<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/cli\">cli</a>ツールを書こうとしたら http-conduit で取得したデータの日本語表示でハマってしまいました。</p>\n\n<p><code>http-conduit</code> の <code>httpLbs</code> で取得したデータをそのままターミナルに出力します。<br/>\n必要なパッケージは <code>http-conduit</code> <code>bytestring</code> <code>utf8-string</code> の３つ。</p>\n\n<pre class=\"code lang-haskell\" data-lang=\"haskell\" data-unlink><span class=\"synSpecial\">{-# LANGUAGE OverloadedStrings #-}</span>\n\n<span class=\"synPreProc\">import</span> <span class=\"synPreProc\">qualified</span> Codec.Binary.UTF8.String <span class=\"synPreProc\">as</span> Codec\n<span class=\"synPreProc\">import</span>           Data.ByteString.Char8    (unpack)\n<span class=\"synPreProc\">import</span>           Data.ByteString.Lazy     (toStrict)\n<span class=\"synPreProc\">import</span> <span class=\"synPreProc\">qualified</span> Network.HTTP.Simple      <span class=\"synPreProc\">as</span> Simple\n\nmain <span class=\"synStatement\">::</span> IO ()\nmain <span class=\"synStatement\">=</span> <span class=\"synStatement\">do</span>\n    res <span class=\"synStatement\">&lt;-</span> Simple.httpLbs <span class=\"synConstant\">&quot;https://twitter.com/&quot;</span>\n\n    putStrLn <span class=\"synStatement\">$</span> Codec.decodeString <span class=\"synStatement\">$</span> unpack <span class=\"synStatement\">$</span> toStrict <span class=\"synStatement\">$</span> Simple.getResponseBody res\n</pre>\n\n\n<p><code>httpLbs</code> を使い取得したデータは <code>Reponse</code> 型で包まれているので <code>getResponseBody</code> で <code>ByteString</code> を取得し、 <code>String</code> に変換して出力します。<br/>\nなぜか <code>ByteString</code> でなく <code>ByteString.Lazy</code> になっていたので <code>toStrict</code> で変換。<br/>\nそして <code>unpack</code> しても日本語が表示されないため、 <code>Codec.Binary.UTF8.String</code> の <code>decodeString</code> で変換してから表示。</p>\n\n<p>文字列難しい</p>\n\n<p>[参考]</p>\n\n<p><a href=\"https://qiita.com/lotz/items/f8440fa08a62d1c44e1a\">Haskell&#x304B;&#x3089;&#x7C21;&#x5358;&#x306B;Web API&#x3092;&#x53E9;&#x304F;&#x65B9;&#x6CD5; - Qiita</a></p>\n\n<p><a href=\"https://qiita.com/satosystems/items/e07e9907e4da9ab853fc\">Haskell &#x6587;&#x5B57;&#x5217;&#x5909;&#x63DB;&#x5165;&#x9580; - Qiita</a></p>\n\n","slug":"http-conduit で取得したデータを日本語表示する"},"content":"<p>簡単な<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/cli\">cli</a>ツールを書こうとしたら http-conduit で取得したデータの日本語表示でハマってしまいました。</p>\n<p><code>http-conduit</code> の <code>httpLbs</code> で取得したデータをそのままターミナルに出力します。<br>\n必要なパッケージは <code>http-conduit</code> <code>bytestring</code> <code>utf8-string</code> の３つ。</p>\n<pre class=\"code lang-haskell\" data-lang=\"haskell\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">{-# LANGUAGE OverloadedStrings #-}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synPreProc\">import</span> <span class=\"synPreProc\">qualified</span> Codec.Binary.UTF8.String <span class=\"synPreProc\">as</span> Codec\n</span><span class=\"code-line\"><span class=\"synPreProc\">import</span>           Data.ByteString.Char8    (unpack)\n</span><span class=\"code-line\"><span class=\"synPreProc\">import</span>           Data.ByteString.Lazy     (toStrict)\n</span><span class=\"code-line\"><span class=\"synPreProc\">import</span> <span class=\"synPreProc\">qualified</span> Network.HTTP.Simple      <span class=\"synPreProc\">as</span> Simple\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">main <span class=\"synStatement\">::</span> IO ()\n</span><span class=\"code-line\">main <span class=\"synStatement\">=</span> <span class=\"synStatement\">do</span>\n</span><span class=\"code-line\">    res <span class=\"synStatement\">&#x3C;-</span> Simple.httpLbs <span class=\"synConstant\">\"https://twitter.com/\"</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">    putStrLn <span class=\"synStatement\">$</span> Codec.decodeString <span class=\"synStatement\">$</span> unpack <span class=\"synStatement\">$</span> toStrict <span class=\"synStatement\">$</span> Simple.getResponseBody res\n</span></code></pre>\n<p><code>httpLbs</code> を使い取得したデータは <code>Reponse</code> 型で包まれているので <code>getResponseBody</code> で <code>ByteString</code> を取得し、 <code>String</code> に変換して出力します。<br>\nなぜか <code>ByteString</code> でなく <code>ByteString.Lazy</code> になっていたので <code>toStrict</code> で変換。<br>\nそして <code>unpack</code> しても日本語が表示されないため、 <code>Codec.Binary.UTF8.String</code> の <code>decodeString</code> で変換してから表示。</p>\n<p>文字列難しい</p>\n<p>[参考]</p>\n<p><a href=\"https://qiita.com/lotz/items/f8440fa08a62d1c44e1a\">Haskellから簡単にWeb APIを叩く方法 - Qiita</a></p>\n<p><a href=\"https://qiita.com/satosystems/items/e07e9907e4da9ab853fc\">Haskell 文字列変換入門 - Qiita</a></p>"},"__N_SSG":true}