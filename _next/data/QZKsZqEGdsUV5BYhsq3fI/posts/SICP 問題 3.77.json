{"pageProps":{"title":"SICP 問題 3.77","published":"2015/12/17","tags":["scheme","SICP"],"content":"<p>ループのあるシステムで使えるようにintegrandをdelayed-integrandにする．<br>\nintegralを呼び出す時の第一引数にはdelayをつける</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>integral integrand initial-value dt<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>cons-stream initial-value\n</span><span class=\"code-line\">               <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>stream-null? integrand<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                   the-empty-stream\n</span><span class=\"code-line\">                   <span class=\"synSpecial\">(</span>integral <span class=\"synSpecial\">(</span>stream-cdr integrand<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                             <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> dt <span class=\"synSpecial\">(</span>stream-car integrand<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">                                initial-value<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                             dt<span class=\"synSpecial\">))))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>integral delayed-integrand initial-value dt<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>cons-stream initial-value\n</span><span class=\"code-line\">               <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>integrand <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">force</span> delayed-integrand<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">                 <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>stream-null? integrand<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                     the-empty-stream\n</span><span class=\"code-line\">                     <span class=\"synSpecial\">(</span>integral <span class=\"synSpecial\">(</span><span class=\"synStatement\">delay</span> <span class=\"synSpecial\">(</span>stream-cdr integrand<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">                               <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> dt <span class=\"synSpecial\">(</span>stream-car integrand<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">                                  initial-value<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                               dt<span class=\"synSpecial\">)))))</span>\n</span></code></pre>","slug":"SICP 問題 3.77","rawContent":"\n<p>ループのあるシステムで使えるようにintegrandをdelayed-integrandにする．<br/>\nintegralを呼び出す時の第一引数にはdelayをつける</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>integral integrand initial-value dt<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>cons-stream initial-value\n               <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>stream-null? integrand<span class=\"synSpecial\">)</span>\n                   the-empty-stream\n                   <span class=\"synSpecial\">(</span>integral <span class=\"synSpecial\">(</span>stream-cdr integrand<span class=\"synSpecial\">)</span>\n                             <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> dt <span class=\"synSpecial\">(</span>stream-car integrand<span class=\"synSpecial\">))</span>\n                                initial-value<span class=\"synSpecial\">)</span>\n                             dt<span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>integral delayed-integrand initial-value dt<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>cons-stream initial-value\n               <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>integrand <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">force</span> delayed-integrand<span class=\"synSpecial\">)))</span>\n                 <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>stream-null? integrand<span class=\"synSpecial\">)</span>\n                     the-empty-stream\n                     <span class=\"synSpecial\">(</span>integral <span class=\"synSpecial\">(</span><span class=\"synStatement\">delay</span> <span class=\"synSpecial\">(</span>stream-cdr integrand<span class=\"synSpecial\">))</span>\n                               <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> dt <span class=\"synSpecial\">(</span>stream-car integrand<span class=\"synSpecial\">))</span>\n                                  initial-value<span class=\"synSpecial\">)</span>\n                               dt<span class=\"synSpecial\">)))))</span>\n</pre>\n\n\n"},"__N_SSG":true}