{"pageProps":{"posts":[{"data":{"title":"SICP 問題 2.95","published":"2015/10/26","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>element-of-set? x set<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">null?</span> set<span class=\"synSpecial\">)</span> false<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">equal?</span> x <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> set<span class=\"synSpecial\">))</span> true<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span>element-of-set? x <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> set<span class=\"synSpecial\">)))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>unionset s t<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">null?</span> s<span class=\"synSpecial\">)</span> t<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span>element-of-set? <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">)</span> t<span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>unionset <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> s<span class=\"synSpecial\">)</span> t<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">)</span>\n                    <span class=\"synSpecial\">(</span>unionset <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> s<span class=\"synSpecial\">)</span> t<span class=\"synSpecial\">)))))</span>\n</pre>\n\n\n","slug":"SICP 問題 2.95"},{"data":{"title":"SICP 問題 2.63","published":"2015/10/26","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>tree-&gt;list-1 tree<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> tree<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">'()</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">append</span> <span class=\"synSpecial\">(</span>tree-&gt;list-1 <span class=\"synSpecial\">(</span>left-branch tree<span class=\"synSpecial\">))</span>\n              <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span>entry tree<span class=\"synSpecial\">)</span>\n                    <span class=\"synSpecial\">(</span>tree-&gt;list-1 <span class=\"synSpecial\">(</span>right-branch tree<span class=\"synSpecial\">))))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>tree-&gt;list-2 tree<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>copy-to-list tree result-list<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> tree<span class=\"synSpecial\">)</span>\n        result-list\n        <span class=\"synSpecial\">(</span>copy-to-list <span class=\"synSpecial\">(</span>left-branch tree<span class=\"synSpecial\">)</span>\n                      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span>entry tree<span class=\"synSpecial\">)</span>\n                            <span class=\"synSpecial\">(</span>copy-to-list <span class=\"synSpecial\">(</span>right-branch tree<span class=\"synSpecial\">)</span>\n                                          result-list<span class=\"synSpecial\">)))))</span>\n  <span class=\"synSpecial\">(</span>copy-to-list tree <span class=\"synSpecial\">'()))</span>\n</pre>\n\n\n<p>この二つの手続きは同じリストを生じる．<br/>\n　<br/>\nステップ数も同じ．appendとconsの差で2のほうが遅く増加する．</p>\n\n","slug":"SICP 問題 2.63"},{"data":{"title":"SICP 問題 2.62","published":"2015/10/26","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>union-set s t<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">null?</span> s<span class=\"synSpecial\">)</span> t<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">null?</span> t<span class=\"synSpecial\">)</span> s<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">=</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> t<span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">)</span>\n               <span class=\"synSpecial\">(</span>union-set <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> t<span class=\"synSpecial\">))))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">&lt;</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> t<span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">)</span>\n               <span class=\"synSpecial\">(</span>union-set <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> s<span class=\"synSpecial\">)</span> t<span class=\"synSpecial\">)))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">&lt;</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> t<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> t<span class=\"synSpecial\">)</span>\n               <span class=\"synSpecial\">(</span>union-set s <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> t<span class=\"synSpecial\">))))))</span>\n</pre>\n\n\n","slug":"SICP 問題 2.62"},{"data":{"title":"SICP 問題 2.61","published":"2015/10/26","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>adjoin-set x s<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">null?</span> s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> x<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">=</span> x <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">))</span> s<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">&lt;</span> x <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">))</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> x s<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>adjoin-set x <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> s<span class=\"synSpecial\">))))))</span>\n\n<span class=\"synComment\">;; 同じ数字，またはxより大きい数字が出てきた時点で計算が終わるので順序付けられない表現に比べ半分のステップ数ですむ．</span>\n</pre>\n\n\n","slug":"SICP 問題 2.61"},{"data":{"title":"SICP 問題 2.60","published":"2015/10/26","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; element-of-set? intersection-setはそのまま</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>adjoin-set x s<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> x s<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>union-set s t<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">append</span> s t<span class=\"synSpecial\">))</span>\n\n<span class=\"synComment\">;; element-of-set?やintersection-setについてはsetの中身が増えることで比較回数が増えて効率は下がる．</span>\n<span class=\"synComment\">;; adjoin-set union-setについては条件分岐がなくなるので効率がよくなる．</span>\n</pre>\n\n\n","slug":"SICP 問題 2.60"},{"data":{"title":"SICP 問題 2.58","published":"2015/10/26","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; a</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-sum a1 a2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span>=number? a1 <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span> a2<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span>=number? a2 <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span> a1<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">number?</span> a1<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">number?</span> a2<span class=\"synSpecial\">))</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> a1 a2<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> a1 <span class=\"synSpecial\">'</span>+ a2<span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-product m1 m2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synStatement\">or</span> <span class=\"synSpecial\">(</span>=number? m1 <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>=number? m2 <span class=\"synConstant\">0</span><span class=\"synSpecial\">))</span> <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span>=number? m1 <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span> m2<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span>=number? m2 <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span> m1<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">number?</span> m1<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">number?</span> m2<span class=\"synSpecial\">))</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> m1 m2<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> m1 <span class=\"synSpecial\">'</span>* m2<span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>sum? x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">pair?</span> x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>+<span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>addend s<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> s<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>product? x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">pair?</span> x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>*<span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>multiplier p<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> p<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>exponentiation? x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">pair?</span> x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>**<span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>base x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> x<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-exponentiation b e<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span>=number? e <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span>=number? e <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span> b<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">number?</span> b<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">number?</span> e<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">expt</span> b e<span class=\"synSpecial\">)))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> b <span class=\"synSpecial\">'</span>** e<span class=\"synSpecial\">))))</span>\n\n\n<span class=\"synComment\">;; b</span>\n<span class=\"synComment\">; パス</span>\n</pre>\n\n\n","slug":"SICP 問題 2.58"},{"data":{"title":"SICP 問題 2.57","published":"2015/10/26","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>augend s<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdddr</span> s<span class=\"synSpecial\">))</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">caddr</span> s<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">'</span>+ <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cddr</span> s<span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>multiplicand p<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdddr</span> p<span class=\"synSpecial\">))</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">caddr</span> p<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">'</span>* <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cddr</span> p<span class=\"synSpecial\">))))</span>\n</pre>\n\n\n<p>これ作るので精一杯でした．<br/>\nmake-sumやmake-productを可変長引数に対応できるように変更するのは難しい．．．</p>\n\n","slug":"SICP 問題 2.57"},{"data":{"title":"SICP 問題 2.56","published":"2015/10/25","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>deriv <span class=\"synIdentifier\">exp</span> var<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">number?</span> <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span> <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span>variable? <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>same-variable? <span class=\"synIdentifier\">exp</span> var<span class=\"synSpecial\">)</span> <span class=\"synConstant\">1</span> <span class=\"synConstant\">0</span><span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">((</span>sum? <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>make-sum <span class=\"synSpecial\">(</span>deriv <span class=\"synSpecial\">(</span>addend <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span> var<span class=\"synSpecial\">)</span>\n                   <span class=\"synSpecial\">(</span>deriv <span class=\"synSpecial\">(</span>augend <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span> var<span class=\"synSpecial\">)))</span>\n        <span class=\"synSpecial\">((</span>product? <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>make-sum\n          <span class=\"synSpecial\">(</span>make-product <span class=\"synSpecial\">(</span>multiplier <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span>\n                        <span class=\"synSpecial\">(</span>deriv <span class=\"synSpecial\">(</span>multiplicand <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span> var<span class=\"synSpecial\">))</span>\n          <span class=\"synSpecial\">(</span>make-product <span class=\"synSpecial\">(</span>deriv <span class=\"synSpecial\">(</span>multiplier <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span> var<span class=\"synSpecial\">)</span>\n                        <span class=\"synSpecial\">(</span>multiplicand <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">))))</span>\n        <span class=\"synSpecial\">((</span>exponentiation? <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>make-product\n          <span class=\"synSpecial\">(</span>make-product <span class=\"synSpecial\">(</span>exponent <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span>\n                        <span class=\"synSpecial\">(</span>make-exponentiation <span class=\"synSpecial\">(</span>base <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span>\n                                             <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synSpecial\">(</span>exponent <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">)))</span>\n          <span class=\"synSpecial\">(</span>deriv <span class=\"synSpecial\">(</span>base <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">)</span> var<span class=\"synSpecial\">)))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span>\n         <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">&quot;unknown expression type -- DERIV&quot;</span> <span class=\"synIdentifier\">exp</span><span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>exponentiation? x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">pair?</span> x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">eq?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span>**<span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>base x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> x<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>exponent x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">caddr</span> x<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-exponentiation b e<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span>=number? e <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span>=number? e <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span> b<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">number?</span> b<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">number?</span> e<span class=\"synSpecial\">))</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">expt</span> b e<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">'</span>** b e<span class=\"synSpecial\">))))</span>\n</pre>\n\n\n","slug":"SICP 問題 2.56"},{"data":{"title":"SICP 問題 2.55","published":"2015/10/25","tags":["scheme","SICP"]},"content":"\n<p><code>''abracadabra</code>は<code>'abracadabra</code>を返す．<br/>\n<code>(car ''abracadabra)</code>は<code>quote</code>を返す．<br/>\n<code>(cdr ''abracadabra)</code>は<code>(abracadabra)</code>を返す．<br/>\nつまり<code>'abracadabra</code>は<code>(quote abracadabra)</code>のことで，<br/>\n<code>''abracadabra</code>は<code>'(quote abracadabra)</code>のことである．<br/>\nそのため<code>(car ''abracadabra)</code>は<code>quote</code>を返す．</p>\n\n","slug":"SICP 問題 2.55"},{"data":{"title":"SICP 問題 2.54","published":"2015/10/25","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">equal?</span> a b<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">or</span> <span class=\"synSpecial\">(</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">not</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">pair?</span> a<span class=\"synSpecial\">))</span>\n           <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">not</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">pair?</span> b<span class=\"synSpecial\">))</span>\n           <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">eq?</span> a b<span class=\"synSpecial\">))</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">and</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">pair?</span> a<span class=\"synSpecial\">)</span>\n           <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">pair?</span> b<span class=\"synSpecial\">)</span>\n           <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">equal?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> a<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> b<span class=\"synSpecial\">))</span>\n           <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">equal?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> a<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> b<span class=\"synSpecial\">)))))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (equal? &#39;(this is a list) &#39;(this is a list))\n#t\ngosh&gt; (equal? &#39;(this is a list) &#39;(this (is a) list))\n#f</pre>\n\n\n","slug":"SICP 問題 2.54"},{"data":{"title":"SICP 問題 2.53","published":"2015/10/25","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">'</span>a <span class=\"synSpecial\">'</span>b <span class=\"synSpecial\">'</span>c<span class=\"synSpecial\">)</span>\n<span class=\"synSpecial\">(</span>a b c<span class=\"synSpecial\">)</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">'</span>george<span class=\"synSpecial\">))</span>\n<span class=\"synSpecial\">((</span>george<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> <span class=\"synSpecial\">'((</span>x1 x2<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>y1 y2<span class=\"synSpecial\">)))</span>\n<span class=\"synSpecial\">((</span>y1 y2<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> <span class=\"synSpecial\">'((</span>x1 x2<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>y1 y2<span class=\"synSpecial\">)))</span>\n<span class=\"synSpecial\">(</span>y1 y2<span class=\"synSpecial\">)</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synIdentifier\">pair?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> <span class=\"synSpecial\">'(</span>a short list<span class=\"synSpecial\">)))</span>\n<span class=\"synConstant\">#f</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synIdentifier\">memq</span> <span class=\"synSpecial\">'</span>red <span class=\"synSpecial\">'((</span>red shoes<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>blue socks<span class=\"synSpecial\">)))</span>\n<span class=\"synConstant\">#f</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synIdentifier\">memq</span> <span class=\"synSpecial\">'</span>red <span class=\"synSpecial\">'(</span>red shoes blue socks<span class=\"synSpecial\">))</span>\n<span class=\"synSpecial\">(</span>red shoes blue socks<span class=\"synSpecial\">)</span>\n</pre>\n\n\n","slug":"SICP 問題 2.53"},{"data":{"title":"SICP 問題2.48の訳が変","published":"2015/10/24","tags":["scheme","SICP"]},"content":"\n<p>線分を<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/vector\">vector</a>で定義して構成子と選択子を定義するって問題やっていた．<br/>\n問題文には</p>\n\n<blockquote><p>平面上の有向線分は<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D9%A5%AF%A5%BF\">ベクタ</a>の対ーー原点から線分の始点へ向かう<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D9%A5%AF%A5%BF\">ベクタ</a>と，始点から線分の終点へ向かう<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D9%A5%AF%A5%BF%A1%BC\">ベクター</a>ーで表現される．\n[中略]\nこの線分の表現をmake-segmentと選択子start-segmentおよびend-segmentとして定義せよ．</p></blockquote>\n\n<p>となっていた．<br/>\n始点から終点への<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D9%A5%AF%A5%BF\">ベクタ</a>をend-segmentってするのはおかしくかと思い原書にあたってみた．</p>\n\n<blockquote><p>A directed line segment in the plane can be represented as a pair of vectors -- the <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/vector\">vector</a> running from the origin to the start-point of the segment, and the <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/vector\">vector</a> running from the origin to the end-point of the segment.\n...</p></blockquote>\n\n<p>ってなっている．<br/>\n両方原点から(from the origin)じゃないですかー<br/>\n選択子end-segmentが始点から終点への<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D9%A5%AF%A5%BF\">ベクタ</a>なのはおかしいって思ってたらそういうことですか．</p>\n\n<p><div class=\"hatena-asin-detail\"><a href=\"http://www.amazon.co.jp/exec/obidos/ASIN/4798135984/wataro-22/\"><img src=\"http://ecx.images-amazon.com/images/I/511qf4jdYjL._SL160_.jpg\" class=\"hatena-asin-detail-image\" alt=\"計算機プログラムの構造と解釈[第2版]\" title=\"計算機プログラムの構造と解釈[第2版]\"></a><div class=\"hatena-asin-detail-info\"><p class=\"hatena-asin-detail-title\"><a href=\"http://www.amazon.co.jp/exec/obidos/ASIN/4798135984/wataro-22/\">計算機プログラムの構造と解釈[第2版]</a></p><ul><li><span class=\"hatena-asin-detail-label\">作者:</span> ハロルド<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A8%A5%A4%A5%D6%A5%EB\">エイブル</a>ソン,ジュリーサスマン,<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B8%A5%A7%A5%E9%A5%EB%A5%C9%A1%A6%A5%B8%A5%A7%A5%A4%A5%B5%A5%B9%A5%DE%A5%F3\">ジェラルド・ジェイサスマン</a>,Harold Abelson,Julie Sussman,Gerald Jay Sussman,和田英一</li><li><span class=\"hatena-asin-detail-label\">出版社/メーカー:</span> <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%E6%C6%B1%CB%BC%D2\">翔泳社</a></li><li><span class=\"hatena-asin-detail-label\">発売日:</span> 2014/05/17</li><li><span class=\"hatena-asin-detail-label\">メディア:</span> 大型本</li><li><a href=\"http://d.hatena.ne.jp/asin/4798135984/wataro-22\" target=\"_blank\">この商品を含むブログ (2件) を見る</a></li></ul></div><div class=\"hatena-asin-detail-foot\"></div></div></p>\n\n","slug":"SICP 問題2.48の訳が変"},{"data":{"title":"SICP 問題 2.52","published":"2015/10/24","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink>         <span class=\"synSpecial\">(</span>make-segment <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.582</span> <span class=\"synConstant\">0.657</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.640</span> <span class=\"synConstant\">0.857</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>make-segment <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.640</span> <span class=\"synConstant\">0.857</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.575</span> <span class=\"synConstant\">1.000</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>make-segment <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.419</span> <span class=\"synConstant\">1.000</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.354</span> <span class=\"synConstant\">0.857</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>make-segment <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.354</span> <span class=\"synConstant\">0.857</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.411</span> <span class=\"synConstant\">0.657</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>make-segment <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.411</span> <span class=\"synConstant\">0.657</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.285</span> <span class=\"synConstant\">0.657</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>make-segment <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.285</span> <span class=\"synConstant\">0.657</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.154</span> <span class=\"synConstant\">0.605</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>make-segment <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.154</span> <span class=\"synConstant\">0.605</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.000</span> <span class=\"synConstant\">0.857</span><span class=\"synSpecial\">))</span><span class=\"synError\">)))</span>\n\n<span class=\"synComment\">;; b</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>corner-split painter n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> n <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span>\n      painter\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>up <span class=\"synSpecial\">(</span>up-split painter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">)))</span>\n            <span class=\"synSpecial\">(</span>right <span class=\"synSpecial\">(</span>right-split painter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">)))</span>\n            <span class=\"synSpecial\">(</span>corner <span class=\"synSpecial\">(</span>corner-split painter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">))))</span>\n        <span class=\"synSpecial\">(</span>beside <span class=\"synSpecial\">(</span>below painter up<span class=\"synSpecial\">)</span>\n                <span class=\"synSpecial\">(</span>below painter right corner<span class=\"synSpecial\">)))))</span>\n\n<span class=\"synComment\">;; c</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>corner-split painter n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> n <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span>flip-horiz painter<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>up <span class=\"synSpecial\">(</span>up-split painter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">)))</span>\n            <span class=\"synSpecial\">(</span>right <span class=\"synSpecial\">(</span>right-split painter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">))))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>top-left <span class=\"synSpecial\">(</span>beside up up<span class=\"synSpecial\">))</span>\n              <span class=\"synSpecial\">(</span>bottom-right <span class=\"synSpecial\">(</span>below right right<span class=\"synSpecial\">))</span>\n              <span class=\"synSpecial\">(</span>corner-split <span class=\"synSpecial\">(</span>painter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">))))</span>\n          <span class=\"synSpecial\">(</span>beside <span class=\"synSpecial\">(</span>below painter top-left<span class=\"synSpecial\">)</span>\n                  <span class=\"synSpecial\">(</span>below bottom-right corner<span class=\"synSpecial\">))))))</span>\n</pre>\n\n\n","slug":"SICP 問題 2.52"},{"data":{"title":"SICP 問題 2.51","published":"2015/10/24","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>below painter1 painter2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let*</span> <span class=\"synSpecial\">((</span>split-point <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.0</span> <span class=\"synConstant\">0.5</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>paint-bottom <span class=\"synSpecial\">(</span>transform-painter painter1\n                                          <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.0</span> <span class=\"synConstant\">0.0</span><span class=\"synSpecial\">)</span>\n                                          <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1.0</span> <span class=\"synConstant\">0.0</span><span class=\"synSpecial\">)</span>\n                                          split-point<span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>paint-upper <span class=\"synSpecial\">(</span>transform-painter painter2\n                                         split-point\n                                         <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1.0</span> <span class=\"synConstant\">0.5</span><span class=\"synSpecial\">)</span>\n                                         <span class=\"synConstant\">0.0</span> <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">)))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>frame<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span>paint-bottom<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span>paint-upper<span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>below painter1 painter2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>frame<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>rotate270 <span class=\"synSpecial\">(</span>beside <span class=\"synSpecial\">(</span>rotate90 painter2<span class=\"synSpecial\">)</span>\n                       <span class=\"synSpecial\">(</span>rotate90 painter1<span class=\"synSpecial\">)))))</span>\n</pre>\n\n\n","slug":"SICP 問題 2.51"},{"data":{"title":"SICP 問題 2.50","published":"2015/10/24","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>flip-horiz painter<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>transform-painter painter\n                     <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1.0</span> <span class=\"synConstant\">0.0</span><span class=\"synSpecial\">)</span>\n                     <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.0</span> <span class=\"synConstant\">0.0</span><span class=\"synSpecial\">)</span>\n                     <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1.0</span> <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>rotate180 painter<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>transform-painter painter\n                     <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1.0</span> <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">)</span>\n                     <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.0</span> <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">)</span>\n                     <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1.0</span> <span class=\"synConstant\">0.0</span><span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>rotate270 paitner<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>transform-painter painter\n                     <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.0</span> <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">)</span>\n                     <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.0</span> <span class=\"synConstant\">0.0</span><span class=\"synSpecial\">)</span>\n                     <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1.0</span> <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">)))</span>\n\n</pre>\n\n\n","slug":"SICP 問題 2.50"},{"data":{"title":"SICP 問題 2.49","published":"2015/10/24","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; a</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>outline-painter frame<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let*</span> <span class=\"synSpecial\">((</span>v00 <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0</span> <span class=\"synConstant\">0</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>v01 <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>v10 <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1</span> <span class=\"synConstant\">0</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>v11 <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">)))</span>\n    <span class=\"synSpecial\">((</span>segments-&gt;painter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>make-segment v00 v01<span class=\"synSpecial\">)</span>\n                              <span class=\"synSpecial\">(</span>make-segment v00 v10<span class=\"synSpecial\">)</span>\n                              <span class=\"synSpecial\">(</span>make-segment v10 v01<span class=\"synSpecial\">)</span>\n                              <span class=\"synSpecial\">(</span>make-segment v01 v10<span class=\"synSpecial\">)))</span>\n     frame<span class=\"synSpecial\">)))</span>\n\n<span class=\"synComment\">;; b</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>x-painter frame<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let*</span> <span class=\"synSpecial\">((</span>v00 <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0</span> <span class=\"synConstant\">0</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>v01 <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>v11 <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>v10 <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1</span> <span class=\"synConstant\">0</span><span class=\"synSpecial\">)))</span>\n    <span class=\"synSpecial\">((</span>segments-&gt;painter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>make-segment v00 v11<span class=\"synSpecial\">)</span>\n                              <span class=\"synSpecial\">(</span>make-segment v01 v10<span class=\"synSpecial\">)))</span>\n     frame<span class=\"synSpecial\">)))</span>\n\n<span class=\"synComment\">;; c</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>Rhombus-painter frame<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let*</span> <span class=\"synSpecial\">((</span>va <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.5</span> <span class=\"synConstant\">0</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>vb <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">1</span> <span class=\"synConstant\">0.5</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>vc <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0.5</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n         <span class=\"synSpecial\">(</span>vd <span class=\"synSpecial\">(</span>make-vect <span class=\"synConstant\">0</span> <span class=\"synConstant\">0.5</span><span class=\"synSpecial\">)))</span>\n    <span class=\"synSpecial\">((</span>segments-&gt;painter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span>make-segment va vb<span class=\"synSpecial\">)</span>\n                              <span class=\"synSpecial\">(</span>make-segment vb vc<span class=\"synSpecial\">)</span>\n                              <span class=\"synSpecial\">(</span>make-segment vc vd<span class=\"synSpecial\">)</span>\n                              <span class=\"synSpecial\">(</span>make-segment vd va<span class=\"synSpecial\">)))</span>\n     frame<span class=\"synSpecial\">)))</span>\n\n<span class=\"synComment\">;; d</span>\n<span class=\"synComment\">;;  パス</span>\n</pre>\n\n\n","slug":"SICP 問題 2.49"},{"data":{"title":"SICP 問題 2.48","published":"2015/10/23","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-segment v1 v2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>make-vect v1 v2<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>start-segment seg<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> seg<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>end-segment seg<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> seg<span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題 2.48"},{"data":{"title":"SICP 問題 2.47","published":"2015/10/23","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; listでmake</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-frame origin edge1 edge2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> origin edge1 edge2<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>origin-frame frame<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> frame<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>edge1-frame frame<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> frame<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>edge2-frame frame<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">caddr</span> frame<span class=\"synSpecial\">))</span>\n\n<span class=\"synComment\">;; consでmake</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-frame origin edge1 edge2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> origin <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> edge1 edge2<span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>origin-frame frame<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> frame<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>edge1-frame frame<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cadr</span> frame<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>edge2-frame frame<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cddr</span> frame<span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題 2.47"},{"data":{"title":"SICP 問題 2.46","published":"2015/10/23","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-vect x y<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> x y<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>xcor-vect v<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> v<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>ycor-vect v<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> v<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>add-vect v1 v2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>make-vect <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span>xcor-vect v1<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>xcor-vect v2<span class=\"synSpecial\">))</span>\n             <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span>ycor-vect v1<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>ycor-vect v2<span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>sub-vect v1 v2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>make-vect <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synSpecial\">(</span>xcor-vect v1<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>xcor-vect v2<span class=\"synSpecial\">))</span>\n             <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synSpecial\">(</span>ycor-vect v1<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>ycor-vect v2<span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>scale-vect s v<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>make-vect <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> s <span class=\"synSpecial\">(</span>xcor-vect v<span class=\"synSpecial\">))</span>\n             <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> s <span class=\"synSpecial\">(</span>ycor-vect v<span class=\"synSpecial\">))))</span>\n</pre>\n\n\n","slug":"SICP 問題 2.46"},{"data":{"title":"SICP 問題 2.45","published":"2015/10/23","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>split first second<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>painter n<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> n <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span>\n        painter\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>smaller <span class=\"synSpecial\">((</span>split first second<span class=\"synSpecial\">)</span> painter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">))))</span>\n          <span class=\"synSpecial\">(</span>first painter <span class=\"synSpecial\">((</span>second smaller smaller<span class=\"synSpecial\">)))))))</span>\n</pre>\n\n\n","slug":"SICP 問題 2.45"}],"currentPage":16,"pages":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]},"__N_SSG":true}