{"pageProps":{"post":{"title":"SICP 問題 3.22","published":"2015/11/20","tags":["scheme","SICP"],"content":"\n<p>局所状態を持つ手続きとしてキューを定義する．</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>insert-queue! queue item<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">((</span>queue <span class=\"synSpecial\">'</span>insert-queue!<span class=\"synSpecial\">)</span> item<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>delete-queue! queue<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">((</span>queue <span class=\"synSpecial\">'</span>delete-queue!<span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-queue<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>front-ptr <span class=\"synSpecial\">'())</span>\n        <span class=\"synSpecial\">(</span>rear-ptr <span class=\"synSpecial\">'()))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>empty-queue?<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> front-ptr<span class=\"synSpecial\">))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>insert-queue! item<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>new-item <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> item<span class=\"synSpecial\">)))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span>empty-queue?<span class=\"synSpecial\">)</span>\n               <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> front-ptr new-item<span class=\"synSpecial\">)</span>\n               <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> rear-ptr new-item<span class=\"synSpecial\">)</span>\n               front-ptr<span class=\"synSpecial\">)</span>\n              <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span>\n               <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">set-cdr!</span> rear-ptr new-item<span class=\"synSpecial\">)</span>\n               <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> rear-ptr new-item<span class=\"synSpecial\">)</span>\n               front-ptr<span class=\"synSpecial\">))))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>delete-queue!<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span>empty-queue?<span class=\"synSpecial\">)</span>\n             <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">&quot;DELETE called with an empty queue&quot;</span> front-ptr<span class=\"synSpecial\">))</span>\n            <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span>\n             <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> front-ptr <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> front-ptr<span class=\"synSpecial\">))</span>\n             front-ptr<span class=\"synSpecial\">)))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>dispatch m<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> m <span class=\"synSpecial\">'</span>insert-queue!<span class=\"synSpecial\">)</span>\n             insert-queue!<span class=\"synSpecial\">)</span>\n            <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> m <span class=\"synSpecial\">'</span>delete-queue!<span class=\"synSpecial\">)</span>\n             delete-queue!<span class=\"synSpecial\">)</span>\n            <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span>\n             <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">&quot;Undefined operation -- MAKE-QUEUE&quot;</span> m<span class=\"synSpecial\">))))</span>\n    dispatch<span class=\"synSpecial\">))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (define q1 (make-queue))\nq1\ngosh&gt; (insert-queue! q1 &#39;a)\n(a)\ngosh&gt; (insert-queue! q1 &#39;b)\n(a b)\ngosh&gt; (delete-queue! q1)\n(b)</pre>\n\n\n","slug":"SICP 問題 3.22"},"content":"<p>局所状態を持つ手続きとしてキューを定義する．</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>insert-queue! queue item<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">((</span>queue <span class=\"synSpecial\">'</span>insert-queue!<span class=\"synSpecial\">)</span> item<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>delete-queue! queue<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">((</span>queue <span class=\"synSpecial\">'</span>delete-queue!<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-queue<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>front-ptr <span class=\"synSpecial\">'())</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span>rear-ptr <span class=\"synSpecial\">'()))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>empty-queue?<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> front-ptr<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>insert-queue! item<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>new-item <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> item<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span>empty-queue?<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">               <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> front-ptr new-item<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">               <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> rear-ptr new-item<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">               front-ptr<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">              <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span>\n</span><span class=\"code-line\">               <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">set-cdr!</span> rear-ptr new-item<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">               <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> rear-ptr new-item<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">               front-ptr<span class=\"synSpecial\">))))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>delete-queue!<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span>empty-queue?<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">             <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">\"DELETE called with an empty queue\"</span> front-ptr<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">            <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span>\n</span><span class=\"code-line\">             <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> front-ptr <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> front-ptr<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">             front-ptr<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>dispatch m<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> m <span class=\"synSpecial\">'</span>insert-queue!<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">             insert-queue!<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">            <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">eq?</span> m <span class=\"synSpecial\">'</span>delete-queue!<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">             delete-queue!<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">            <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span>\n</span><span class=\"code-line\">             <span class=\"synSpecial\">(</span>error <span class=\"synConstant\">\"Undefined operation -- MAKE-QUEUE\"</span> m<span class=\"synSpecial\">))))</span>\n</span><span class=\"code-line\">    dispatch<span class=\"synSpecial\">))</span>\n</span></code></pre>\n<pre class=\"code\" data-lang=\"\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">gosh> (define q1 (make-queue))\n</span><span class=\"code-line\">q1\n</span><span class=\"code-line\">gosh> (insert-queue! q1 'a)\n</span><span class=\"code-line\">(a)\n</span><span class=\"code-line\">gosh> (insert-queue! q1 'b)\n</span><span class=\"code-line\">(a b)\n</span><span class=\"code-line\">gosh> (delete-queue! q1)\n</span><span class=\"code-line\">(b)</span></code></pre>"},"__N_SSG":true}