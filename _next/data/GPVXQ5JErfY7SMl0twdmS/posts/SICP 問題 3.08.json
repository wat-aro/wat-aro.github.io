{"pageProps":{"post":{"title":"SICP 問題 3.08","published":"2015/11/11","tags":["scheme","SICP"],"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> f\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>a <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> a <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> a x<span class=\"synSpecial\">))</span>\n      a<span class=\"synSpecial\">)))</span>\n</pre>\n\n\n<p>(f 0) (f 1)の順に評価したら0,0が返り，(f 1) (f 0)の順に評価すると1, 0 が返ってくれば題意を満たしたことになる．</p>\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (define f\n  (let ((a 1))\n    (lambda (x)\n      (set! a (* a x))\n      a)))\nf\ngosh&gt; (f 0)\n0\ngosh&gt; (f 1)\n0\ngosh&gt; (define f\n  (let ((a 1))\n    (lambda (x)\n      (set! a (* a x))\n      a)))\nf\ngosh&gt; (f 1)\n1\ngosh&gt; (f 0)\n0</pre>\n\n\n\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; letをlambdaで書き換えてみた</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> f\n  <span class=\"synSpecial\">((</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>a<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> a <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> a x<span class=\"synSpecial\">))</span>\n      a<span class=\"synSpecial\">))</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題 3.08"},"content":"<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> f\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>a <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> a <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> a x<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">      a<span class=\"synSpecial\">)))</span>\n</span></code></pre>\n<p>(f 0) (f 1)の順に評価したら0,0が返り，(f 1) (f 0)の順に評価すると1, 0 が返ってくれば題意を満たしたことになる．</p>\n<pre class=\"code\" data-lang=\"\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">gosh> (define f\n</span><span class=\"code-line\">  (let ((a 1))\n</span><span class=\"code-line\">    (lambda (x)\n</span><span class=\"code-line\">      (set! a (* a x))\n</span><span class=\"code-line\">      a)))\n</span><span class=\"code-line\">f\n</span><span class=\"code-line\">gosh> (f 0)\n</span><span class=\"code-line\">0\n</span><span class=\"code-line\">gosh> (f 1)\n</span><span class=\"code-line\">0\n</span><span class=\"code-line\">gosh> (define f\n</span><span class=\"code-line\">  (let ((a 1))\n</span><span class=\"code-line\">    (lambda (x)\n</span><span class=\"code-line\">      (set! a (* a x))\n</span><span class=\"code-line\">      a)))\n</span><span class=\"code-line\">f\n</span><span class=\"code-line\">gosh> (f 1)\n</span><span class=\"code-line\">1\n</span><span class=\"code-line\">gosh> (f 0)\n</span><span class=\"code-line\">0</span></code></pre>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synComment\">;; letをlambdaで書き換えてみた</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> f\n</span><span class=\"code-line\">  <span class=\"synSpecial\">((</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>a<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> a <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> a x<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">      a<span class=\"synSpecial\">))</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n</span></code></pre>"},"__N_SSG":true}