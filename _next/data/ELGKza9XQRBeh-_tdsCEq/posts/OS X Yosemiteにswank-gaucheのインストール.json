{"pageProps":{"post":{"data":{"title":"OS X Yosemiteにswank-gaucheのインストール","published":"2016/01/13","tags":["emacs","gauche","scheme"]},"content":"\n<p>きっかけは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>．\n<blockquote class=\"twitter-tweet\" lang=\"ja\"><p lang=\"ja\" dir=\"ltr\"><a href=\"https://twitter.com/wat_aro\">@wat_aro</a> どの処理系使ってるかわからないですが<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>のswank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>みたいに対応されてたりしませんか？</p>&mdash; <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/lisp\">lisp</a>ドラッグ常習者 (@rayfill) <a href=\"https://twitter.com/rayfill/status/686955833373032449\">2016, 1月 12</a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n\n<p>早速インストール．\nREADMEに</p>\n\n<blockquote><ul>\n<li>設定方法</li>\n</ul>\n\n\n<p>`dot<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/.emacs\">.emacs</a>'の内容を<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/.emacs\">.emacs</a>にコピーしてswank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>へのパスの情報を設定します。\n以下の二つの変数を設定してください。</p>\n\n<p> swank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>-path:\n swank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>.scmが格納されているディレクトリへのパス</p>\n\n<p> swank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>-source-path:\n <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Gauche\">Gauche</a>のソースを持っていて、かつ、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB\">コンパイル</a>済の場合、ソースのトップディレク\n トリへのパスを設定して下さい。マニュアルに定義されているオペレータの\n 引数の名前がルックアップ出来るようになります。</p></blockquote>\n\n<p>とあるので</p>\n\n<pre class=\"code lang-lisp\" data-lang=\"lisp\" data-unlink><span class=\"synComment\">;; swank-gaucheを使うためのSLIME設定</span>\n<span class=\"synComment\">;;</span>\n<span class=\"synComment\">;;(push &quot;&lt;path-to-slime-dir&gt;&quot; load-path)</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">require</span> <span class=\"synSpecial\">'</span><span class=\"synIdentifier\">slime</span><span class=\"synSpecial\">)</span>\n<span class=\"synSpecial\">(</span>slime-setup\n <span class=\"synSpecial\">'(</span>slime-fancy\n   slime-scheme<span class=\"synSpecial\">))</span>\n\n<span class=\"synComment\">;; swank-gauche.scmが格納されているディレクトリへのパスを設定して下さい。</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">setq</span> swank-gauche-path <span class=\"synConstant\">&quot;/usr/local/Cellar/swank-gauche-master&quot;</span><span class=\"synSpecial\">)</span>\n\n<span class=\"synComment\">;; Gaucheのソースを持っていて、かつ、コンパイル済の場合、ソースのトップ</span>\n<span class=\"synComment\">;; ディレクトリへのパスを設定して下さい。Gaucheのマニュアルに記載されている</span>\n<span class=\"synComment\">;; オペレータの引数名がルックアップ出来るようになります。</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">setq</span> swank-gauche-gauche-source-path <span class=\"synConstant\">&quot;/usr/local/Cellar/gauche/Gauche&quot;</span><span class=\"synSpecial\">)</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">push</span> swank-gauche-path load-path<span class=\"synSpecial\">)</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">require</span> <span class=\"synSpecial\">'</span><span class=\"synIdentifier\">swank-gauche</span><span class=\"synSpecial\">)</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">setq</span> slime-lisp-implementations\n      <span class=\"synSpecial\">'((</span>gauche <span class=\"synSpecial\">(</span><span class=\"synConstant\">&quot;gosh&quot;</span><span class=\"synSpecial\">)</span> :init gauche-init :coding-system utf-8-unix<span class=\"synSpecial\">)))</span>\n\n<span class=\"synComment\">;; バッファのモジュールを決定するための設定</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">setq</span> slime-find-buffer-package-function <span class=\"synSpecial\">'</span><span class=\"synIdentifier\">find-gauche-package</span><span class=\"synSpecial\">)</span>\n<span class=\"synComment\">;; c-p-c補完に設定</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">setq</span> slime-complete-symbol-function <span class=\"synSpecial\">'</span><span class=\"synIdentifier\">slime-complete-symbol*</span><span class=\"synSpecial\">)</span>\n<span class=\"synComment\">;; web上のGaucheリファレンスマニュアルを引く設定</span>\n<span class=\"synSpecial\">(</span>define-key slime-mode-map <span class=\"synSpecial\">(</span>kbd <span class=\"synConstant\">&quot;C-c C-d H&quot;</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span><span class=\"synIdentifier\">gauche-ref-lookup</span><span class=\"synSpecial\">)</span>\n</pre>\n\n\n<p>って感じにコピペ&amp;二箇所変数設定．<br/>\nslimeは既に導入しているので&lt;path-to slime-directory>は省略．  　<br/>\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>のソースはどこにおけばいいのかわからなかったので<code>/usr/local/Cellar/gauche/</code>にgit clone．<br/>\n　<br/>\nいざ，<code>M-x gauche</code></p>\n\n<pre class=\"code\" data-lang=\"\" data-unlink>(begin (add-load-path &#34;/usr/local/Cellar/swank-gauche-master&#34;)\n(require &#34;swank-gauche&#34;) (with-module swank-gauche \n(load-gauche-operator-args &#34;/usr/local/Cellar/gauche/Gauche&#34;) (start-swank &#34;/var/folders/lf/bt7rfh5s1wxgfnmwhx755vtw0000gn/T/slime.2035&#34;)))\n\n*** SYSTEM-ERROR: couldn&#39;t open input file: \n&#34;/usr/local/Cellar/gauche/Gauche/doc/gauche-refe.texi&#34;: No such file or directory\nStack Trace:\n_______________________________________\n  0  (grep &#34;^@defun|^@defmac|^@defspec|^@deffn&#34; gauche-refe-path (lambd\n        At line 558 of &#34;/usr/local/Cellar/swank-gauche-master/swank-gauche.scm&#34;\n  1  (load-gauche-operator-args &#34;/usr/local/Cellar/gauche/Gauche&#34;)\n        At line 1 of &#34;(standard input)&#34;\n\nProcess inferior-lisp exited abnormally with code 70</pre>\n\n\n<p>エラーですね．<br/>\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>のソースのファイル名を見てみると，<code>Gauche/doc/gauche-ref.texi</code>となっていました．<br/>\nswank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>.scmの該当箇所を修正．</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>load-gauche-operator-args gauche-source-path<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>when <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">not</span> <span class=\"synSpecial\">(</span>elisp-false? gauche-source-path<span class=\"synSpecial\">))</span>\n    <span class=\"synSpecial\">(</span>load-operator-args <span class=\"synError\">#`</span><span class=\"synConstant\">&quot;,|gauche-source-path|/doc/gauche-ref.texi&quot;</span><span class=\"synSpecial\">)))</span>\n<span class=\"synComment\">;; (load-operator-args #`&quot;,|gauche-source-path|/doc/gauche-refe.texi&quot;) &lt;=変更前</span>\n</pre>\n\n\n<p>これで無事に動いた．</p>\n\n","slug":"OS X Yosemiteにswank-gaucheのインストール"},"content":"<p>きっかけは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>．\n</p><blockquote class=\"twitter-tweet\" lang=\"ja\"><p lang=\"ja\" dir=\"ltr\"><a href=\"https://twitter.com/wat_aro\">@wat_aro</a> どの処理系使ってるかわからないですが<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>のswank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>みたいに対応されてたりしませんか？</p>— <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/lisp\">lisp</a>ドラッグ常習者 (@rayfill) <a href=\"https://twitter.com/rayfill/status/686955833373032449\">2016, 1月 12</a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script><p></p>\n<p>早速インストール．\nREADMEに</p>\n<blockquote><ul>\n<li>設定方法</li>\n</ul>\n<p>`dot<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/.emacs\">.emacs</a>'の内容を<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/.emacs\">.emacs</a>にコピーしてswank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>へのパスの情報を設定します。\n以下の二つの変数を設定してください。</p>\n<p> swank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>-path:\n swank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>.scmが格納されているディレクトリへのパス</p>\n<p> swank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>-source-path:\n <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Gauche\">Gauche</a>のソースを持っていて、かつ、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB\">コンパイル</a>済の場合、ソースのトップディレク\n トリへのパスを設定して下さい。マニュアルに定義されているオペレータの\n 引数の名前がルックアップ出来るようになります。</p></blockquote>\n<p>とあるので</p>\n<pre class=\"code lang-lisp\" data-lang=\"lisp\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synComment\">;; swank-gaucheを使うためのSLIME設定</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;;</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;;(push \"&#x3C;path-to-slime-dir>\" load-path)</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">require</span> <span class=\"synSpecial\">'</span><span class=\"synIdentifier\">slime</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span>slime-setup\n</span><span class=\"code-line\"> <span class=\"synSpecial\">'(</span>slime-fancy\n</span><span class=\"code-line\">   slime-scheme<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">;; swank-gauche.scmが格納されているディレクトリへのパスを設定して下さい。</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">setq</span> swank-gauche-path <span class=\"synConstant\">\"/usr/local/Cellar/swank-gauche-master\"</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">;; Gaucheのソースを持っていて、かつ、コンパイル済の場合、ソースのトップ</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; ディレクトリへのパスを設定して下さい。Gaucheのマニュアルに記載されている</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; オペレータの引数名がルックアップ出来るようになります。</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">setq</span> swank-gauche-gauche-source-path <span class=\"synConstant\">\"/usr/local/Cellar/gauche/Gauche\"</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">push</span> swank-gauche-path load-path<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">require</span> <span class=\"synSpecial\">'</span><span class=\"synIdentifier\">swank-gauche</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">setq</span> slime-lisp-implementations\n</span><span class=\"code-line\">      <span class=\"synSpecial\">'((</span>gauche <span class=\"synSpecial\">(</span><span class=\"synConstant\">\"gosh\"</span><span class=\"synSpecial\">)</span> :init gauche-init :coding-system utf-8-unix<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">;; バッファのモジュールを決定するための設定</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">setq</span> slime-find-buffer-package-function <span class=\"synSpecial\">'</span><span class=\"synIdentifier\">find-gauche-package</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; c-p-c補完に設定</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">setq</span> slime-complete-symbol-function <span class=\"synSpecial\">'</span><span class=\"synIdentifier\">slime-complete-symbol*</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; web上のGaucheリファレンスマニュアルを引く設定</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span>define-key slime-mode-map <span class=\"synSpecial\">(</span>kbd <span class=\"synConstant\">\"C-c C-d H\"</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">'</span><span class=\"synIdentifier\">gauche-ref-lookup</span><span class=\"synSpecial\">)</span>\n</span></code></pre>\n<p>って感じにコピペ&#x26;二箇所変数設定．<br>\nslimeは既に導入しているので&#x3C;path-to slime-directory>は省略．  　<br>\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>のソースはどこにおけばいいのかわからなかったので<code>/usr/local/Cellar/gauche/</code>にgit clone．<br>\n　<br>\nいざ，<code>M-x gauche</code></p>\n<pre class=\"code\" data-lang=\"\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">(begin (add-load-path \"/usr/local/Cellar/swank-gauche-master\")\n</span><span class=\"code-line\">(require \"swank-gauche\") (with-module swank-gauche \n</span><span class=\"code-line\">(load-gauche-operator-args \"/usr/local/Cellar/gauche/Gauche\") (start-swank \"/var/folders/lf/bt7rfh5s1wxgfnmwhx755vtw0000gn/T/slime.2035\")))\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">*** SYSTEM-ERROR: couldn't open input file: \n</span><span class=\"code-line\">\"/usr/local/Cellar/gauche/Gauche/doc/gauche-refe.texi\": No such file or directory\n</span><span class=\"code-line\">Stack Trace:\n</span><span class=\"code-line\">_______________________________________\n</span><span class=\"code-line\">  0  (grep \"^@defun|^@defmac|^@defspec|^@deffn\" gauche-refe-path (lambd\n</span><span class=\"code-line\">        At line 558 of \"/usr/local/Cellar/swank-gauche-master/swank-gauche.scm\"\n</span><span class=\"code-line\">  1  (load-gauche-operator-args \"/usr/local/Cellar/gauche/Gauche\")\n</span><span class=\"code-line\">        At line 1 of \"(standard input)\"\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">Process inferior-lisp exited abnormally with code 70</span></code></pre>\n<p>エラーですね．<br>\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>のソースのファイル名を見てみると，<code>Gauche/doc/gauche-ref.texi</code>となっていました．<br>\nswank-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gauche\">gauche</a>.scmの該当箇所を修正．</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>load-gauche-operator-args gauche-source-path<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>when <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">not</span> <span class=\"synSpecial\">(</span>elisp-false? gauche-source-path<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>load-operator-args <span class=\"synError\">#`</span><span class=\"synConstant\">\",|gauche-source-path|/doc/gauche-ref.texi\"</span><span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; (load-operator-args #`\",|gauche-source-path|/doc/gauche-refe.texi\") &#x3C;=変更前</span>\n</span></code></pre>\n<p>これで無事に動いた．</p>"},"__N_SSG":true}