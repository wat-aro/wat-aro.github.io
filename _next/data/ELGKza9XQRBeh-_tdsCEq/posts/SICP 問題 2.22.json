{"pageProps":{"post":{"data":{"title":"SICP 問題 2.22","published":"2015/10/19","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>square-list items<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter things answer<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> things<span class=\"synSpecial\">)</span>\n        answer\n        <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> things<span class=\"synSpecial\">)</span>\n              <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span>square <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> things<span class=\"synSpecial\">))</span>\n                    answer<span class=\"synSpecial\">))))</span>\n  <span class=\"synSpecial\">(</span>iter items nil<span class=\"synSpecial\">))</span>\n<span class=\"synComment\">;; iter内でのconsで(square (car things))とanswerを引数として取っている．</span>\n<span class=\"synComment\">;; この場，次のcdrでconsされるのは(square (car (cdr things))) と((square (car things)) answer)．</span>\n<span class=\"synComment\">;; ここで順番が逆になっている．</span>\n<span class=\"synComment\">;; このまま続けていくと欲しかったリストの逆順が返される．</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>square-list items<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter things answer<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> things<span class=\"synSpecial\">)</span>\n        answer\n        <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> things<span class=\"synSpecial\">)</span>\n              <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> answer\n                    <span class=\"synSpecial\">(</span>square <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> things<span class=\"synSpecial\">))))))</span>\n  <span class=\"synSpecial\">(</span>iter items nil<span class=\"synSpecial\">))</span>\n<span class=\"synComment\">;; 始めのconsで作られるのは(() . 1)．</span>\n<span class=\"synComment\">;; 次の繰り返しでconsすると((() . 1) . 2)ができる．</span>\n<span class=\"synComment\">;; 始めのconsで作られたドット対を要素としたドット対ができる．</span>\n<span class=\"synComment\">;; これを繰り返すのでうまくいかない．</span>\n</pre>\n\n\n","slug":"SICP 問題 2.22"},"content":"<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>square-list items<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter things answer<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> things<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">        answer\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> things<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">              <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span>square <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> things<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">                    answer<span class=\"synSpecial\">))))</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>iter items nil<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; iter内でのconsで(square (car things))とanswerを引数として取っている．</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; この場，次のcdrでconsされるのは(square (car (cdr things))) と((square (car things)) answer)．</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; ここで順番が逆になっている．</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; このまま続けていくと欲しかったリストの逆順が返される．</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>square-list items<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter things answer<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> things<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">        answer\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> things<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">              <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> answer\n</span><span class=\"code-line\">                    <span class=\"synSpecial\">(</span>square <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> things<span class=\"synSpecial\">))))))</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>iter items nil<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; 始めのconsで作られるのは(() . 1)．</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; 次の繰り返しでconsすると((() . 1) . 2)ができる．</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; 始めのconsで作られたドット対を要素としたドット対ができる．</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; これを繰り返すのでうまくいかない．</span>\n</span></code></pre>"},"__N_SSG":true}