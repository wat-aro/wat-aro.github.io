{"pageProps":{"slide":{"title":"Blog つくりました","published":"2022/06/24","tags":["JS","Next.js","Rust"],"slug":"new-blog","content":"# Blog つくりました\n\n---\n\n## `About me`\n\n- 石田和太郎\n- wat-aro\n- @wat_aro\n- Github: wat-aro\n- 元陸上自衛官\n- Fjord 卒業生\n\n---\n\n## 今日するはなし\n\n最近ブログを作ったのでその話をします。\n\n---\n\n## なぜつくることにしたの？\n\n1. ドメインを取ったまま放置していたので使いたかった\n1. はてなブログのマークダウン記法に不満があった\n1. WebAssembly を好きに埋め込んで遊べる環境が欲しかった\n\n===\n\n### ドメインを取ったまま放置していたので使いたかった\n\n`dev` ドメインが販売開始されてすぐに `wat-aro.dev` を取得。  \nしかし使う場所がなかった。  \n個人サイト作りたいけどめんどくさいが勝ってこの時点ではまだ動かず。  \n\n===\n\n### はてなブログのマークダウン記法に不満があった\n\nはてなブログは `Github Flavored Markdown` ではないため  \nスペース 2 個を `<br/>`  \n改行二個で区切られた範囲を `<p>` タグで囲う。  \nこれが気に入らなくてブログを書かなくなってしまった。  \n\n===\n\n### `Webassembly` を好きに埋め込んで遊べる環境が欲しかった\n\nなかなか仕事で `WebAssembly` を使う機会が訪れないため好きに扱える環境が欲しかった。\n\n---\n\n## どういうつくりにしたか\n\n- GitHub Pages\n- Next.js\n- TypeScript\n- Tailwind CSS\n- unified\n\n===\n\n### `GitHub Pages`\n\n静的サイトをホスティングしたいだけなので GitHub Pages を選択。  \n無料かつカスタムドメインも使える。  \nデプロイも `peaceiris/actions-gh-pages@v3` を使えば簡単。  \n\n===\n\n### `Next.js`\n\n静的サイトを作りたいので Next.js の SSG で生成することに。  \n初回アクセスは事前に生成した html を配布して、  \nそれ以降のページ遷移は json を使った Client Side Rendering。  \n\nネットワークタブを見ていると、そのページから遷移可能なページに必要な json をページが表示された後に裏側で取得している。  \nおかげでサクサク動く。  \n\n===\n\n### `TypeScript`\n\n型欲しいよね型。  \n少しリファクタリングした際も型のおかげで直す場所がすぐにわかってとてもありがたかった。  \nReact との相性もいいのでおすすめ。  \nVue2 + TypeScript の組み合わせは知らない。  \nVue3 + TypeScript の体験はそこそこよかった。  \n\n===\n\n### `Tailwind CSS`\n\nクラス名にスタイルが一つが結びついている。\n```jsx\n<div className=\"flex items-center gap-4 font-midium text-3xl h-full font-bold\">\n  <img\n    className=\"rounded-full\"\n    src=\"/images/profile.jpg\"\n    width=\"48\"\n    height=\"48\"\n    alt=\"profile image\"\n  />\n  {SITENAME}\n</div>\n```\n\n===\n\n### `Tailwind CSS`\n\n流行っているので試しにつかってみた。  \nかなり体験いいです。  \n名前をつけて再利用したいものはコンポーネントにして、それ以外はこのクラス名で十分だった。  \nCSS のクラス設計などを考えなくてよいのでおすすめ。\n\n===\n\n### `unified`\n\nマークダウンや html を変換したりシリアライズしたりできるライブラリ。  \nプラグインで色々な機能を足せる。\n\n===\n\n### `unified`\n\n```ts [2-3|4-7|8-10|12|13-14]\nexport const markdownToHtml = async (markdown: string) => {\n  const result = await unified()\n    .use(remarkParse)\n    .use(remarkFrontmatter)\n    .use(remarkBreaks)\n    .use(remarkEmoji)\n    .use(remarkGfm)\n    .use(remarkRehype, { allowDangerousHtml: true })\n    .use(rehypeRaw)\n    .use(rehypeSlug)\n    .use(rehypeHatenaCodeBlock)\n    .use(rehypePrismPlus, { ignoreMissing: true })\n    .use(rehypeStringify, { allowDangerousHtml: true })\n    .process(markdown);\n\n  return result.toString();\n};\n```\n\n---\n\n## はてなブログのデータ移行\n\nはてなブログの過去記事も新ブログに移行したかった。  \nはてなブログからデータをエクスポートすると markdown じゃなかった。  \n`unified` で扱えるかたちに移行するぞい  \n\n===\n\n### `Rust`でパーサを作ってマークダウン(仮)に変換\n\nエクスポートしたデータのフォーマットは Movable Type  \nRust でパーサを作って記事単位でマークダウンに変換。  \ncode ブロックの変換が面倒なため今はマークダウンの中に html がある状態  \nそのうちちゃんとマークダウンに変換するぞ\n\n---\n\n## `GitHub Pages` で公開していたスライドもブログ内に移行\n\n`reveal-ck` で生成したスライドを `GitHub Pages` で公開していた。  \n`reveal-ck` は `reveal.js` を使ったツールなので `reveal.js` を自前で使って公開。  \nどはまりした。  \n\n===\n\n### `reveal.js`\n\n`reveawl.js` は内部で navigator などを使っている。  \nNext.js だと import する時点では window オブジェクトがいないためエラーになる。  \nDynamic Import が必要。  \nDynamic Import するとなぜか2回目に表示したスライドが表示されない。  \n\n===\n### `reveal.js`\n\nDynamic Import したモジュールを `setState` で持たせると表示できた。\n\n===\n\n### `reveal.js`\n\n表示はできたがなぜかスライドの順番がシャッフルされてしまう。  \nコード読んでもなぜそうなるかよくわからない。  \nconfig に `shuffle: false` を入れたらちゃんと動くようになった。  \n\n===\n\n### `reveal.js`\n\nこのスライドは今回作ったブログの上で動いています。  \n\n---\n\n## 今後の展望\n\n1. html でごまかしている過去のブログデータをちゃんとマークダウンに変換する\n1. Storybook を入れてスマホでの表示をもうちょっとちゃんと調整したい\n1. WebAssembly の全文検索エンジンを入れて記事を検索できるようにしたい\n1. サイトマップ・RSSフィードの導入\n\n---\n\n## まとめ\n\nブログを 1 からつくると楽しいですよ。  \n無限にやりたいことが出てきますよ。  \nそろそろフロントエンドじゃなくて Rust を触りたいぞ\n"}},"__N_SSG":true}