{"pageProps":{"title":"ActiveModel::Attributesでカスタムタイプを使う","published":"2018/08/07","content":"<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Rails\">Rails</a> 5.2.0 で入ったActiveModel::Attributes <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a> 最高ですよね。</p>\n<p>でもカスタムタイプのドキュメントが見つからないんですよね。 <a href=\"https://api.rubyonrails.org/classes/ActiveRecord/Attributes/ClassMethods.html#method-i-attribute\">ActiveRecord::Attributes API のカスタムタイプ</a> ならあるのですが。</p>\n<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9\">ソースコード</a>見たところ簡単に作れるのがわかったので紹介します。</p>\n<p>まず型の登録部分ですが、<a href=\"https://github.com/rails/rails/blob/5-2-0/activemodel/lib/active_model/type.rb#L20-L53\">lib/active_model/type.rb</a> で定義されています。</p>\n<p>また、<a href=\"https://github.com/rails/rails/blob/5-2-0/activemodel/lib/active_model/type/boolean.rb\">ActiveModelで使われているデフォルトタイプの実装</a>を見ると <code>cast_value</code> メソッドがあればよさそうです。</p>\n<p><a href=\"https://api.rubyonrails.org/classes/ActiveRecord/Attributes/ClassMethods.html#method-i-attribute\">ActiveRecord::Attributes API</a> と同様に実装します。</p>\n<pre class=\"code lang-ruby\" data-lang=\"ruby\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synPreProc\">class</span> <span class=\"synType\">MoneyType</span> &#x3C; <span class=\"synType\">ActiveModel</span>::<span class=\"synType\">Type</span>::<span class=\"synType\">Integer</span>\n</span><span class=\"code-line\">  <span class=\"synPreProc\">def</span> <span class=\"synIdentifier\">cast_value</span>(value)\n</span><span class=\"code-line\">    <span class=\"synStatement\">if</span> !value.kind_of?(<span class=\"synType\">Numeric</span>) &#x26;&#x26; value.include?(<span class=\"synSpecial\">'</span><span class=\"synConstant\">$</span><span class=\"synSpecial\">'</span>)\n</span><span class=\"code-line\">      price_in_dollars = value.gsub(<span class=\"synSpecial\">/\\$/</span>, <span class=\"synSpecial\">''</span>).to_f\n</span><span class=\"code-line\">      <span class=\"synStatement\">super</span>(price_in_dollars * <span class=\"synConstant\">100</span>)\n</span><span class=\"code-line\">    <span class=\"synStatement\">else</span>\n</span><span class=\"code-line\">      <span class=\"synStatement\">super</span>\n</span><span class=\"code-line\">    <span class=\"synStatement\">end</span>\n</span><span class=\"code-line\">  <span class=\"synPreProc\">end</span>\n</span><span class=\"code-line\"><span class=\"synPreProc\">end</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\"># config/initializers/types.rb</span>\n</span><span class=\"code-line\"><span class=\"synType\">ActiveModel</span>::<span class=\"synType\">Type</span>.register(<span class=\"synConstant\">:money</span>, <span class=\"synType\">MoneyType</span>)\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\"># app/models/store_listing.rb</span>\n</span><span class=\"code-line\"><span class=\"synPreProc\">class</span> <span class=\"synType\">StoreListing</span>\n</span><span class=\"code-line\">  <span class=\"synPreProc\">include</span> <span class=\"synType\">ActiveModel</span>::<span class=\"synType\">Model</span>\n</span><span class=\"code-line\">  <span class=\"synPreProc\">include</span> <span class=\"synType\">ActiveModel</span>::<span class=\"synType\">Attributes</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  attribute <span class=\"synConstant\">:price_in_cents</span>, <span class=\"synConstant\">:money</span>\n</span><span class=\"code-line\"><span class=\"synPreProc\">end</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">store_listing = <span class=\"synType\">StoreListing</span>.new(<span class=\"synConstant\">price_in_cents</span>: <span class=\"synSpecial\">'</span><span class=\"synConstant\">$10.00</span><span class=\"synSpecial\">'</span>)\n</span><span class=\"code-line\">store_listing.price_in_cents <span class=\"synComment\"># => 1000</span>\n</span></code></pre>\n<p>このように ActiveModel::Attributes でカスタムタイプを使うことができます。</p>","slug":"ActiveModel::Attributesでカスタムタイプを使う","rawContent":"\n<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Rails\">Rails</a> 5.2.0 で入ったActiveModel::Attributes <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a> 最高ですよね。</p>\n\n<p>でもカスタムタイプのドキュメントが見つからないんですよね。 <a href=\"https://api.rubyonrails.org/classes/ActiveRecord/Attributes/ClassMethods.html#method-i-attribute\">ActiveRecord::Attributes API のカスタムタイプ</a> ならあるのですが。</p>\n\n<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9\">ソースコード</a>見たところ簡単に作れるのがわかったので紹介します。</p>\n\n<p>まず型の登録部分ですが、<a href=\"https://github.com/rails/rails/blob/5-2-0/activemodel/lib/active_model/type.rb#L20-L53\">lib/active_model/type.rb</a> で定義されています。</p>\n\n<p>また、<a href=\"https://github.com/rails/rails/blob/5-2-0/activemodel/lib/active_model/type/boolean.rb\">ActiveModelで使われているデフォルトタイプの実装</a>を見ると <code>cast_value</code> メソッドがあればよさそうです。</p>\n\n<p><a href=\"https://api.rubyonrails.org/classes/ActiveRecord/Attributes/ClassMethods.html#method-i-attribute\">ActiveRecord::Attributes API</a> と同様に実装します。</p>\n\n<pre class=\"code lang-ruby\" data-lang=\"ruby\" data-unlink><span class=\"synPreProc\">class</span> <span class=\"synType\">MoneyType</span> &lt; <span class=\"synType\">ActiveModel</span>::<span class=\"synType\">Type</span>::<span class=\"synType\">Integer</span>\n  <span class=\"synPreProc\">def</span> <span class=\"synIdentifier\">cast_value</span>(value)\n    <span class=\"synStatement\">if</span> !value.kind_of?(<span class=\"synType\">Numeric</span>) &amp;&amp; value.include?(<span class=\"synSpecial\">'</span><span class=\"synConstant\">$</span><span class=\"synSpecial\">'</span>)\n      price_in_dollars = value.gsub(<span class=\"synSpecial\">/\\$/</span>, <span class=\"synSpecial\">''</span>).to_f\n      <span class=\"synStatement\">super</span>(price_in_dollars * <span class=\"synConstant\">100</span>)\n    <span class=\"synStatement\">else</span>\n      <span class=\"synStatement\">super</span>\n    <span class=\"synStatement\">end</span>\n  <span class=\"synPreProc\">end</span>\n<span class=\"synPreProc\">end</span>\n\n<span class=\"synComment\"># config/initializers/types.rb</span>\n<span class=\"synType\">ActiveModel</span>::<span class=\"synType\">Type</span>.register(<span class=\"synConstant\">:money</span>, <span class=\"synType\">MoneyType</span>)\n\n<span class=\"synComment\"># app/models/store_listing.rb</span>\n<span class=\"synPreProc\">class</span> <span class=\"synType\">StoreListing</span>\n  <span class=\"synPreProc\">include</span> <span class=\"synType\">ActiveModel</span>::<span class=\"synType\">Model</span>\n  <span class=\"synPreProc\">include</span> <span class=\"synType\">ActiveModel</span>::<span class=\"synType\">Attributes</span>\n\n  attribute <span class=\"synConstant\">:price_in_cents</span>, <span class=\"synConstant\">:money</span>\n<span class=\"synPreProc\">end</span>\n\nstore_listing = <span class=\"synType\">StoreListing</span>.new(<span class=\"synConstant\">price_in_cents</span>: <span class=\"synSpecial\">'</span><span class=\"synConstant\">$10.00</span><span class=\"synSpecial\">'</span>)\nstore_listing.price_in_cents <span class=\"synComment\"># =&gt; 1000</span>\n</pre>\n\n\n<p>このように ActiveModel::Attributes でカスタムタイプを使うことができます。</p>\n\n"},"__N_SSG":true}