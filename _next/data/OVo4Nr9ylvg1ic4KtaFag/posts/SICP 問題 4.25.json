{"pageProps":{"title":"SICP 問題 4.25","published":"2016/01/03","tags":["scheme","SICP"],"content":"<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synComment\">;; 作用的順序のschemeで本文中のunlessを使用してfactorialを定義した時，  </span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">``(</span>factorial <span class=\"synConstant\">5</span><span class=\"synSpecial\">)``</span><span class=\"synError\">を評価しようとすると何が起きるか.</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>unless condition usual-value exceptional-value<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> condition exceptional-value usual-value<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>factorial n<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>unless <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> n <span class=\"synSpecial\">(</span>factorial <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">    <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">;; 作用的順序なのでまず引数を評価しようとする．</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span>unless <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> n <span class=\"synSpecial\">(</span>factorial <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\"><span class=\"synComment\">;; を評価する時に(factorial (- n 1))の部分でループになる．</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">;; 正規順序の言語では引数は必要になった時に初めて評価されるのでこの問題は起こらない．</span>\n</span></code></pre>","slug":"SICP 問題 4.25","rawContent":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; 作用的順序のschemeで本文中のunlessを使用してfactorialを定義した時，  </span>\n<span class=\"synSpecial\">``(</span>factorial <span class=\"synConstant\">5</span><span class=\"synSpecial\">)``</span><span class=\"synError\">を評価しようとすると何が起きるか.</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>unless condition usual-value exceptional-value<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> condition exceptional-value usual-value<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>factorial n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>unless <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> n <span class=\"synSpecial\">(</span>factorial <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">)))</span>\n    <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n\n<span class=\"synComment\">;; 作用的順序なのでまず引数を評価しようとする．</span>\n<span class=\"synSpecial\">(</span>unless <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> n <span class=\"synSpecial\">(</span>factorial <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span>\n<span class=\"synComment\">;; を評価する時に(factorial (- n 1))の部分でループになる．</span>\n\n<span class=\"synComment\">;; 正規順序の言語では引数は必要になった時に初めて評価されるのでこの問題は起こらない．</span>\n</pre>\n\n\n"},"__N_SSG":true}