{"pageProps":{"post":{"title":"SICP 問題 5.48","published":"2016/02/10","tags":["scheme","SICP"],"content":"\n<p>ECEVALのrepl上で<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB\">コンパイル</a>出来るようにする．<br/>\nこれで動くかなって思ったら動いた．<br/>\nただトレースした命令列を見ると，<br/>\napply-dispatchからprimitive-procedureにジャンプせずに先頭に戻っている．<br/>\nなぜそうなるのかわからない．</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; 環境を拡張してprimitive-procedureとしてcompile-and-run を登録</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>setup-environment-with-compile<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>extend-environment\n   <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">'</span>compile-and-run<span class=\"synSpecial\">)</span>\n   <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">'</span>primitive compile-and-run<span class=\"synSpecial\">))</span>\n   <span class=\"synSpecial\">(</span>setup-environment<span class=\"synSpecial\">)))</span>\n\n<span class=\"synComment\">;; setup-environment-with-compileの環境からecevalに入るようにする</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>compile-and-go expression<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>instructions\n         <span class=\"synSpecial\">(</span>assemble <span class=\"synSpecial\">(</span>statements\n                    <span class=\"synSpecial\">(</span>compile expression <span class=\"synSpecial\">'</span>val <span class=\"synSpecial\">'</span>return <span class=\"synSpecial\">'()))</span>\n                   eceval<span class=\"synSpecial\">)))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> the-global-environment <span class=\"synSpecial\">(</span>setup-environment-with-compile<span class=\"synSpecial\">))</span>\n    <span class=\"synSpecial\">(</span>set-register-contents! eceval <span class=\"synSpecial\">'</span>val instructions<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>set-register-contents! eceval <span class=\"synSpecial\">'</span>flag true<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>start eceval<span class=\"synSpecial\">)))</span>\n\n<span class=\"synComment\">; ; and-goとは違い環境の初期設定はいらない．</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>compile-and-run expression<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>instructions\n         <span class=\"synSpecial\">(</span>assemble <span class=\"synSpecial\">(</span>statements\n                    <span class=\"synSpecial\">(</span>compile expression <span class=\"synSpecial\">'</span>val <span class=\"synSpecial\">'</span>return <span class=\"synSpecial\">'()))</span>\n                   eceval<span class=\"synSpecial\">)))</span>\n    <span class=\"synSpecial\">(</span>set-register-contents! eceval <span class=\"synSpecial\">'</span>val instructions<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>set-register-contents! eceval <span class=\"synSpecial\">'</span>flag true<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>start eceval<span class=\"synSpecial\">)))</span>\n\n<span class=\"synComment\">;; 環境をwith-compileのほうにしてflagをfalseにしてからecevalに入る．</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>start-eceval<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> the-global-environment <span class=\"synSpecial\">(</span>setup-environment-with-compile<span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">(</span>set-register-contents! eceval <span class=\"synSpecial\">'</span>flag false<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>start eceval<span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題 5.48"},"content":"<p>ECEVALのrepl上で<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB\">コンパイル</a>出来るようにする．<br>\nこれで動くかなって思ったら動いた．<br>\nただトレースした命令列を見ると，<br>\napply-dispatchからprimitive-procedureにジャンプせずに先頭に戻っている．<br>\nなぜそうなるのかわからない．</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synComment\">;; 環境を拡張してprimitive-procedureとしてcompile-and-run を登録</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>setup-environment-with-compile<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>extend-environment\n</span><span class=\"code-line\">   <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">'</span>compile-and-run<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">   <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">list</span> <span class=\"synSpecial\">'</span>primitive compile-and-run<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">   <span class=\"synSpecial\">(</span>setup-environment<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">;; setup-environment-with-compileの環境からecevalに入るようにする</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>compile-and-go expression<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>instructions\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>assemble <span class=\"synSpecial\">(</span>statements\n</span><span class=\"code-line\">                    <span class=\"synSpecial\">(</span>compile expression <span class=\"synSpecial\">'</span>val <span class=\"synSpecial\">'</span>return <span class=\"synSpecial\">'()))</span>\n</span><span class=\"code-line\">                   eceval<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> the-global-environment <span class=\"synSpecial\">(</span>setup-environment-with-compile<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>set-register-contents! eceval <span class=\"synSpecial\">'</span>val instructions<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>set-register-contents! eceval <span class=\"synSpecial\">'</span>flag true<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>start eceval<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">; ; and-goとは違い環境の初期設定はいらない．</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>compile-and-run expression<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>instructions\n</span><span class=\"code-line\">         <span class=\"synSpecial\">(</span>assemble <span class=\"synSpecial\">(</span>statements\n</span><span class=\"code-line\">                    <span class=\"synSpecial\">(</span>compile expression <span class=\"synSpecial\">'</span>val <span class=\"synSpecial\">'</span>return <span class=\"synSpecial\">'()))</span>\n</span><span class=\"code-line\">                   eceval<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>set-register-contents! eceval <span class=\"synSpecial\">'</span>val instructions<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>set-register-contents! eceval <span class=\"synSpecial\">'</span>flag true<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>start eceval<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">;; 環境をwith-compileのほうにしてflagをfalseにしてからecevalに入る．</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>start-eceval<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">set!</span> the-global-environment <span class=\"synSpecial\">(</span>setup-environment-with-compile<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>set-register-contents! eceval <span class=\"synSpecial\">'</span>flag false<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>start eceval<span class=\"synSpecial\">))</span>\n</span></code></pre>"},"__N_SSG":true}