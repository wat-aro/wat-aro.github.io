{"pageProps":{"post":{"data":{"title":"SICP 問題 3.73","published":"2015/12/17","tags":["scheme","SICP"]},"content":"\n<p>問題文と図の通りに．</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>integral integrand initial-value dt<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> int\n    <span class=\"synSpecial\">(</span>cons-stream initial-value\n                 <span class=\"synSpecial\">(</span>add-streams <span class=\"synSpecial\">(</span>scale-stream integrand dt<span class=\"synSpecial\">)</span>\n                              int<span class=\"synSpecial\">)))</span>\n  int<span class=\"synSpecial\">)</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>RC R C dt<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>i v0<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>add-streams <span class=\"synSpecial\">(</span>scale-stream i R<span class=\"synSpecial\">)</span>\n                 <span class=\"synSpecial\">(</span>integral <span class=\"synSpecial\">(</span>scale-stream i <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synConstant\">1</span> C<span class=\"synSpecial\">))</span>\n                           vo dt<span class=\"synSpecial\">))))</span>\n</pre>\n\n\n","slug":"SICP 問題 3.73"},"content":"<p>問題文と図の通りに．</p>\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>integral integrand initial-value dt<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> int\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>cons-stream initial-value\n</span><span class=\"code-line\">                 <span class=\"synSpecial\">(</span>add-streams <span class=\"synSpecial\">(</span>scale-stream integrand dt<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                              int<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">  int<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>RC R C dt<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>i v0<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>add-streams <span class=\"synSpecial\">(</span>scale-stream i R<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                 <span class=\"synSpecial\">(</span>integral <span class=\"synSpecial\">(</span>scale-stream i <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synConstant\">1</span> C<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">                           vo dt<span class=\"synSpecial\">))))</span>\n</span></code></pre>"},"__N_SSG":true}