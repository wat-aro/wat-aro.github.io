{"pageProps":{"post":{"data":{"title":"SICP 問題 2.36","published":"2015/10/21","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; accumulate</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>accumulate op initial sequence<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> sequence<span class=\"synSpecial\">)</span>\n      initial\n      <span class=\"synSpecial\">(</span>op <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> sequence<span class=\"synSpecial\">)</span>\n          <span class=\"synSpecial\">(</span>accumulate op initial <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> sequence<span class=\"synSpecial\">)))))</span>\n\n<span class=\"synComment\">;; accumulate-n</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>accumulate-n op init seqs<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> seqs<span class=\"synSpecial\">))</span>\n             nil\n             <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span>accumulate op init <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">map</span> <span class=\"synIdentifier\">car</span> seqs<span class=\"synSpecial\">))</span>\n                   <span class=\"synSpecial\">(</span>accumulate-n op init <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">map</span> <span class=\"synIdentifier\">cdr</span> seqs<span class=\"synSpecial\">)))))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (accumulate-n + 0 &#39;((1 2 3) (4 5 6) (7 8 9) (10 11 12)))\n(22 26 30)</pre>\n\n\n","slug":"SICP 問題 2.36"},"content":"<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synComment\">;; accumulate</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>accumulate op initial sequence<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> sequence<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      initial\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span>op <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> sequence<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">          <span class=\"synSpecial\">(</span>accumulate op initial <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> sequence<span class=\"synSpecial\">)))))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synComment\">;; accumulate-n</span>\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>accumulate-n op init seqs<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> seqs<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">             nil\n</span><span class=\"code-line\">             <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> <span class=\"synSpecial\">(</span>accumulate op init <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">map</span> <span class=\"synIdentifier\">car</span> seqs<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">                   <span class=\"synSpecial\">(</span>accumulate-n op init <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">map</span> <span class=\"synIdentifier\">cdr</span> seqs<span class=\"synSpecial\">)))))</span>\n</span></code></pre>\n<pre class=\"code\" data-lang=\"\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">gosh> (accumulate-n + 0 '((1 2 3) (4 5 6) (7 8 9) (10 11 12)))\n</span><span class=\"code-line\">(22 26 30)</span></code></pre>"},"__N_SSG":true}