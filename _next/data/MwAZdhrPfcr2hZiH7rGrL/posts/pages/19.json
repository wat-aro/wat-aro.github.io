{"pageProps":{"posts":[{"data":{"title":"SICP 問題 2.3","published":"2015/10/10","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; 長方形を高さと幅で定義</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-rectangle height width<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> height width<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>perimeter-rect rect<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synConstant\">2</span> <span class=\"synSpecial\">(</span>height-rect rect<span class=\"synSpecial\">))</span>\n     <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synConstant\">2</span> <span class=\"synSpecial\">(</span>width-rect rect<span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>area-rect rect<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synSpecial\">(</span>height-rect rect<span class=\"synSpecial\">)</span>\n     <span class=\"synSpecial\">(</span>width-rect rect<span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>height-rect rect<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> rect<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>width-rect rect<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> rect<span class=\"synSpecial\">))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (define r1 (make-rectangle 10 5))\nr1\ngosh&gt; (perimeter-rect r1)\n30\ngosh&gt; (area-rect r1)\n50</pre>\n\n\n<p>　<br/>\n　</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; 長方形を対角の二点によって定義</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-rect p1 p2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> p1 p2<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>point-1 rect<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> rect<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>point-2 rect<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> rect<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>height-rect rect<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">abs</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synSpecial\">(</span>y-point <span class=\"synSpecial\">(</span>point-1 rect<span class=\"synSpecial\">))</span>\n          <span class=\"synSpecial\">(</span>y-point <span class=\"synSpecial\">(</span>point-2 rect<span class=\"synSpecial\">)))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>width-rect rect<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">abs</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synSpecial\">(</span>x-point <span class=\"synSpecial\">(</span>point-1 rect<span class=\"synSpecial\">))</span>\n          <span class=\"synSpecial\">(</span>x-point <span class=\"synSpecial\">(</span>point-2 rect<span class=\"synSpecial\">)))))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (define r2 (make-rect (make-point 0 0) (make-point 10 5)))\nr2\ngosh&gt; (perimeter-rect r2)\n30\ngosh&gt; (area-rect r2)\n50</pre>\n\n\n","slug":"SICP 問題 2.3"},{"data":{"title":"SICP 問題 2.2","published":"2015/10/10","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-segment start end<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> start end<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>start-segment seg<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> seg<span class=\"synSpecial\">))</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>end-segment seg<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> seg<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>make-point x y<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cons</span> x y<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>x-point point<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> point<span class=\"synSpecial\">))</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>y-point point<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> point<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>midpoint-segment seg<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>s-seg <span class=\"synSpecial\">(</span>start-segment seg<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">(</span>e-seg <span class=\"synSpecial\">(</span>end-segment seg<span class=\"synSpecial\">)))</span>\n    <span class=\"synSpecial\">(</span>make-point <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span>x-point s-seg<span class=\"synSpecial\">)</span>\n                      <span class=\"synSpecial\">(</span>x-point e-seg<span class=\"synSpecial\">))</span>\n                   <span class=\"synConstant\">2</span><span class=\"synSpecial\">)</span>\n                <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span>y-point s-seg<span class=\"synSpecial\">)</span>\n                      <span class=\"synSpecial\">(</span>y-point e-seg<span class=\"synSpecial\">))</span>\n                   <span class=\"synConstant\">2</span><span class=\"synSpecial\">))))</span>\n</pre>\n\n\n<p>　  <br/>\n　　　<br/>\n　　　<br/>\n印字用手続きで確かめてみる.</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>print-point p<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">newline</span><span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> <span class=\"synConstant\">&quot;(&quot;</span><span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> <span class=\"synSpecial\">(</span>x-point p<span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> <span class=\"synConstant\">&quot;,&quot;</span><span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> <span class=\"synSpecial\">(</span>y-point p<span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> <span class=\"synConstant\">&quot;)&quot;</span><span class=\"synSpecial\">))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (define my-segment (make-segment &#39;(0 . 0) &#39;(2 . 2)))\nmy-segment\ngosh&gt; (cdr my-segment)\n(2 . 2)\ngosh&gt; (car my-segment)\n(0 . 0)\ngosh&gt; (print-point my-segment)\n\n((0 . 0),(2 . 2))#&lt;undef&gt;\ngosh&gt; (print-point (midpoint-segment my-segment))\n\n(1,1)#&lt;undef&gt;</pre>\n\n\n","slug":"SICP 問題 2.2"},{"data":{"title":"SICP 問題1.46","published":"2015/10/09","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iterative-improve enough? improve<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>guess<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter guess<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>enough? guess<span class=\"synSpecial\">)</span>\n          <span class=\"synSpecial\">(</span>improve guess<span class=\"synSpecial\">)</span>\n          <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span>improve guess<span class=\"synSpecial\">))))</span>\n    <span class=\"synSpecial\">(</span>iter guess<span class=\"synSpecial\">)))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">sqrt</span> x<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>improve guess<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>average guess <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> x guess<span class=\"synSpecial\">)))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>good-enough? guess<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&lt;</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">abs</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synConstant\">1</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> guess <span class=\"synSpecial\">(</span>improve guess<span class=\"synSpecial\">))))</span> <span class=\"synConstant\">0.001</span><span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">((</span>iterative-improve good-enough? improve<span class=\"synSpecial\">)</span> <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>fixed-point f first-guess<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>improve guess<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>f guess<span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>close-enough? guess<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&lt;</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">abs</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> guess <span class=\"synSpecial\">(</span>improve guess<span class=\"synSpecial\">)))</span> <span class=\"synConstant\">0.00001</span><span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">((</span>iterative-improve close-enough? improve<span class=\"synSpecial\">)</span> first-guess<span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題1.46"},{"data":{"title":"SICP 問題1.45","published":"2015/10/09","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;;実験用に作った手続き</span>\n<span class=\"synComment\">;; x^n k回平均緩和</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>test x n k<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>fixed-point-of-transform <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>y<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> x <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">expt</span> y <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> n <span class=\"synConstant\">1</span><span class=\"synSpecial\">))))</span>\n                            <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>z<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">((</span>repeated average-damp k<span class=\"synSpecial\">)</span> z<span class=\"synSpecial\">))</span>\n                            <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">))</span>\n</pre>\n\n\n<p>実験の結果，<br/>\n2 ≦ n &lt; 4 の時 k=1<br/>\n4 ≦ n &lt; 8 の時 k=2<br/>\n8 ≦ n &lt; 16 の時 k=3<br/>\n16 ≦ n &lt; 32 の時 k=4<br/>\n32 ≦ n &lt; 64 の時 k=5<br/>\nn乗根に必要な平均緩和の回数は(log2 n) 回(小数部分切り捨て)．<br/>\nn√xを求めるnth-rootを実装する．</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>nth-root x n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>k <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">floor</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">log</span> n <span class=\"synConstant\">2</span><span class=\"synSpecial\">))))</span>\n    <span class=\"synSpecial\">(</span>fixed-point <span class=\"synSpecial\">((</span>repeated average-damp k<span class=\"synSpecial\">)</span>\n                  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>y<span class=\"synSpecial\">)</span>\n                    <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> x <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">expt</span> y\n                               <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> x <span class=\"synConstant\">1</span><span class=\"synSpecial\">)))))</span>\n                 <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">)))</span>\n</pre>\n\n\n","slug":"SICP 問題1.45"},{"data":{"title":"SICP 問題1.44","published":"2015/10/09","tags":["scheme","SICP"]},"content":"\n<p>平滑化関数とn重平滑化関数</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>smooth f<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>dx <span class=\"synConstant\">0.0001</span><span class=\"synSpecial\">))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span>f <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> x dx<span class=\"synSpecial\">))</span>\n            <span class=\"synSpecial\">(</span>f x<span class=\"synSpecial\">)</span>\n            <span class=\"synSpecial\">(</span>f <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> x dx<span class=\"synSpecial\">)))</span>\n         <span class=\"synConstant\">3</span><span class=\"synSpecial\">))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>n-fold-smooth f n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">((</span>repeated smooth n<span class=\"synSpecial\">)</span> x<span class=\"synSpecial\">)))</span>\n</pre>\n\n\n","slug":"SICP 問題1.44"},{"data":{"title":"SICP 問題1.43","published":"2015/10/09","tags":["scheme","SICP"]},"content":"\n<p>関数fをn回作用を計算する手続きrepeated</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>repeated f n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter fn count<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> count n<span class=\"synSpecial\">)</span>\n        fn\n        <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span>compose f fn<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> count <span class=\"synConstant\">1</span><span class=\"synSpecial\">))))</span>\n  <span class=\"synSpecial\">(</span>iter f <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; ((repeated inc 5) 0)\n5</pre>\n\n\n","slug":"SICP 問題1.43"},{"data":{"title":"SICP 問題1.42","published":"2015/10/09","tags":["scheme","SICP"]},"content":"\n<p>合成関数を実装する手続きcompose</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>compose f g<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>f <span class=\"synSpecial\">(</span>g x<span class=\"synSpecial\">))))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; ((compose square inc) 6)\n49</pre>\n\n\n","slug":"SICP 問題1.42"},{"data":{"title":"SICP 問題1.41","published":"2015/10/09","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>inc n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">1</span> n<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>double f<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>f <span class=\"synSpecial\">(</span>f x<span class=\"synSpecial\">))))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>(define D double)\n(define DD (D D))\n\n(((D (D D)) inc) 5)\n(((D DD) inc) 5)\n((DD (DD inc)) 5)\n((DD (D (D inc))))\n((D (D (D (D inc)))) 5)\n((D (D (D (lambda (x) (+ 2 x))))) 5)\n((D (D (lambda (x) (+ 4 x)))) 5)\n((D (lambda (x) (+ 8 x))) 5)\n((lambda (x) (+ 16 x)) 5)\n(+ 16 5)\n21\n\n\ngosh&gt; (((double (double double)) inc) 5)\n21</pre>\n\n\n","slug":"SICP 問題1.41"},{"data":{"title":"SICP 問題1.40","published":"2015/10/09","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>cubic a b c<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span>cube x<span class=\"synSpecial\">)</span>\n       <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> a <span class=\"synSpecial\">(</span>square x<span class=\"synSpecial\">))</span>\n       <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> b x<span class=\"synSpecial\">)</span> c<span class=\"synSpecial\">)))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (newtons-method (cubic 3 3 1) 1)\n-0.9999755158323895</pre>\n\n\n","slug":"SICP 問題1.40"},{"data":{"title":"SICP 問題1.39","published":"2015/10/08","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>tan-cf x k<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>cont-frac <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>i<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> i <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span> x <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synSpecial\">(</span>square x<span class=\"synSpecial\">))))</span>\n             <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>i<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synConstant\">2.0</span> i<span class=\"synSpecial\">)</span> <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">))</span>\n             k<span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題1.39"},{"data":{"title":"SICP 問題1.38","published":"2015/10/08","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>e-2 k<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>cont-frac <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>i<span class=\"synSpecial\">)</span> <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">)</span>\n             <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>i<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">modulo</span> i <span class=\"synConstant\">3</span><span class=\"synSpecial\">)</span> <span class=\"synConstant\">2</span><span class=\"synSpecial\">)</span>\n                             <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synConstant\">2</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">1</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">quotient</span> i <span class=\"synConstant\">3</span><span class=\"synSpecial\">)))</span>\n                             <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">))</span>\n             k<span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題1.38"},{"data":{"title":"SICP 問題1.37","published":"2015/10/08","tags":["scheme","SICP"]},"content":"\n<p>無限連分数の近似値</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; 再帰的プロセス</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>cont-frac n d k<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>recur i<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> i k<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span>n i<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>d i<span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span>n i<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span>d i<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>recur <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> i <span class=\"synConstant\">1</span><span class=\"synSpecial\">))))))</span>\n  <span class=\"synSpecial\">(</span>recur <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n\n<span class=\"synComment\">;; 反復的プロセス</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>cont-frac n d k<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter i res<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> i <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span>\n        res\n        <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> i <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span>n i<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span>d i<span class=\"synSpecial\">)</span> res<span class=\"synSpecial\">)))))</span>\n  <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> k <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span>n k<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>d k<span class=\"synSpecial\">))))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; \n1 -&gt; 1.0\n2 -&gt; 0.5\n3 -&gt; 0.6666666666666666\n4 -&gt; 0.6000000000000001\n5 -&gt; 0.625\n6 -&gt; 0.6153846153846154\n7 -&gt; 0.6190476190476191\n8 -&gt; 0.6176470588235294\n9 -&gt; 0.6181818181818182\n10 -&gt; 0.6179775280898876\n11 -&gt; 0.6180555555555556\n12 -&gt; 0.6180257510729613\n13 -&gt; 0.6180371352785146\n14 -&gt; 0.6180327868852459\n15 -&gt; 0.6180344478216819\n16 -&gt; 0.6180338134001252\n17 -&gt; 0.6180340557275542\n18 -&gt; 0.6180339631667064\n19 -&gt; 0.6180339985218034\n20 -&gt; 0.6180339850173578</pre>\n\n\n<p>k = 11以上で有効桁数４桁となる．</p>\n\n","slug":"SICP 問題1.37"},{"data":{"title":"SICP 問題1.36","published":"2015/10/08","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>fixed-point2 f first-guess<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>close-enough? v1 v2<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&lt;</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">abs</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> v1 v2<span class=\"synSpecial\">))</span> tolerance<span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>try guess<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>next <span class=\"synSpecial\">(</span>f guess<span class=\"synSpecial\">)))</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">display</span> guess<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">newline</span><span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>close-enough? guess next<span class=\"synSpecial\">)</span>\n          next\n          <span class=\"synSpecial\">(</span>try next<span class=\"synSpecial\">))))</span>\n  <span class=\"synSpecial\">(</span>try first-guess<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>my-exp<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>fixed-point2 <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">log</span> <span class=\"synConstant\">1000</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">log</span> x<span class=\"synSpecial\">)))</span>\n                <span class=\"synConstant\">2.0</span><span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>my-exp2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>fixed-point2 <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>average x <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">log</span> <span class=\"synConstant\">1000</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">log</span> x<span class=\"synSpecial\">))))</span>\n                <span class=\"synConstant\">2.0</span><span class=\"synSpecial\">))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (my-exp)\n2.0\n9.965784284662087\n3.004472209841214\n6.279195757507157\n3.759850702401539\n5.215843784925895\n4.182207192401397\n4.8277650983445906\n4.387593384662677\n4.671250085763899\n4.481403616895052\n4.6053657460929\n4.5230849678718865\n4.577114682047341\n4.541382480151454\n4.564903245230833\n4.549372679303342\n4.559606491913287\n4.552853875788271\n4.557305529748263\n4.554369064436181\n4.556305311532999\n4.555028263573554\n4.555870396702851\n4.555315001192079\n4.5556812635433275\n4.555439715736846\n4.555599009998291\n4.555493957531389\n4.555563237292884\n4.555517548417651\n4.555547679306398\n4.555527808516254\n4.555540912917957\n4.555532270803653\ngosh&gt; (my-exp2)\n2.0\n5.9828921423310435\n4.922168721308343\n4.628224318195455\n4.568346513136242\n4.5577305909237005\n4.555909809045131\n4.555599411610624\n4.5555465521473675\n4.555537551999825</pre>\n\n\n<p>平均緩和を使わなかった時は35ステップ．\n使った場合は10ステップ．</p>\n\n","slug":"SICP 問題1.36"},{"data":{"title":"SICP 問題1.35","published":"2015/10/08","tags":["scheme","SICP"]},"content":"\n<p><span itemscope itemtype=\"http://schema.org/Photograph\"><img src=\"http://cdn-ak.f.st-hatena.com/images/fotolife/w/wat-aro/20151008/20151008050935.jpg\" alt=\"f:id:wat-aro:20151008050935j:plain\" title=\"f:id:wat-aro:20151008050935j:plain\" class=\"hatena-fotolife\" itemprop=\"image\"></span></p>\n\n<p>x → 1 + 1/xを使い，fixed-point手続きにより<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B2%AB%B6%E2%C8%E6\">黄金比</a>を計算する</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>fixed-point f first-guess<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>close-enough? v1 v2<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&lt;</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">abs</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> v1 v2<span class=\"synSpecial\">))</span> tolerance<span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>try guess<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>next <span class=\"synSpecial\">(</span>f guess<span class=\"synSpecial\">)))</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span>close-enough? guess next<span class=\"synSpecial\">)</span>\n          next\n          <span class=\"synSpecial\">(</span>try next<span class=\"synSpecial\">))))</span>\n  <span class=\"synSpecial\">(</span>try first-guess<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> golden-ratio\n  <span class=\"synSpecial\">(</span>fixed-point <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">1</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> x<span class=\"synSpecial\">)))</span>\n               <span class=\"synConstant\">1.0</span><span class=\"synSpecial\">))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt;golden-ratio\n1.6180327868852458</pre>\n\n\n<p><div class=\"hatena-asin-detail\"><a href=\"http://www.amazon.co.jp/exec/obidos/ASIN/4798135984/wataro-22/\"><img src=\"http://ecx.images-amazon.com/images/I/511qf4jdYjL._SL160_.jpg\" class=\"hatena-asin-detail-image\" alt=\"計算機プログラムの構造と解釈[第2版]\" title=\"計算機プログラムの構造と解釈[第2版]\"></a><div class=\"hatena-asin-detail-info\"><p class=\"hatena-asin-detail-title\"><a href=\"http://www.amazon.co.jp/exec/obidos/ASIN/4798135984/wataro-22/\">計算機プログラムの構造と解釈[第2版]</a></p><ul><li><span class=\"hatena-asin-detail-label\">作者:</span> ハロルド<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A8%A5%A4%A5%D6%A5%EB\">エイブル</a>ソン,ジュリーサスマン,<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B8%A5%A7%A5%E9%A5%EB%A5%C9%A1%A6%A5%B8%A5%A7%A5%A4%A5%B5%A5%B9%A5%DE%A5%F3\">ジェラルド・ジェイサスマン</a>,Harold Abelson,Julie Sussman,Gerald Jay Sussman,和田英一</li><li><span class=\"hatena-asin-detail-label\">出版社/メーカー:</span> <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%E6%C6%B1%CB%BC%D2\">翔泳社</a></li><li><span class=\"hatena-asin-detail-label\">発売日:</span> 2014/05/17</li><li><span class=\"hatena-asin-detail-label\">メディア:</span> 大型本</li><li><a href=\"http://d.hatena.ne.jp/asin/4798135984/wataro-22\" target=\"_blank\">この商品を含むブログ (2件) を見る</a></li></ul></div><div class=\"hatena-asin-detail-foot\"></div></div></p>\n\n","slug":"SICP 問題1.35"},{"data":{"title":"SICP 問題1.34","published":"2015/10/08","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>f g<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>g <span class=\"synConstant\">2</span><span class=\"synSpecial\">))</span>\n</pre>\n\n\n<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%BF%A5%D7%A5%EA%A5%BF\">インタプリタ</a>に<code>(f f)</code>を評価させるとどうなるか．</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span>f f<span class=\"synSpecial\">)</span>\n<span class=\"synSpecial\">(</span>f <span class=\"synConstant\">2</span><span class=\"synSpecial\">)</span>\n<span class=\"synSpecial\">(</span><span class=\"synConstant\">2</span> <span class=\"synConstant\">2</span><span class=\"synSpecial\">)</span>\n</pre>\n\n\n<p><code>(f f)</code>のfに引数を適用し，<code>(f 2)</code>となる．<br/>\nこのfに引数を適用すると<code>(2 2)</code>となる．\n<code>(2 2)</code>を評価しようとするが2は手続きでないためエラーとなり終了する．</p>\n\n","slug":"SICP 問題1.34"},{"data":{"title":"SICP 問題1.33","published":"2015/10/08","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; 再帰的プロセスで</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>filtered-accumulate <span class=\"synIdentifier\">filter</span> combiner null-value term a next b<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">&gt;</span> a b<span class=\"synSpecial\">)</span> null-value<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">filter</span> a<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>combiner <span class=\"synSpecial\">(</span>term a<span class=\"synSpecial\">)</span>\n                              <span class=\"synSpecial\">(</span>filtered-accumulate <span class=\"synIdentifier\">filter</span> combiner null-value\n                                                   term <span class=\"synSpecial\">(</span>next a<span class=\"synSpecial\">)</span> next b<span class=\"synSpecial\">)))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span>filterd-accumulate <span class=\"synIdentifier\">filter</span> combiner null-value term <span class=\"synSpecial\">(</span>next a<span class=\"synSpecial\">)</span> next b<span class=\"synSpecial\">))))</span>\n\n<span class=\"synComment\">;; 反復的プロセスで</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>filtered-accumulate <span class=\"synIdentifier\">filter</span> combiner null-value term a next b<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter a result<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">&gt;</span> a b<span class=\"synSpecial\">)</span> result<span class=\"synSpecial\">)</span>\n          <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">filter</span> a<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span>next a<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>combiner <span class=\"synSpecial\">(</span>term a<span class=\"synSpecial\">)</span> result<span class=\"synSpecial\">)))</span>\n          <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span>next a<span class=\"synSpecial\">)</span> result<span class=\"synSpecial\">))))</span>\n  <span class=\"synSpecial\">(</span>iter a null-value<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>sum-prime-square a b<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>filtered-accumulate prime? <span class=\"synIdentifier\">+</span> <span class=\"synConstant\">0</span> <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>a<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>square a<span class=\"synSpecial\">))</span> a <span class=\"synConstant\">1+</span> b<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>product-disjoint-n n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>disjoint-n? a<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">gcd</span> a b<span class=\"synSpecial\">)</span>\n      <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> b <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span>\n          a\n          <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">gcd</span> b <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">remainder</span> a b<span class=\"synSpecial\">))))</span>\n    <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">gcd</span> a n<span class=\"synSpecial\">)</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">(</span>filtered-accumulate disjoint-n? <span class=\"synIdentifier\">*</span> <span class=\"synConstant\">1</span> <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>a<span class=\"synSpecial\">)</span> a<span class=\"synSpecial\">)</span> <span class=\"synConstant\">1</span> <span class=\"synConstant\">1+</span> n<span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題1.33"},{"data":{"title":"SICP 問題1.32","published":"2015/10/08","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; 再帰的プロセスで</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>accumulate combiner null-value term a next b<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&gt;</span> a b<span class=\"synSpecial\">)</span>\n      null-value\n      <span class=\"synSpecial\">(</span>combiner <span class=\"synSpecial\">(</span>term a<span class=\"synSpecial\">)</span>\n                <span class=\"synSpecial\">(</span>accumulate combiner null-value term <span class=\"synSpecial\">(</span>next a<span class=\"synSpecial\">)</span> next b<span class=\"synSpecial\">))))</span>\n\n<span class=\"synComment\">;; 反復的プロセスで</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>accumulate combiner null-value term a next b<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter a result<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&gt;</span> a b<span class=\"synSpecial\">)</span>\n        result\n        <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span>next a<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>combiner <span class=\"synSpecial\">(</span>term a<span class=\"synSpecial\">)</span> result<span class=\"synSpecial\">))))</span>\n  <span class=\"synSpecial\">(</span>iter a null-value<span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題1.32"},{"data":{"title":"SICP 問題1.31","published":"2015/10/08","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synComment\">;; 再帰的プロセスでproduct</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>product term a next b<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&gt;</span> a b<span class=\"synSpecial\">)</span>\n      <span class=\"synConstant\">0</span>\n      <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synSpecial\">(</span>term a<span class=\"synSpecial\">)</span>\n         <span class=\"synSpecial\">(</span>product term <span class=\"synSpecial\">(</span>next a<span class=\"synSpecial\">)</span> next b<span class=\"synSpecial\">))))</span>\n\n<span class=\"synComment\">;; 反復的プロセスでproduct</span>\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>product term a next b<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter a result<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&gt;</span> a b<span class=\"synSpecial\">)</span>\n        result\n        <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span>next a<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synSpecial\">(</span>term a<span class=\"synSpecial\">)</span> result<span class=\"synSpecial\">))))</span>\n  <span class=\"synSpecial\">(</span>iter a <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>factorial n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span>product identity <span class=\"synConstant\">1</span> <span class=\"synConstant\">1+</span> n<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>pi-product n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>term i<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">odd?</span> i<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> i <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> i <span class=\"synConstant\">2</span><span class=\"synSpecial\">))</span>\n        <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> i <span class=\"synConstant\">2</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> i <span class=\"synConstant\">1</span><span class=\"synSpecial\">))))</span>\n    <span class=\"synSpecial\">(</span>product term <span class=\"synConstant\">1</span> <span class=\"synConstant\">1+</span> n<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>pi n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synConstant\">4</span> <span class=\"synSpecial\">(</span>pi-product n<span class=\"synSpecial\">)))</span>\n</pre>\n\n\n","slug":"SICP 問題1.31"},{"data":{"title":"SICP 問題1.30","published":"2015/10/07","tags":["scheme","SICP"]},"content":"\n<p>sumを末尾<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BA%C6%B5%A2\">再帰</a>で書き直す</p>\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>sum term a next b<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter a result<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">&gt;</span> a b<span class=\"synSpecial\">)</span>\n        result\n        <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span>next a<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span>term a<span class=\"synSpecial\">)</span> result<span class=\"synSpecial\">))))</span>\n  <span class=\"synSpecial\">(</span>iter a <span class=\"synConstant\">0</span><span class=\"synSpecial\">))</span>\n</pre>\n\n\n","slug":"SICP 問題1.30"},{"data":{"title":"SICP 問題1.29","published":"2015/10/07","tags":["scheme","SICP"]},"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>integral-simpson f a b n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> h <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">-</span> b a<span class=\"synSpecial\">)</span> n<span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>y k<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span>f <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> a <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> k h<span class=\"synSpecial\">))))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>next i<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> i <span class=\"synConstant\">1</span><span class=\"synSpecial\">))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>term i<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synStatement\">or</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> i <span class=\"synConstant\">0</span><span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">=</span> i n<span class=\"synSpecial\">))</span> <span class=\"synConstant\">1</span><span class=\"synSpecial\">)</span>\n             <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">even?</span> i<span class=\"synSpecial\">)</span> <span class=\"synConstant\">2</span><span class=\"synSpecial\">)</span>\n             <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synConstant\">4</span><span class=\"synSpecial\">))</span>\n       <span class=\"synSpecial\">(</span>y i<span class=\"synSpecial\">)))</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">/</span> h <span class=\"synConstant\">3.0</span><span class=\"synSpecial\">)</span>\n     <span class=\"synSpecial\">(</span>sum term\n          a\n          next\n          n<span class=\"synSpecial\">)))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (integral-simpson cube 0 1 100)\n0.25\ngosh&gt; (integral-simpson cube 0 1 1000)\n0.25</pre>\n\n\n","slug":"SICP 問題1.29"}],"page":19},"__N_SSG":true}