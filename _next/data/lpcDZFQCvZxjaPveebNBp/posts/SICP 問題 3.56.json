{"pageProps":{"title":"SICP 問題 3.56","published":"2015/12/09","tags":["scheme","SICP"],"content":"<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>merge s1 s2<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span>stream-null? s1<span class=\"synSpecial\">)</span> s2<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">((</span>stream-null? s2<span class=\"synSpecial\">)</span> s1<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>s1car <span class=\"synSpecial\">(</span>stream-car s1<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">                    <span class=\"synSpecial\">(</span>s2car <span class=\"synSpecial\">(</span>stream-car s2<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">                <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">&#x3C;</span> s1car s2car<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                       <span class=\"synSpecial\">(</span>cons-stream s1car\n</span><span class=\"code-line\">                                    <span class=\"synSpecial\">(</span>merge <span class=\"synSpecial\">(</span>stream-cdr s1<span class=\"synSpecial\">)</span> s2<span class=\"synSpecial\">)))</span>\n</span><span class=\"code-line\">                      <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">></span> s1car s2car<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                       <span class=\"synSpecial\">(</span>cons-stream s2car\n</span><span class=\"code-line\">                                    <span class=\"synSpecial\">(</span>merge s1 <span class=\"synSpecial\">(</span>stream-cdr s2<span class=\"synSpecial\">))))</span>\n</span><span class=\"code-line\">                      <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span>\n</span><span class=\"code-line\">                       <span class=\"synSpecial\">(</span>cons-stream s1car\n</span><span class=\"code-line\">                                    <span class=\"synSpecial\">(</span>merge <span class=\"synSpecial\">(</span>stream-cdr s1<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                                           <span class=\"synSpecial\">(</span>stream-cdr s2<span class=\"synSpecial\">)))))))))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> S <span class=\"synSpecial\">(</span>cons-stream <span class=\"synConstant\">1</span> <span class=\"synSpecial\">(</span>merge <span class=\"synSpecial\">(</span>scale-stream S <span class=\"synConstant\">2</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                                <span class=\"synSpecial\">(</span>merge <span class=\"synSpecial\">(</span>scale-stream S <span class=\"synConstant\">3</span><span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">                                       <span class=\"synSpecial\">(</span>scale-stream S <span class=\"synConstant\">5</span><span class=\"synSpecial\">)))))</span>\n</span></code></pre>\n<pre class=\"code\" data-lang=\"\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">gosh> (stream-ref S 0)\n</span><span class=\"code-line\">1\n</span><span class=\"code-line\">gosh> (stream-ref S 1)\n</span><span class=\"code-line\">2\n</span><span class=\"code-line\">gosh> (stream-ref S 2)\n</span><span class=\"code-line\">3\n</span><span class=\"code-line\">gosh> (stream-ref S 3)\n</span><span class=\"code-line\">4\n</span><span class=\"code-line\">gosh> (stream-ref S 4)\n</span><span class=\"code-line\">5\n</span><span class=\"code-line\">gosh> (stream-ref S 5)\n</span><span class=\"code-line\">6\n</span><span class=\"code-line\">gosh> (stream-ref S 6)\n</span><span class=\"code-line\">8\n</span><span class=\"code-line\">gosh> (stream-ref S 7)\n</span><span class=\"code-line\">9\n</span><span class=\"code-line\">gosh> (stream-ref S 8)\n</span><span class=\"code-line\">10</span></code></pre>","slug":"SICP 問題 3.56","rawContent":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>merge s1 s2<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span>stream-null? s1<span class=\"synSpecial\">)</span> s2<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">((</span>stream-null? s2<span class=\"synSpecial\">)</span> s1<span class=\"synSpecial\">)</span>\n        <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span><span class=\"synStatement\">let</span> <span class=\"synSpecial\">((</span>s1car <span class=\"synSpecial\">(</span>stream-car s1<span class=\"synSpecial\">))</span>\n                    <span class=\"synSpecial\">(</span>s2car <span class=\"synSpecial\">(</span>stream-car s2<span class=\"synSpecial\">)))</span>\n                <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">&lt;</span> s1car s2car<span class=\"synSpecial\">)</span>\n                       <span class=\"synSpecial\">(</span>cons-stream s1car\n                                    <span class=\"synSpecial\">(</span>merge <span class=\"synSpecial\">(</span>stream-cdr s1<span class=\"synSpecial\">)</span> s2<span class=\"synSpecial\">)))</span>\n                      <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">&gt;</span> s1car s2car<span class=\"synSpecial\">)</span>\n                       <span class=\"synSpecial\">(</span>cons-stream s2car\n                                    <span class=\"synSpecial\">(</span>merge s1 <span class=\"synSpecial\">(</span>stream-cdr s2<span class=\"synSpecial\">))))</span>\n                      <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span>\n                       <span class=\"synSpecial\">(</span>cons-stream s1car\n                                    <span class=\"synSpecial\">(</span>merge <span class=\"synSpecial\">(</span>stream-cdr s1<span class=\"synSpecial\">)</span>\n                                           <span class=\"synSpecial\">(</span>stream-cdr s2<span class=\"synSpecial\">)))))))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> S <span class=\"synSpecial\">(</span>cons-stream <span class=\"synConstant\">1</span> <span class=\"synSpecial\">(</span>merge <span class=\"synSpecial\">(</span>scale-stream S <span class=\"synConstant\">2</span><span class=\"synSpecial\">)</span>\n                                <span class=\"synSpecial\">(</span>merge <span class=\"synSpecial\">(</span>scale-stream S <span class=\"synConstant\">3</span><span class=\"synSpecial\">)</span>\n                                       <span class=\"synSpecial\">(</span>scale-stream S <span class=\"synConstant\">5</span><span class=\"synSpecial\">)))))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (stream-ref S 0)\n1\ngosh&gt; (stream-ref S 1)\n2\ngosh&gt; (stream-ref S 2)\n3\ngosh&gt; (stream-ref S 3)\n4\ngosh&gt; (stream-ref S 4)\n5\ngosh&gt; (stream-ref S 5)\n6\ngosh&gt; (stream-ref S 6)\n8\ngosh&gt; (stream-ref S 7)\n9\ngosh&gt; (stream-ref S 8)\n10</pre>\n\n\n"},"__N_SSG":true}