{"pageProps":{"post":{"title":"SICP 問題 2.34","published":"2015/10/21","tags":["scheme","SICP"],"content":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>accumulate op initial sequence<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> sequence<span class=\"synSpecial\">)</span>\n      initial\n      <span class=\"synSpecial\">(</span>op <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> sequence<span class=\"synSpecial\">)</span>\n          <span class=\"synSpecial\">(</span>accumulate op initial <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> sequence<span class=\"synSpecial\">)))))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>horner-eval x coefficient-sequence<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter lis res<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">null?</span> lis<span class=\"synSpecial\">)</span> res<span class=\"synSpecial\">)</span>\n          <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> lis<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> lis<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> x res<span class=\"synSpecial\">))))))</span>\n  <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">reverse</span> coefficient-sequence<span class=\"synSpecial\">)</span> <span class=\"synConstant\">0</span><span class=\"synSpecial\">))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>gosh&gt; (horner-eval 2 (list 1 3 0 5 0 1))\n79</pre>\n\n\n","slug":"SICP 問題 2.34"},"content":"<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>accumulate op initial sequence<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">if</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">null?</span> sequence<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">      initial\n</span><span class=\"code-line\">      <span class=\"synSpecial\">(</span>op <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> sequence<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">          <span class=\"synSpecial\">(</span>accumulate op initial <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> sequence<span class=\"synSpecial\">)))))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>horner-eval x coefficient-sequence<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>iter lis res<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span><span class=\"synStatement\">cond</span> <span class=\"synSpecial\">((</span><span class=\"synIdentifier\">null?</span> lis<span class=\"synSpecial\">)</span> res<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">          <span class=\"synSpecial\">(</span><span class=\"synStatement\">else</span> <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">cdr</span> lis<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">car</span> lis<span class=\"synSpecial\">)</span> <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">*</span> x res<span class=\"synSpecial\">))))))</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span>iter <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">reverse</span> coefficient-sequence<span class=\"synSpecial\">)</span> <span class=\"synConstant\">0</span><span class=\"synSpecial\">))</span>\n</span></code></pre>\n<pre class=\"code\" data-lang=\"\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">gosh> (horner-eval 2 (list 1 3 0 5 0 1))\n</span><span class=\"code-line\">79</span></code></pre>"},"__N_SSG":true}