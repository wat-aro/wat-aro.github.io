{"pageProps":{"title":"SICP 問題1.41","published":"2015/10/09","tags":["scheme","SICP"],"content":"<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>inc n<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">1</span> n<span class=\"synSpecial\">))</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>double f<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n</span><span class=\"code-line\">    <span class=\"synSpecial\">(</span>f <span class=\"synSpecial\">(</span>f x<span class=\"synSpecial\">))))</span>\n</span></code></pre>\n<pre class=\"code\" data-lang=\"\" data-unlink=\"\"><code class=\"code-highlight\"><span class=\"code-line\">(define D double)\n</span><span class=\"code-line\">(define DD (D D))\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">(((D (D D)) inc) 5)\n</span><span class=\"code-line\">(((D DD) inc) 5)\n</span><span class=\"code-line\">((DD (DD inc)) 5)\n</span><span class=\"code-line\">((DD (D (D inc))))\n</span><span class=\"code-line\">((D (D (D (D inc)))) 5)\n</span><span class=\"code-line\">((D (D (D (lambda (x) (+ 2 x))))) 5)\n</span><span class=\"code-line\">((D (D (lambda (x) (+ 4 x)))) 5)\n</span><span class=\"code-line\">((D (lambda (x) (+ 8 x))) 5)\n</span><span class=\"code-line\">((lambda (x) (+ 16 x)) 5)\n</span><span class=\"code-line\">(+ 16 5)\n</span><span class=\"code-line\">21\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">gosh> (((double (double double)) inc) 5)\n</span><span class=\"code-line\">21</span></code></pre>","slug":"SICP 問題1.41","rawContent":"\n\n<pre class=\"code lang-scheme\" data-lang=\"scheme\" data-unlink><span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>inc n<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synIdentifier\">+</span> <span class=\"synConstant\">1</span> n<span class=\"synSpecial\">))</span>\n\n<span class=\"synSpecial\">(</span><span class=\"synStatement\">define</span> <span class=\"synSpecial\">(</span>double f<span class=\"synSpecial\">)</span>\n  <span class=\"synSpecial\">(</span><span class=\"synStatement\">lambda</span> <span class=\"synSpecial\">(</span>x<span class=\"synSpecial\">)</span>\n    <span class=\"synSpecial\">(</span>f <span class=\"synSpecial\">(</span>f x<span class=\"synSpecial\">))))</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>(define D double)\n(define DD (D D))\n\n(((D (D D)) inc) 5)\n(((D DD) inc) 5)\n((DD (DD inc)) 5)\n((DD (D (D inc))))\n((D (D (D (D inc)))) 5)\n((D (D (D (lambda (x) (+ 2 x))))) 5)\n((D (D (lambda (x) (+ 4 x)))) 5)\n((D (lambda (x) (+ 8 x))) 5)\n((lambda (x) (+ 16 x)) 5)\n(+ 16 5)\n21\n\n\ngosh&gt; (((double (double double)) inc) 5)\n21</pre>\n\n\n"},"__N_SSG":true}